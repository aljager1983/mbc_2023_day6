import type { Principal } from "@dfinity/principal";
import type { AccountIdentifier as AccountIdentifierCandid } from "../candid/governance";
import { AccountIdentifier as AccountIdentifierPb } from "../proto/ledger_pb";
export declare class AccountIdentifier {
    private readonly bytes;
    private constructor();
    static fromHex(hex: string): AccountIdentifier;
    static fromPrincipal({ principal, subAccount, }: {
        principal: Principal;
        subAccount?: SubAccount;
    }): AccountIdentifier;
    /**
     * @returns An AccountIdentifier protobuf object.
     */
    toProto(): AccountIdentifierPb;
    toHex(): string;
    toUint8Array(): Uint8Array;
    toNumbers(): number[];
    toAccountIdentifierHash(): AccountIdentifierCandid;
}
export declare class SubAccount {
    private readonly bytes;
    private constructor();
    static fromBytes(bytes: Uint8Array): SubAccount | Error;
    static fromPrincipal(principal: Principal): SubAccount;
    static fromID(id: number): SubAccount;
    static ZERO: SubAccount;
    toUint8Array(): Uint8Array;
}
