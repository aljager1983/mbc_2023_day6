import{d as P}from"./chunk-H6Y4RZE2.js";import{createServices as W}from"@dfinity/utils";var T=({IDL:e})=>{let s=e.Record({access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),t=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),n=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(t)}),o=e.Record({message:e.Text}),c=e.Variant({Error:o,Hash:e.Vec(e.Nat8)}),p=e.Record({result:e.Opt(c)}),_=e.Record({total_e8s:e.Nat64}),r=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64}),d=e.Record({developer_neurons:e.Vec(r)}),l=e.Record({airdrop_neurons:e.Vec(r)}),u=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),m=e.Record({treasury_distribution:e.Opt(_),developer_distribution:e.Opt(d),airdrop_distribution:e.Opt(l),swap_distribution:e.Opt(u)}),R=e.Variant({FractionalDeveloperVotingPower:m}),O=e.Record({url:e.Opt(e.Text),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),neuron_minimum_stake_e8s:e.Opt(e.Nat64),logo:e.Opt(e.Text),name:e.Opt(e.Text),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),transaction_fee_e8s:e.Opt(e.Nat64),sns_initialization_parameters:e.Opt(e.Text),initial_token_distribution:e.Opt(R),token_name:e.Opt(e.Text),proposal_reject_cost_e8s:e.Opt(e.Nat64)}),N=e.Record({sns_init_payload:e.Opt(O)}),y=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),S=e.Record({subnet_id:e.Opt(e.Principal),error:e.Opt(o),canisters:e.Opt(y)}),i=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8)}),v=e.Record({current_version:e.Opt(i)}),V=e.Record({next_version:e.Opt(i)}),w=e.Record({hash:e.Vec(e.Nat8)}),b=e.Record({wasm:e.Opt(t)}),x=e.Record({root_canister_id:e.Opt(e.Principal)}),h=e.Record({instances:e.Vec(x)});return e.Service({add_wasm:e.Func([n],[p],[]),deploy_new_sns:e.Func([N],[S],[]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],[]),get_next_sns_version:e.Func([v],[V],[]),get_wasm:e.Func([w],[b],[]),list_deployed_snses:e.Func([e.Record({})],[h],[])})};var g=({IDL:e})=>{let s=e.Record({access_controls_enabled:e.Bool,sns_subnet_ids:e.Vec(e.Principal)}),t=e.Record({wasm:e.Vec(e.Nat8),canister_type:e.Int32}),n=e.Record({hash:e.Vec(e.Nat8),wasm:e.Opt(t)}),o=e.Record({message:e.Text}),c=e.Variant({Error:o,Hash:e.Vec(e.Nat8)}),p=e.Record({result:e.Opt(c)}),_=e.Record({total_e8s:e.Nat64}),r=e.Record({controller:e.Opt(e.Principal),dissolve_delay_seconds:e.Nat64,memo:e.Nat64,stake_e8s:e.Nat64}),d=e.Record({developer_neurons:e.Vec(r)}),l=e.Record({airdrop_neurons:e.Vec(r)}),u=e.Record({total_e8s:e.Nat64,initial_swap_amount_e8s:e.Nat64}),m=e.Record({treasury_distribution:e.Opt(_),developer_distribution:e.Opt(d),airdrop_distribution:e.Opt(l),swap_distribution:e.Opt(u)}),R=e.Variant({FractionalDeveloperVotingPower:m}),O=e.Record({url:e.Opt(e.Text),fallback_controller_principal_ids:e.Vec(e.Text),token_symbol:e.Opt(e.Text),neuron_minimum_stake_e8s:e.Opt(e.Nat64),logo:e.Opt(e.Text),name:e.Opt(e.Text),neuron_minimum_dissolve_delay_to_vote_seconds:e.Opt(e.Nat64),description:e.Opt(e.Text),transaction_fee_e8s:e.Opt(e.Nat64),sns_initialization_parameters:e.Opt(e.Text),initial_token_distribution:e.Opt(R),token_name:e.Opt(e.Text),proposal_reject_cost_e8s:e.Opt(e.Nat64)}),N=e.Record({sns_init_payload:e.Opt(O)}),y=e.Record({root:e.Opt(e.Principal),swap:e.Opt(e.Principal),ledger:e.Opt(e.Principal),governance:e.Opt(e.Principal)}),S=e.Record({subnet_id:e.Opt(e.Principal),error:e.Opt(o),canisters:e.Opt(y)}),i=e.Record({archive_wasm_hash:e.Vec(e.Nat8),root_wasm_hash:e.Vec(e.Nat8),swap_wasm_hash:e.Vec(e.Nat8),ledger_wasm_hash:e.Vec(e.Nat8),governance_wasm_hash:e.Vec(e.Nat8)}),v=e.Record({current_version:e.Opt(i)}),V=e.Record({next_version:e.Opt(i)}),w=e.Record({hash:e.Vec(e.Nat8)}),b=e.Record({wasm:e.Opt(t)}),x=e.Record({root_canister_id:e.Opt(e.Principal)}),h=e.Record({instances:e.Vec(x)});return e.Service({add_wasm:e.Func([n],[p],[]),deploy_new_sns:e.Func([N],[S],[]),get_latest_sns_version_pretty:e.Func([e.Null],[e.Vec(e.Tuple(e.Text,e.Text))],["query"]),get_next_sns_version:e.Func([v],[V],["query"]),get_wasm:e.Func([w],[b],["query"]),list_deployed_snses:e.Func([e.Record({})],[h],["query"])})};var a=class{constructor(s,t){this.service=s;this.certifiedService=t}static create(s={}){let{service:t,certifiedService:n}=W({options:{...s,canisterId:s.canisterId??P},idlFactory:g,certifiedIdlFactory:T});return new a(t,n)}listSnses=async({certified:s=!0})=>{let t=s?this.certifiedService:this.service,{instances:n}=await t.list_deployed_snses({});return n}};export{a};
//# sourceMappingURL=chunk-5S3NUDW3.js.map
