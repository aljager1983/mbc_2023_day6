{
  "version": 3,
  "sources": ["../../../../node_modules/buffer/index.js", "../../../../node_modules/safe-buffer/index.js", "../../../../node_modules/randombytes/browser.js", "../../proto/governance_pb.js", "../../src/governance.canister.ts", "../../candid/governance.certified.idl.js", "../../candid/governance.idl.js", "../../src/canisters/governance/request.converters.ts", "../../src/errors/governance.errors.ts", "../../src/utils/account_identifier.utils.ts", "../../src/canisters/governance/request.proto.converters.ts", "../../src/canisters/governance/response.converters.ts", "../../src/enums/governance.enums.ts", "../../src/canisters/governance/response.proto.converters.ts", "../../src/canisters/governance/services.ts", "../../src/utils/accounts.utils.ts", "../../src/utils/number.utils.ts"],
  "sourcesContent": ["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n", "// source: governance.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() {\n  if (this) { return this; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  if (typeof self !== 'undefined') { return self; }\n  return Function('return this')();\n}.call(null));\n\nvar base_types_pb = require('./base_types_pb.js');\ngoog.object.extend(proto, base_types_pb);\nvar ledger_pb = require('./ledger_pb.js');\ngoog.object.extend(proto, ledger_pb);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.BallotInfo', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.GovernanceError', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ListNeurons', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ListNeuronsResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Configure', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Follow', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Merge', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.Neuron', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.Neuron.Followees', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.NeuronInfo', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.NeuronStakeTransfer', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.Topic', null, global);\ngoog.exportSymbol('proto.ic_nns_governance.pb.v1.Vote', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Configure, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Configure';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.repeatedFields_, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Follow, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Follow';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.Merge, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.Merge';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.displayName = 'proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.GovernanceError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.GovernanceError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.GovernanceError.displayName = 'proto.ic_nns_governance.pb.v1.GovernanceError';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ListNeurons = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.ListNeurons.repeatedFields_, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ListNeurons, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ListNeurons.displayName = 'proto.ic_nns_governance.pb.v1.ListNeurons';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.ListNeuronsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ListNeuronsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ListNeuronsResponse.displayName = 'proto.ic_nns_governance.pb.v1.ListNeuronsResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.displayName = 'proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.BallotInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.BallotInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.BallotInfo.displayName = 'proto.ic_nns_governance.pb.v1.BallotInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.NeuronInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.NeuronInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.NeuronInfo.displayName = 'proto.ic_nns_governance.pb.v1.NeuronInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.Neuron = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.Neuron.repeatedFields_, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.Neuron, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.Neuron.displayName = 'proto.ic_nns_governance.pb.v1.Neuron';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.ic_nns_governance.pb.v1.Neuron.Followees.repeatedFields_, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.Neuron.Followees, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.Neuron.Followees.displayName = 'proto.ic_nns_governance.pb.v1.Neuron.Followees';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ic_nns_governance.pb.v1.NeuronStakeTransfer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.displayName = 'proto.ic_nns_governance.pb.v1.NeuronStakeTransfer';\n}\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_ = [[11,12],[2,3,4,5,7,13,14]];\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase = {\n  NEURON_ID_OR_SUBACCOUNT_NOT_SET: 0,\n  SUBACCOUNT: 11,\n  NEURON_ID: 12\n};\n\n/**\n * @return {proto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getNeuronIdOrSubaccountCase = function() {\n  return /** @type {proto.ic_nns_governance.pb.v1.ManageNeuron.NeuronIdOrSubaccountCase} */(jspb.Message.computeOneofCase(this, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0]));\n};\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase = {\n  COMMAND_NOT_SET: 0,\n  CONFIGURE: 2,\n  DISBURSE: 3,\n  SPAWN: 4,\n  FOLLOW: 5,\n  REGISTER_VOTE: 7,\n  MERGE_MATURITY: 13,\n  MERGE: 14\n};\n\n/**\n * @return {proto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getCommandCase = function() {\n  return /** @type {proto.ic_nns_governance.pb.v1.ManageNeuron.CommandCase} */(jspb.Message.computeOneofCase(this, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: (f = msg.getId()) && base_types_pb.NeuronId.toObject(includeInstance, f),\n    subaccount: msg.getSubaccount_asB64(),\n    neuronId: (f = msg.getNeuronId()) && base_types_pb.NeuronId.toObject(includeInstance, f),\n    configure: (f = msg.getConfigure()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject(includeInstance, f),\n    disburse: (f = msg.getDisburse()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject(includeInstance, f),\n    spawn: (f = msg.getSpawn()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject(includeInstance, f),\n    follow: (f = msg.getFollow()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject(includeInstance, f),\n    registerVote: (f = msg.getRegisterVote()) && proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject(includeInstance, f),\n    mergeMaturity: (f = msg.getMergeMaturity()) && proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject(includeInstance, f),\n    merge: (f = msg.getMerge()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.setId(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSubaccount(value);\n      break;\n    case 12:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.setNeuronId(value);\n      break;\n    case 2:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Configure;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader);\n      msg.setConfigure(value);\n      break;\n    case 3:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader);\n      msg.setDisburse(value);\n      break;\n    case 4:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader);\n      msg.setSpawn(value);\n      break;\n    case 5:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Follow;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader);\n      msg.setFollow(value);\n      break;\n    case 7:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader);\n      msg.setRegisterVote(value);\n      break;\n    case 13:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader);\n      msg.setMergeMaturity(value);\n      break;\n    case 14:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Merge;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader);\n      msg.setMerge(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));\n  if (f != null) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getNeuronId();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfigure();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter\n    );\n  }\n  f = message.getDisburse();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter\n    );\n  }\n  f = message.getSpawn();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter\n    );\n  }\n  f = message.getFollow();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter\n    );\n  }\n  f = message.getRegisterVote();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter\n    );\n  }\n  f = message.getMergeMaturity();\n  if (f != null) {\n    writer.writeMessage(\n      13,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter\n    );\n  }\n  f = message.getMerge();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    additionalDissolveDelaySeconds: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setAdditionalDissolveDelaySeconds(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAdditionalDissolveDelaySeconds();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 additional_dissolve_delay_seconds = 1;\n * @return {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.getAdditionalDissolveDelaySeconds = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.prototype.setAdditionalDissolveDelaySeconds = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    newHotKey: (f = msg.getNewHotKey()) && base_types_pb.PrincipalId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.setNewHotKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNewHotKey();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.PrincipalId new_hot_key = 1;\n * @return {?proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.getNewHotKey = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.PrincipalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.PrincipalId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.PrincipalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.setNewHotKey = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.clearNewHotKey = function() {\n  return this.setNewHotKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.prototype.hasNewHotKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hotKeyToRemove: (f = msg.getHotKeyToRemove()) && base_types_pb.PrincipalId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.setHotKeyToRemove(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHotKeyToRemove();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.PrincipalId hot_key_to_remove = 1;\n * @return {?proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.getHotKeyToRemove = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.PrincipalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.PrincipalId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.PrincipalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.setHotKeyToRemove = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.clearHotKeyToRemove = function() {\n  return this.setHotKeyToRemove(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.prototype.hasHotKeyToRemove = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_ = [[1,2,3,4,5,7]];\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase = {\n  OPERATION_NOT_SET: 0,\n  INCREASE_DISSOLVE_DELAY: 1,\n  START_DISSOLVING: 2,\n  STOP_DISSOLVING: 3,\n  ADD_HOT_KEY: 4,\n  REMOVE_HOT_KEY: 5,\n  JOIN_COMMUNITY_FUND: 7\n};\n\n/**\n * @return {proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getOperationCase = function() {\n  return /** @type {proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.OperationCase} */(jspb.Message.computeOneofCase(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    increaseDissolveDelay: (f = msg.getIncreaseDissolveDelay()) && proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.toObject(includeInstance, f),\n    startDissolving: (f = msg.getStartDissolving()) && proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.toObject(includeInstance, f),\n    stopDissolving: (f = msg.getStopDissolving()) && proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.toObject(includeInstance, f),\n    addHotKey: (f = msg.getAddHotKey()) && proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.toObject(includeInstance, f),\n    removeHotKey: (f = msg.getRemoveHotKey()) && proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.toObject(includeInstance, f),\n    joinCommunityFund: (f = msg.getJoinCommunityFund()) && proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Configure;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.deserializeBinaryFromReader);\n      msg.setIncreaseDissolveDelay(value);\n      break;\n    case 2:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.deserializeBinaryFromReader);\n      msg.setStartDissolving(value);\n      break;\n    case 3:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.deserializeBinaryFromReader);\n      msg.setStopDissolving(value);\n      break;\n    case 4:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.deserializeBinaryFromReader);\n      msg.setAddHotKey(value);\n      break;\n    case 5:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.deserializeBinaryFromReader);\n      msg.setRemoveHotKey(value);\n      break;\n    case 7:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader);\n      msg.setJoinCommunityFund(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncreaseDissolveDelay();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay.serializeBinaryToWriter\n    );\n  }\n  f = message.getStartDissolving();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving.serializeBinaryToWriter\n    );\n  }\n  f = message.getStopDissolving();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving.serializeBinaryToWriter\n    );\n  }\n  f = message.getAddHotKey();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoveHotKey();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey.serializeBinaryToWriter\n    );\n  }\n  f = message.getJoinCommunityFund();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional IncreaseDissolveDelay increase_dissolve_delay = 1;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getIncreaseDissolveDelay = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay, 1));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.IncreaseDissolveDelay|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setIncreaseDissolveDelay = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearIncreaseDissolveDelay = function() {\n  return this.setIncreaseDissolveDelay(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasIncreaseDissolveDelay = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional StartDissolving start_dissolving = 2;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getStartDissolving = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving, 2));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.StartDissolving|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setStartDissolving = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearStartDissolving = function() {\n  return this.setStartDissolving(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasStartDissolving = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional StopDissolving stop_dissolving = 3;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getStopDissolving = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving, 3));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.StopDissolving|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setStopDissolving = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearStopDissolving = function() {\n  return this.setStopDissolving(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasStopDissolving = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional AddHotKey add_hot_key = 4;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getAddHotKey = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey, 4));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.AddHotKey|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setAddHotKey = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearAddHotKey = function() {\n  return this.setAddHotKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasAddHotKey = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional RemoveHotKey remove_hot_key = 5;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getRemoveHotKey = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey, 5));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.RemoveHotKey|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setRemoveHotKey = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearRemoveHotKey = function() {\n  return this.setRemoveHotKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasRemoveHotKey = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional JoinCommunityFund join_community_fund = 7;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.getJoinCommunityFund = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund, 7));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.setJoinCommunityFund = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.clearJoinCommunityFund = function() {\n  return this.setJoinCommunityFund(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Configure.prototype.hasJoinCommunityFund = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    newController: (f = msg.getNewController()) && base_types_pb.PrincipalId.toObject(includeInstance, f),\n    nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    percentageToSpawn: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.setNewController(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNonce(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPercentageToSpawn(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNewController();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.PrincipalId new_controller = 1;\n * @return {?proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getNewController = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.PrincipalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.PrincipalId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.PrincipalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setNewController = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearNewController = function() {\n  return this.setNewController(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasNewController = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint64 nonce = 2;\n * @return {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getNonce = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setNonce = function(value) {\n  return jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearNonce = function() {\n  return jspb.Message.setField(this, 2, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasNonce = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 percentage_to_spawn = 3;\n * @return {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.getPercentageToSpawn = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.setPercentageToSpawn = function(value) {\n  return jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.clearPercentageToSpawn = function() {\n  return jspb.Message.setField(this, 3, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Spawn.prototype.hasPercentageToSpawn = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amount: (f = msg.getAmount()) && proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject(includeInstance, f),\n    toAccount: (f = msg.getToAccount()) && ledger_pb.AccountIdentifier.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader);\n      msg.setAmount(value);\n      break;\n    case 2:\n      var value = new ledger_pb.AccountIdentifier;\n      reader.readMessage(value,ledger_pb.AccountIdentifier.deserializeBinaryFromReader);\n      msg.setToAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getToAccount();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      ledger_pb.AccountIdentifier.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    e8s: jspb.Message.getFieldWithDefault(msg, 1, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setE8s(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 e8s = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.getE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount.prototype.setE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional Amount amount = 1;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.getAmount = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount, 1));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.Amount|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.setAmount = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.clearAmount = function() {\n  return this.setAmount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.hasAmount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ic_ledger.pb.v1.AccountIdentifier to_account = 2;\n * @return {?proto.ic_ledger.pb.v1.AccountIdentifier}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.getToAccount = function() {\n  return /** @type{?proto.ic_ledger.pb.v1.AccountIdentifier} */ (\n    jspb.Message.getWrapperField(this, ledger_pb.AccountIdentifier, 2));\n};\n\n\n/**\n * @param {?proto.ic_ledger.pb.v1.AccountIdentifier|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.setToAccount = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.clearToAccount = function() {\n  return this.setToAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Disburse.prototype.hasToAccount = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    followeesList: jspb.Message.toObjectList(msg.getFolloweesList(),\n    base_types_pb.NeuronId.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Follow;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.ic_nns_governance.pb.v1.Topic} */ (reader.readEnum());\n      msg.setTopic(value);\n      break;\n    case 2:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.addFollowees(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTopic();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getFolloweesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Topic topic = 1;\n * @return {!proto.ic_nns_governance.pb.v1.Topic}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.getTopic = function() {\n  return /** @type {!proto.ic_nns_governance.pb.v1.Topic} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.Topic} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.setTopic = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated ic_base_types.pb.v1.NeuronId followees = 2;\n * @return {!Array<!proto.ic_base_types.pb.v1.NeuronId>}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.getFolloweesList = function() {\n  return /** @type{!Array<!proto.ic_base_types.pb.v1.NeuronId>} */ (\n    jspb.Message.getRepeatedWrapperField(this, base_types_pb.NeuronId, 2));\n};\n\n\n/**\n * @param {!Array<!proto.ic_base_types.pb.v1.NeuronId>} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.setFolloweesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.ic_base_types.pb.v1.NeuronId=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.addFollowees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ic_base_types.pb.v1.NeuronId, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Follow.prototype.clearFolloweesList = function() {\n  return this.setFolloweesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposal: (f = msg.getProposal()) && base_types_pb.ProposalId.toObject(includeInstance, f),\n    vote: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.ProposalId;\n      reader.readMessage(value,base_types_pb.ProposalId.deserializeBinaryFromReader);\n      msg.setProposal(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.ic_nns_governance.pb.v1.Vote} */ (reader.readEnum());\n      msg.setVote(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposal();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.ProposalId.serializeBinaryToWriter\n    );\n  }\n  f = message.getVote();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.ProposalId proposal = 1;\n * @return {?proto.ic_base_types.pb.v1.ProposalId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.getProposal = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.ProposalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.ProposalId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.ProposalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.setProposal = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.clearProposal = function() {\n  return this.setProposal(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.hasProposal = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Vote vote = 2;\n * @return {!proto.ic_nns_governance.pb.v1.Vote}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.getVote = function() {\n  return /** @type {!proto.ic_nns_governance.pb.v1.Vote} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.Vote} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote.prototype.setVote = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sourceNeuronId: (f = msg.getSourceNeuronId()) && base_types_pb.NeuronId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.Merge;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.setSourceNeuronId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSourceNeuronId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.NeuronId source_neuron_id = 1;\n * @return {?proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.getSourceNeuronId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.NeuronId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.NeuronId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.NeuronId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.setSourceNeuronId = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.clearSourceNeuronId = function() {\n  return this.setSourceNeuronId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.Merge.prototype.hasSourceNeuronId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    percentageToMerge: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPercentageToMerge(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPercentageToMerge();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 percentage_to_merge = 1;\n * @return {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.getPercentageToMerge = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity.prototype.setPercentageToMerge = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund;\n  return proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.JoinCommunityFund.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * optional ic_base_types.pb.v1.NeuronId id = 1;\n * @return {?proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.NeuronId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.NeuronId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.NeuronId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setId = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearId = function() {\n  return this.setId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes subaccount = 11;\n * @return {!(string|Uint8Array)}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes subaccount = 11;\n * This is a type-conversion wrapper around `getSubaccount()`\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSubaccount()));\n};\n\n\n/**\n * optional bytes subaccount = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSubaccount()`\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSubaccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSubaccount()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setSubaccount = function(value) {\n  return jspb.Message.setOneofField(this, 11, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearSubaccount = function() {\n  return jspb.Message.setOneofField(this, 11, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasSubaccount = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional ic_base_types.pb.v1.NeuronId neuron_id = 12;\n * @return {?proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getNeuronId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.NeuronId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.NeuronId, 12));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.NeuronId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setNeuronId = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 12, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearNeuronId = function() {\n  return this.setNeuronId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasNeuronId = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional Configure configure = 2;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Configure}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getConfigure = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Configure} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Configure, 2));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Configure|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setConfigure = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearConfigure = function() {\n  return this.setConfigure(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasConfigure = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional Disburse disburse = 3;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getDisburse = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse, 3));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Disburse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setDisburse = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearDisburse = function() {\n  return this.setDisburse(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasDisburse = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Spawn spawn = 4;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getSpawn = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn, 4));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Spawn|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setSpawn = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearSpawn = function() {\n  return this.setSpawn(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasSpawn = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Follow follow = 5;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Follow}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getFollow = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Follow} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Follow, 5));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Follow|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setFollow = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearFollow = function() {\n  return this.setFollow(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasFollow = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional RegisterVote register_vote = 7;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getRegisterVote = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote, 7));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.RegisterVote|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setRegisterVote = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearRegisterVote = function() {\n  return this.setRegisterVote(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasRegisterVote = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional MergeMaturity merge_maturity = 13;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getMergeMaturity = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity, 13));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.MergeMaturity|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setMergeMaturity = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 13, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearMergeMaturity = function() {\n  return this.setMergeMaturity(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasMergeMaturity = function() {\n  return jspb.Message.getField(this, 13) != null;\n};\n\n\n/**\n * optional Merge merge = 14;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuron.Merge}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.getMerge = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuron.Merge} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuron.Merge, 14));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuron.Merge|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.setMerge = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 14, proto.ic_nns_governance.pb.v1.ManageNeuron.oneofGroups_[1], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuron} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.clearMerge = function() {\n  return this.setMerge(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuron.prototype.hasMerge = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_ = [[1,2,3,4,5,7,11,12]];\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase = {\n  COMMAND_NOT_SET: 0,\n  ERROR: 1,\n  CONFIGURE: 2,\n  DISBURSE: 3,\n  SPAWN: 4,\n  FOLLOW: 5,\n  REGISTER_VOTE: 7,\n  MERGE_MATURITY: 11,\n  MERGE: 12\n};\n\n/**\n * @return {proto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getCommandCase = function() {\n  return /** @type {proto.ic_nns_governance.pb.v1.ManageNeuronResponse.CommandCase} */(jspb.Message.computeOneofCase(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: (f = msg.getError()) && proto.ic_nns_governance.pb.v1.GovernanceError.toObject(includeInstance, f),\n    configure: (f = msg.getConfigure()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject(includeInstance, f),\n    disburse: (f = msg.getDisburse()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject(includeInstance, f),\n    spawn: (f = msg.getSpawn()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject(includeInstance, f),\n    follow: (f = msg.getFollow()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject(includeInstance, f),\n    registerVote: (f = msg.getRegisterVote()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject(includeInstance, f),\n    mergeMaturity: (f = msg.getMergeMaturity()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject(includeInstance, f),\n    merge: (f = msg.getMerge()) && proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ic_nns_governance.pb.v1.GovernanceError;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader);\n      msg.setError(value);\n      break;\n    case 2:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader);\n      msg.setConfigure(value);\n      break;\n    case 3:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader);\n      msg.setDisburse(value);\n      break;\n    case 4:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader);\n      msg.setSpawn(value);\n      break;\n    case 5:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader);\n      msg.setFollow(value);\n      break;\n    case 7:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader);\n      msg.setRegisterVote(value);\n      break;\n    case 11:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader);\n      msg.setMergeMaturity(value);\n      break;\n    case 12:\n      var value = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader);\n      msg.setMerge(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getError();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfigure();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getDisburse();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getSpawn();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getFollow();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getRegisterVote();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getMergeMaturity();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter\n    );\n  }\n  f = message.getMerge();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transferBlockHeight: jspb.Message.getFieldWithDefault(msg, 1, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setTransferBlockHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransferBlockHeight();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 transfer_block_height = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.getTransferBlockHeight = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse.prototype.setTransferBlockHeight = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    createdNeuronId: (f = msg.getCreatedNeuronId()) && base_types_pb.NeuronId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.setCreatedNeuronId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCreatedNeuronId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.NeuronId created_neuron_id = 1;\n * @return {?proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.getCreatedNeuronId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.NeuronId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.NeuronId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.NeuronId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.setCreatedNeuronId = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.clearCreatedNeuronId = function() {\n  return this.setCreatedNeuronId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse.prototype.hasCreatedNeuronId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mergedMaturityE8s: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    newStakeE8s: jspb.Message.getFieldWithDefault(msg, 2, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setMergedMaturityE8s(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setNewStakeE8s(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMergedMaturityE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getNewStakeE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 merged_maturity_e8s = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.getMergedMaturityE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.setMergedMaturityE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 new_stake_e8s = 2;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.getNewStakeE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse.prototype.setNewStakeE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse;\n  return proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n/**\n * optional GovernanceError error = 1;\n * @return {?proto.ic_nns_governance.pb.v1.GovernanceError}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getError = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.GovernanceError} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.GovernanceError, 1));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.GovernanceError|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setError = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearError = function() {\n  return this.setError(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasError = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ConfigureResponse configure = 2;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getConfigure = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse, 2));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.ConfigureResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setConfigure = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearConfigure = function() {\n  return this.setConfigure(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasConfigure = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional DisburseResponse disburse = 3;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getDisburse = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse, 3));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.DisburseResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setDisburse = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 3, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearDisburse = function() {\n  return this.setDisburse(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasDisburse = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional SpawnResponse spawn = 4;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getSpawn = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse, 4));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.SpawnResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setSpawn = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 4, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearSpawn = function() {\n  return this.setSpawn(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasSpawn = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional FollowResponse follow = 5;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getFollow = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse, 5));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.FollowResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setFollow = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 5, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearFollow = function() {\n  return this.setFollow(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasFollow = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional RegisterVoteResponse register_vote = 7;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getRegisterVote = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse, 7));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.RegisterVoteResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setRegisterVote = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 7, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearRegisterVote = function() {\n  return this.setRegisterVote(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasRegisterVote = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional MergeMaturityResponse merge_maturity = 11;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getMergeMaturity = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse, 11));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeMaturityResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setMergeMaturity = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 11, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearMergeMaturity = function() {\n  return this.setMergeMaturity(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasMergeMaturity = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n/**\n * optional MergeResponse merge = 12;\n * @return {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.getMerge = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse, 12));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.ManageNeuronResponse.MergeResponse|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.setMerge = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 12, proto.ic_nns_governance.pb.v1.ManageNeuronResponse.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ManageNeuronResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.clearMerge = function() {\n  return this.setMerge(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ManageNeuronResponse.prototype.hasMerge = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.GovernanceError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.GovernanceError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    errorType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    errorMessage: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.GovernanceError}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.GovernanceError;\n  return proto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.GovernanceError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.GovernanceError}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType} */ (reader.readEnum());\n      msg.setErrorType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setErrorMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.GovernanceError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getErrorType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getErrorMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.ErrorType = {\n  ERROR_TYPE_UNSPECIFIED: 0,\n  ERROR_TYPE_OK: 1,\n  ERROR_TYPE_UNAVAILABLE: 2,\n  ERROR_TYPE_NOT_AUTHORIZED: 3,\n  ERROR_TYPE_NOT_FOUND: 4,\n  ERROR_TYPE_INVALID_COMMAND: 5,\n  ERROR_TYPE_REQUIRES_NOT_DISSOLVING: 6,\n  ERROR_TYPE_REQUIRES_DISSOLVING: 7,\n  ERROR_TYPE_REQUIRES_DISSOLVED: 8,\n  ERROR_TYPE_HOT_KEY: 9,\n  ERROR_TYPE_RESOURCE_EXHAUSTED: 10,\n  ERROR_TYPE_PRECONDITION_FAILED: 11,\n  ERROR_TYPE_EXTERNAL: 12,\n  ERROR_TYPE_LEDGER_UPDATE_ONGOING: 13,\n  ERROR_TYPE_INSUFFICIENT_FUNDS: 14,\n  ERROR_TYPE_INVALID_PRINCIPAL: 15,\n  ERROR_TYPE_INVALID_PROPOSAL: 16,\n  ERROR_TYPE_ALREADY_JOINED_COMMUNITY_FUND: 17\n};\n\n/**\n * optional ErrorType error_type = 1;\n * @return {!proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.getErrorType = function() {\n  return /** @type {!proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.GovernanceError.ErrorType} value\n * @return {!proto.ic_nns_governance.pb.v1.GovernanceError} returns this\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.setErrorType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional string error_message = 2;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.getErrorMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.GovernanceError} returns this\n */\nproto.ic_nns_governance.pb.v1.GovernanceError.prototype.setErrorMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ListNeurons.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ListNeurons} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    neuronIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,\n    includeNeuronsReadableByCaller: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ListNeurons;\n  return proto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeurons} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<string>} */ (reader.isDelimited() ? reader.readPackedFixed64String() : [reader.readFixed64String()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addNeuronIds(values[i]);\n      }\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeNeuronsReadableByCaller(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ListNeurons.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeurons} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNeuronIdsList();\n  if (f.length > 0) {\n    writer.writePackedFixed64String(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeNeuronsReadableByCaller();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated fixed64 neuron_ids = 1;\n * @return {!Array<string>}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.getNeuronIdsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.setNeuronIdsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.addNeuronIds = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.clearNeuronIdsList = function() {\n  return this.setNeuronIdsList([]);\n};\n\n\n/**\n * optional bool include_neurons_readable_by_caller = 2;\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.getIncludeNeuronsReadableByCaller = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeurons} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeurons.prototype.setIncludeNeuronsReadableByCaller = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    neuronIdsList: jspb.Message.toObjectList(msg.getNeuronIdsList(),\n    proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject, includeInstance),\n    fullNeuronsList: jspb.Message.toObjectList(msg.getFullNeuronsList(),\n    proto.ic_nns_governance.pb.v1.Neuron.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ListNeuronsResponse;\n  return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader);\n      msg.addNeuronIds(value);\n      break;\n    case 2:\n      var value = new proto.ic_nns_governance.pb.v1.Neuron;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader);\n      msg.addFullNeurons(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ListNeuronsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNeuronIdsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter\n    );\n  }\n  f = message.getFullNeuronsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    value: (f = msg.getValue()) && proto.ic_nns_governance.pb.v1.NeuronInfo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry;\n  return proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readFixed64String());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = new proto.ic_nns_governance.pb.v1.NeuronInfo;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader);\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeFixed64String(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional fixed64 key = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.getKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.setKey = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional NeuronInfo value = 2;\n * @return {?proto.ic_nns_governance.pb.v1.NeuronInfo}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.getValue = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.NeuronInfo} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.NeuronInfo, 2));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.NeuronInfo|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} returns this\n*/\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.setValue = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.clearValue = function() {\n  return this.setValue(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry.prototype.hasValue = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * repeated NeuronMapEntry neuron_ids = 1;\n * @return {!Array<!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry>}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.getNeuronIdsList = function() {\n  return /** @type{!Array<!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry>} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.setNeuronIdsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.addNeuronIds = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ic_nns_governance.pb.v1.ListNeuronsResponse.NeuronMapEntry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.clearNeuronIdsList = function() {\n  return this.setNeuronIdsList([]);\n};\n\n\n/**\n * repeated Neuron full_neurons = 2;\n * @return {!Array<!proto.ic_nns_governance.pb.v1.Neuron>}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.getFullNeuronsList = function() {\n  return /** @type{!Array<!proto.ic_nns_governance.pb.v1.Neuron>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ic_nns_governance.pb.v1.Neuron, 2));\n};\n\n\n/**\n * @param {!Array<!proto.ic_nns_governance.pb.v1.Neuron>} value\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} returns this\n*/\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.setFullNeuronsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.Neuron=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_nns_governance.pb.v1.Neuron}\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.addFullNeurons = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ic_nns_governance.pb.v1.Neuron, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.ListNeuronsResponse} returns this\n */\nproto.ic_nns_governance.pb.v1.ListNeuronsResponse.prototype.clearFullNeuronsList = function() {\n  return this.setFullNeuronsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.BallotInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.BallotInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    proposalId: (f = msg.getProposalId()) && base_types_pb.ProposalId.toObject(includeInstance, f),\n    vote: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.BallotInfo;\n  return proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.BallotInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.ProposalId;\n      reader.readMessage(value,base_types_pb.ProposalId.deserializeBinaryFromReader);\n      msg.setProposalId(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.ic_nns_governance.pb.v1.Vote} */ (reader.readEnum());\n      msg.setVote(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.BallotInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProposalId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.ProposalId.serializeBinaryToWriter\n    );\n  }\n  f = message.getVote();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ic_base_types.pb.v1.ProposalId proposal_id = 1;\n * @return {?proto.ic_base_types.pb.v1.ProposalId}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.getProposalId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.ProposalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.ProposalId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.ProposalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo} returns this\n*/\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.setProposalId = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.clearProposalId = function() {\n  return this.setProposalId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.hasProposalId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Vote vote = 2;\n * @return {!proto.ic_nns_governance.pb.v1.Vote}\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.getVote = function() {\n  return /** @type {!proto.ic_nns_governance.pb.v1.Vote} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.Vote} value\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.BallotInfo.prototype.setVote = function(value) {\n  return jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.NeuronInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.NeuronInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    retrievedAtTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    ageSeconds: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\n    dissolveDelaySeconds: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    recentBallotsList: jspb.Message.toObjectList(msg.getRecentBallotsList(),\n    proto.ic_nns_governance.pb.v1.BallotInfo.toObject, includeInstance),\n    votingPower: jspb.Message.getFieldWithDefault(msg, 6, \"0\"),\n    createdTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 7, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.NeuronInfo;\n  return proto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.NeuronInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setRetrievedAtTimestampSeconds(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setAgeSeconds(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setDissolveDelaySeconds(value);\n      break;\n    case 5:\n      var value = new proto.ic_nns_governance.pb.v1.BallotInfo;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader);\n      msg.addRecentBallots(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setVotingPower(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setCreatedTimestampSeconds(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.NeuronInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRetrievedAtTimestampSeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getAgeSeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      3,\n      f\n    );\n  }\n  f = message.getDissolveDelaySeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getRecentBallotsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getVotingPower();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      6,\n      f\n    );\n  }\n  f = message.getCreatedTimestampSeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 retrieved_at_timestamp_seconds = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getRetrievedAtTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setRetrievedAtTimestampSeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 age_seconds = 3;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getAgeSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setAgeSeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 dissolve_delay_seconds = 4;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getDissolveDelaySeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setDissolveDelaySeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 4, value);\n};\n\n\n/**\n * repeated BallotInfo recent_ballots = 5;\n * @return {!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getRecentBallotsList = function() {\n  return /** @type{!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ic_nns_governance.pb.v1.BallotInfo, 5));\n};\n\n\n/**\n * @param {!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n*/\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setRecentBallotsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.BallotInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.addRecentBallots = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ic_nns_governance.pb.v1.BallotInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.clearRecentBallotsList = function() {\n  return this.setRecentBallotsList([]);\n};\n\n\n/**\n * optional uint64 voting_power = 6;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getVotingPower = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setVotingPower = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 created_timestamp_seconds = 7;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.getCreatedTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronInfo} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronInfo.prototype.setCreatedTimestampSeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 7, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.Neuron.repeatedFields_ = [4,12];\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.Neuron.oneofGroups_ = [[9,10]];\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase = {\n  DISSOLVE_STATE_NOT_SET: 0,\n  WHEN_DISSOLVED_TIMESTAMP_SECONDS: 9,\n  DISSOLVE_DELAY_SECONDS: 10\n};\n\n/**\n * @return {proto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getDissolveStateCase = function() {\n  return /** @type {proto.ic_nns_governance.pb.v1.Neuron.DissolveStateCase} */(jspb.Message.computeOneofCase(this, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.Neuron.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.Neuron} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.Neuron.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: (f = msg.getId()) && base_types_pb.NeuronId.toObject(includeInstance, f),\n    account: msg.getAccount_asB64(),\n    controller: (f = msg.getController()) && base_types_pb.PrincipalId.toObject(includeInstance, f),\n    hotKeysList: jspb.Message.toObjectList(msg.getHotKeysList(),\n    base_types_pb.PrincipalId.toObject, includeInstance),\n    cachedNeuronStakeE8s: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    neuronFeesE8s: jspb.Message.getFieldWithDefault(msg, 6, \"0\"),\n    createdTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 7, \"0\"),\n    agingSinceTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 8, \"0\"),\n    spawnAtTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 19, \"0\"),\n    whenDissolvedTimestampSeconds: jspb.Message.getFieldWithDefault(msg, 9, \"0\"),\n    dissolveDelaySeconds: jspb.Message.getFieldWithDefault(msg, 10, \"0\"),\n    followeesMap: (f = msg.getFolloweesMap()) ? f.toObject(includeInstance, proto.ic_nns_governance.pb.v1.Neuron.Followees.toObject) : [],\n    recentBallotsList: jspb.Message.toObjectList(msg.getRecentBallotsList(),\n    proto.ic_nns_governance.pb.v1.BallotInfo.toObject, includeInstance),\n    kycVerified: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),\n    transfer: (f = msg.getTransfer()) && proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject(includeInstance, f),\n    maturityE8sEquivalent: jspb.Message.getFieldWithDefault(msg, 15, \"0\"),\n    notForProfit: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron}\n */\nproto.ic_nns_governance.pb.v1.Neuron.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.Neuron;\n  return proto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.Neuron} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron}\n */\nproto.ic_nns_governance.pb.v1.Neuron.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccount(value);\n      break;\n    case 3:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.setController(value);\n      break;\n    case 4:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.addHotKeys(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setCachedNeuronStakeE8s(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setNeuronFeesE8s(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setCreatedTimestampSeconds(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setAgingSinceTimestampSeconds(value);\n      break;\n    case 19:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setSpawnAtTimestampSeconds(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setWhenDissolvedTimestampSeconds(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setDissolveDelaySeconds(value);\n      break;\n    case 11:\n      var value = msg.getFolloweesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader, 0, new proto.ic_nns_governance.pb.v1.Neuron.Followees());\n         });\n      break;\n    case 12:\n      var value = new proto.ic_nns_governance.pb.v1.BallotInfo;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.BallotInfo.deserializeBinaryFromReader);\n      msg.addRecentBallots(value);\n      break;\n    case 13:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setKycVerified(value);\n      break;\n    case 14:\n      var value = new proto.ic_nns_governance.pb.v1.NeuronStakeTransfer;\n      reader.readMessage(value,proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader);\n      msg.setTransfer(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setMaturityE8sEquivalent(value);\n      break;\n    case 16:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNotForProfit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.Neuron} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.Neuron.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n  f = message.getAccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getController();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n  f = message.getHotKeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n  f = message.getCachedNeuronStakeE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getNeuronFeesE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      6,\n      f\n    );\n  }\n  f = message.getCreatedTimestampSeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      7,\n      f\n    );\n  }\n  f = message.getAgingSinceTimestampSeconds();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      8,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 19));\n  if (f != null) {\n    writer.writeUint64String(\n      19,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 9));\n  if (f != null) {\n    writer.writeUint64String(\n      9,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 10));\n  if (f != null) {\n    writer.writeUint64String(\n      10,\n      f\n    );\n  }\n  f = message.getFolloweesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter);\n  }\n  f = message.getRecentBallotsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      12,\n      f,\n      proto.ic_nns_governance.pb.v1.BallotInfo.serializeBinaryToWriter\n    );\n  }\n  f = message.getKycVerified();\n  if (f) {\n    writer.writeBool(\n      13,\n      f\n    );\n  }\n  f = message.getTransfer();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter\n    );\n  }\n  f = message.getMaturityE8sEquivalent();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      15,\n      f\n    );\n  }\n  f = message.getNotForProfit();\n  if (f) {\n    writer.writeBool(\n      16,\n      f\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.Neuron.Followees.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.Neuron.Followees} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    followeesList: jspb.Message.toObjectList(msg.getFolloweesList(),\n    base_types_pb.NeuronId.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron.Followees}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.Neuron.Followees;\n  return proto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.Neuron.Followees} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron.Followees}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new base_types_pb.NeuronId;\n      reader.readMessage(value,base_types_pb.NeuronId.deserializeBinaryFromReader);\n      msg.addFollowees(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.Neuron.Followees} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFolloweesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      base_types_pb.NeuronId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ic_base_types.pb.v1.NeuronId followees = 1;\n * @return {!Array<!proto.ic_base_types.pb.v1.NeuronId>}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.getFolloweesList = function() {\n  return /** @type{!Array<!proto.ic_base_types.pb.v1.NeuronId>} */ (\n    jspb.Message.getRepeatedWrapperField(this, base_types_pb.NeuronId, 1));\n};\n\n\n/**\n * @param {!Array<!proto.ic_base_types.pb.v1.NeuronId>} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron.Followees} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.setFolloweesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.ic_base_types.pb.v1.NeuronId=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.addFollowees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ic_base_types.pb.v1.NeuronId, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron.Followees} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.Followees.prototype.clearFolloweesList = function() {\n  return this.setFolloweesList([]);\n};\n\n\n/**\n * optional ic_base_types.pb.v1.NeuronId id = 1;\n * @return {?proto.ic_base_types.pb.v1.NeuronId}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getId = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.NeuronId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.NeuronId, 1));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.NeuronId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setId = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearId = function() {\n  return this.setId(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasId = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes account = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes account = 2;\n * This is a type-conversion wrapper around `getAccount()`\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccount()));\n};\n\n\n/**\n * optional bytes account = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccount()`\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getAccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccount()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setAccount = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional ic_base_types.pb.v1.PrincipalId controller = 3;\n * @return {?proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getController = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.PrincipalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.PrincipalId, 3));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.PrincipalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setController = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearController = function() {\n  return this.setController(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasController = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * repeated ic_base_types.pb.v1.PrincipalId hot_keys = 4;\n * @return {!Array<!proto.ic_base_types.pb.v1.PrincipalId>}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getHotKeysList = function() {\n  return /** @type{!Array<!proto.ic_base_types.pb.v1.PrincipalId>} */ (\n    jspb.Message.getRepeatedWrapperField(this, base_types_pb.PrincipalId, 4));\n};\n\n\n/**\n * @param {!Array<!proto.ic_base_types.pb.v1.PrincipalId>} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setHotKeysList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.ic_base_types.pb.v1.PrincipalId=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.addHotKeys = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ic_base_types.pb.v1.PrincipalId, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearHotKeysList = function() {\n  return this.setHotKeysList([]);\n};\n\n\n/**\n * optional uint64 cached_neuron_stake_e8s = 5;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getCachedNeuronStakeE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setCachedNeuronStakeE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 neuron_fees_e8s = 6;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getNeuronFeesE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setNeuronFeesE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 created_timestamp_seconds = 7;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getCreatedTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setCreatedTimestampSeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 aging_since_timestamp_seconds = 8;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getAgingSinceTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setAgingSinceTimestampSeconds = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 8, value);\n};\n\n\n/**\n * optional uint64 spawn_at_timestamp_seconds = 19;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getSpawnAtTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setSpawnAtTimestampSeconds = function(value) {\n  return jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearSpawnAtTimestampSeconds = function() {\n  return jspb.Message.setField(this, 19, undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasSpawnAtTimestampSeconds = function() {\n  return jspb.Message.getField(this, 19) != null;\n};\n\n\n/**\n * optional uint64 when_dissolved_timestamp_seconds = 9;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getWhenDissolvedTimestampSeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setWhenDissolvedTimestampSeconds = function(value) {\n  return jspb.Message.setOneofField(this, 9, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearWhenDissolvedTimestampSeconds = function() {\n  return jspb.Message.setOneofField(this, 9, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasWhenDissolvedTimestampSeconds = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint64 dissolve_delay_seconds = 10;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getDissolveDelaySeconds = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setDissolveDelaySeconds = function(value) {\n  return jspb.Message.setOneofField(this, 10, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearDissolveDelaySeconds = function() {\n  return jspb.Message.setOneofField(this, 10, proto.ic_nns_governance.pb.v1.Neuron.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasDissolveDelaySeconds = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * map<int32, Followees> followees = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.ic_nns_governance.pb.v1.Neuron.Followees>}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getFolloweesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.ic_nns_governance.pb.v1.Neuron.Followees>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      proto.ic_nns_governance.pb.v1.Neuron.Followees));\n};\n\n\n/**\n * Clears values from the map. The map will be non-null.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearFolloweesMap = function() {\n  this.getFolloweesMap().clear();\n  return this;};\n\n\n/**\n * repeated BallotInfo recent_ballots = 12;\n * @return {!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getRecentBallotsList = function() {\n  return /** @type{!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.ic_nns_governance.pb.v1.BallotInfo, 12));\n};\n\n\n/**\n * @param {!Array<!proto.ic_nns_governance.pb.v1.BallotInfo>} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setRecentBallotsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 12, value);\n};\n\n\n/**\n * @param {!proto.ic_nns_governance.pb.v1.BallotInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.ic_nns_governance.pb.v1.BallotInfo}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.addRecentBallots = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ic_nns_governance.pb.v1.BallotInfo, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearRecentBallotsList = function() {\n  return this.setRecentBallotsList([]);\n};\n\n\n/**\n * optional bool kyc_verified = 13;\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getKycVerified = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setKycVerified = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 13, value);\n};\n\n\n/**\n * optional NeuronStakeTransfer transfer = 14;\n * @return {?proto.ic_nns_governance.pb.v1.NeuronStakeTransfer}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getTransfer = function() {\n  return /** @type{?proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} */ (\n    jspb.Message.getWrapperField(this, proto.ic_nns_governance.pb.v1.NeuronStakeTransfer, 14));\n};\n\n\n/**\n * @param {?proto.ic_nns_governance.pb.v1.NeuronStakeTransfer|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n*/\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setTransfer = function(value) {\n  return jspb.Message.setWrapperField(this, 14, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.clearTransfer = function() {\n  return this.setTransfer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.hasTransfer = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional uint64 maturity_e8s_equivalent = 15;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getMaturityE8sEquivalent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setMaturityE8sEquivalent = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 15, value);\n};\n\n\n/**\n * optional bool not_for_profit = 16;\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.getNotForProfit = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ic_nns_governance.pb.v1.Neuron} returns this\n */\nproto.ic_nns_governance.pb.v1.Neuron.prototype.setNotForProfit = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 16, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.toObject = function(opt_includeInstance) {\n  return proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transferTimestamp: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    from: (f = msg.getFrom()) && base_types_pb.PrincipalId.toObject(includeInstance, f),\n    fromSubaccount: msg.getFromSubaccount_asB64(),\n    toSubaccount: msg.getToSubaccount_asB64(),\n    neuronStakeE8s: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, \"0\"),\n    memo: jspb.Message.getFieldWithDefault(msg, 7, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ic_nns_governance.pb.v1.NeuronStakeTransfer;\n  return proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setTransferTimestamp(value);\n      break;\n    case 2:\n      var value = new base_types_pb.PrincipalId;\n      reader.readMessage(value,base_types_pb.PrincipalId.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFromSubaccount(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToSubaccount(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setNeuronStakeE8s(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setBlockHeight(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setMemo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransferTimestamp();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      base_types_pb.PrincipalId.serializeBinaryToWriter\n    );\n  }\n  f = message.getFromSubaccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getToSubaccount_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getNeuronStakeE8s();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      6,\n      f\n    );\n  }\n  f = message.getMemo();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 transfer_timestamp = 1;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getTransferTimestamp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setTransferTimestamp = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 1, value);\n};\n\n\n/**\n * optional ic_base_types.pb.v1.PrincipalId from = 2;\n * @return {?proto.ic_base_types.pb.v1.PrincipalId}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFrom = function() {\n  return /** @type{?proto.ic_base_types.pb.v1.PrincipalId} */ (\n    jspb.Message.getWrapperField(this, base_types_pb.PrincipalId, 2));\n};\n\n\n/**\n * @param {?proto.ic_base_types.pb.v1.PrincipalId|undefined} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n*/\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setFrom = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.clearFrom = function() {\n  return this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes from_subaccount = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes from_subaccount = 3;\n * This is a type-conversion wrapper around `getFromSubaccount()`\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFromSubaccount()));\n};\n\n\n/**\n * optional bytes from_subaccount = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFromSubaccount()`\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getFromSubaccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFromSubaccount()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setFromSubaccount = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes to_subaccount = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes to_subaccount = 4;\n * This is a type-conversion wrapper around `getToSubaccount()`\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToSubaccount()));\n};\n\n\n/**\n * optional bytes to_subaccount = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToSubaccount()`\n * @return {!Uint8Array}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getToSubaccount_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToSubaccount()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setToSubaccount = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional uint64 neuron_stake_e8s = 5;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getNeuronStakeE8s = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setNeuronStakeE8s = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 block_height = 6;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getBlockHeight = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setBlockHeight = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 memo = 7;\n * @return {string}\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"0\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ic_nns_governance.pb.v1.NeuronStakeTransfer} returns this\n */\nproto.ic_nns_governance.pb.v1.NeuronStakeTransfer.prototype.setMemo = function(value) {\n  return jspb.Message.setProto3StringIntField(this, 7, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.Vote = {\n  VOTE_UNSPECIFIED: 0,\n  VOTE_YES: 1,\n  VOTE_NO: 2\n};\n\n/**\n * @enum {number}\n */\nproto.ic_nns_governance.pb.v1.Topic = {\n  TOPIC_UNSPECIFIED: 0,\n  TOPIC_NEURON_MANAGEMENT: 1,\n  TOPIC_EXCHANGE_RATE: 2,\n  TOPIC_NETWORK_ECONOMICS: 3,\n  TOPIC_GOVERNANCE: 4,\n  TOPIC_NODE_ADMIN: 5,\n  TOPIC_PARTICIPANT_MANAGEMENT: 6,\n  TOPIC_SUBNET_MANAGEMENT: 7,\n  TOPIC_NETWORK_CANISTER_MANAGEMENT: 8,\n  TOPIC_KYC: 9,\n  TOPIC_NODE_PROVIDER_REWARDS: 10,\n  TOPIC_SNS_DECENTRALIZATION_SALE: 11\n};\n\ngoog.object.extend(exports, proto.ic_nns_governance.pb.v1);\n", "import type { ActorSubclass, Agent } from \"@dfinity/agent\";\nimport type { Principal } from \"@dfinity/principal\";\nimport {\n  asciiStringToByteArray,\n  createServices,\n  uint8ArrayToBigInt,\n} from \"@dfinity/utils\";\nimport { sha256 } from \"js-sha256\";\nimport randomBytes from \"randombytes\";\nimport type {\n  ListProposalInfo,\n  ProposalInfo as RawProposalInfo,\n  _SERVICE as GovernanceService,\n} from \"../candid/governance\";\nimport { idlFactory as certifiedIdlFactory } from \"../candid/governance.certified.idl\";\nimport { idlFactory } from \"../candid/governance.idl\";\nimport type { ManageNeuron as PbManageNeuron } from \"../proto/governance_pb\";\nimport {\n  ListNeurons as PbListNeurons,\n  ListNeuronsResponse as PbListNeuronsResponse,\n  ManageNeuronResponse as PbManageNeuronResponse,\n} from \"../proto/governance_pb\";\nimport { AccountIdentifier, SubAccount } from \"./account_identifier\";\nimport {\n  fromClaimOrRefreshNeuronRequest,\n  fromListNeurons,\n  fromListProposalsRequest,\n  toAddHotkeyRequest,\n  toClaimOrRefreshRequest,\n  toDisburseNeuronRequest,\n  toIncreaseDissolveDelayRequest,\n  toJoinCommunityFundRequest,\n  toLeaveCommunityFundRequest,\n  toMakeProposalRawRequest,\n  toManageNeuronsFollowRequest,\n  toMergeMaturityRequest,\n  toMergeRequest,\n  toRegisterVoteRequest,\n  toRemoveHotkeyRequest,\n  toSetDissolveDelayRequest,\n  toSpawnNeuronRequest,\n  toSplitRawRequest,\n  toStartDissolvingRequest,\n  toStopDissolvingRequest,\n} from \"./canisters/governance/request.converters\";\nimport {\n  fromAddHotKeyRequest,\n  fromDisburseRequest,\n  fromIncreaseDissolveDelayRequest,\n  fromMergeMaturityRequest,\n  fromMergeRequest,\n  fromRemoveHotKeyRequest,\n  fromSpawnRequest,\n  fromStartDissolvingRequest,\n  fromStopDissolvingRequest,\n} from \"./canisters/governance/request.proto.converters\";\nimport {\n  convertPbNeuronToNeuronInfo,\n  toArrayOfNeuronInfo,\n  toListProposalsResponse,\n  toProposalInfo,\n} from \"./canisters/governance/response.converters\";\nimport { checkPbManageNeuronResponse } from \"./canisters/governance/response.proto.converters\";\nimport {\n  getSuccessfulCommandFromResponse,\n  manageNeuron,\n} from \"./canisters/governance/services\";\nimport { MAINNET_GOVERNANCE_CANISTER_ID } from \"./constants/canister_ids\";\nimport { E8S_PER_TOKEN } from \"./constants/constants\";\nimport type { Vote } from \"./enums/governance.enums\";\nimport {\n  CouldNotClaimNeuronError,\n  FeatureNotSupportedError,\n  GovernanceError,\n  InsufficientAmountError,\n  UnrecognizedTypeError,\n} from \"./errors/governance.errors\";\nimport type { LedgerCanister } from \"./ledger.canister\";\nimport type { E8s, NeuronId } from \"./types/common\";\nimport type { GovernanceCanisterOptions } from \"./types/governance.options\";\nimport type {\n  ClaimOrRefreshNeuronRequest,\n  DisburseRequest,\n  FollowRequest,\n  KnownNeuron,\n  ListProposalsRequest,\n  ListProposalsResponse,\n  MakeProposalRequest,\n  MergeMaturityRequest,\n  MergeRequest,\n  NeuronInfo,\n  ProposalId,\n  ProposalInfo,\n  SpawnRequest,\n} from \"./types/governance_converters\";\nimport { checkAccountId } from \"./utils/accounts.utils\";\nimport { assertPercentageNumber } from \"./utils/number.utils\";\nimport { updateCall } from \"./utils/proto.utils\";\n\nexport class GovernanceCanister {\n  private constructor(\n    private readonly canisterId: Principal,\n    private readonly service: ActorSubclass<GovernanceService>,\n    private readonly certifiedService: ActorSubclass<GovernanceService>,\n    private readonly agent: Agent,\n    private readonly hardwareWallet: boolean = false\n  ) {\n    this.canisterId = canisterId;\n    this.service = service;\n    this.certifiedService = certifiedService;\n    this.agent = agent;\n    this.hardwareWallet = hardwareWallet;\n  }\n\n  public static create(options: GovernanceCanisterOptions = {}) {\n    const canisterId: Principal =\n      options.canisterId ?? MAINNET_GOVERNANCE_CANISTER_ID;\n\n    const { service, certifiedService, agent } =\n      createServices<GovernanceService>({\n        options: {\n          ...options,\n          canisterId,\n        },\n        idlFactory,\n        certifiedIdlFactory,\n      });\n\n    return new GovernanceCanister(\n      canisterId,\n      service,\n      certifiedService,\n      agent,\n      options.hardwareWallet\n    );\n  }\n\n  /**\n   * Returns the list of neurons controlled by the caller.\n   *\n   * If an array of neuron IDs is provided, precisely those neurons will be fetched.\n   *\n   * If `certified` is true, the request is fetched as an update call, otherwise\n   * it is fetched using a query call.\n   *\n   */\n  public listNeurons = async ({\n    certified = true,\n    neuronIds,\n  }: {\n    certified: boolean;\n    neuronIds?: NeuronId[];\n  }): Promise<NeuronInfo[]> => {\n    if (this.hardwareWallet && !certified) {\n      throw new FeatureNotSupportedError();\n    }\n\n    if (this.hardwareWallet) {\n      // Hardware Wallet does not support specifying neuronIds.\n      return this.listNeuronsHardwareWallet();\n    }\n    const rawRequest = fromListNeurons(neuronIds);\n    const raw_response = await this.getGovernanceService(\n      certified\n    ).list_neurons(rawRequest);\n    return toArrayOfNeuronInfo({\n      response: raw_response,\n      canisterId: this.canisterId,\n    });\n  };\n\n  /**\n   * Returns the list of neurons who have been approved by the community to\n   * appear as the default followee options.\n   *\n   * If `certified` is true, the request is fetched as an update call, otherwise\n   * it is fetched using a query call.\n   */\n  public listKnownNeurons = async (\n    certified = true\n  ): Promise<KnownNeuron[]> => {\n    const response = await this.getGovernanceService(\n      certified\n    ).list_known_neurons();\n\n    return response.known_neurons.map((n) => ({\n      id: n.id[0]?.id ?? BigInt(0),\n      name: n.known_neuron_data[0]?.name ?? \"\",\n      description: n.known_neuron_data[0]?.description[0],\n    }));\n  };\n  /**\n   * Returns the list of proposals made for the community to vote on,\n   * paginated and filtered by the request.\n   *\n   * If `certified` is true (default), the request is fetched as an update call, otherwise\n   * it is fetched using a query call.\n   *\n   * @param request the options to list the proposals (limit number of results, topics to search for, etc.)\n   * @param certified query or update calls\n   */\n  public listProposals = async ({\n    request,\n    certified = true,\n  }: {\n    request: ListProposalsRequest;\n    certified?: boolean;\n  }): Promise<ListProposalsResponse> => {\n    const rawRequest: ListProposalInfo = fromListProposalsRequest(request);\n    const rawResponse = await this.getGovernanceService(\n      certified\n    ).list_proposals(rawRequest);\n    return toListProposalsResponse(rawResponse);\n  };\n\n  /**\n   * @throws {@link InsufficientAmountError}\n   * @throws {@link StakeNeuronTransferError}\n   * @throws {@link CouldNotClaimNeuronError}\n   * @throws {@link TransferError}\n   */\n  public stakeNeuron = async ({\n    stake,\n    principal,\n    fromSubAccount,\n    ledgerCanister,\n  }: {\n    stake: bigint;\n    principal: Principal;\n    fromSubAccount?: number[];\n    ledgerCanister: LedgerCanister;\n  }): Promise<NeuronId> => {\n    if (stake < E8S_PER_TOKEN) {\n      throw new InsufficientAmountError(stake);\n    }\n\n    const nonceBytes = new Uint8Array(randomBytes(8));\n    const nonce = uint8ArrayToBigInt(nonceBytes);\n    const toSubAccount = this.buildNeuronStakeSubAccount(nonceBytes, principal);\n    const accountIdentifier = AccountIdentifier.fromPrincipal({\n      principal: this.canisterId,\n      subAccount: toSubAccount,\n    });\n\n    // Send amount to the ledger.\n    await ledgerCanister.transfer({\n      memo: nonce,\n      amount: stake,\n      fromSubAccount,\n      to: accountIdentifier,\n    });\n\n    // Notify the governance of the transaction so that the neuron is created.\n    const neuronId: NeuronId | undefined =\n      await this.claimOrRefreshNeuronFromAccount({\n        controller: principal,\n        memo: nonce,\n      });\n\n    // Typescript was complaining with `neuronId || new NeuronNotFound()`:\n    // \"Type 'undefined' is not assignable to type 'bigint | StakeNeuronError | TransferError'\"\n    // hence the explicit check.\n    if (neuronId === undefined) {\n      throw new CouldNotClaimNeuronError();\n    }\n\n    return neuronId;\n  };\n\n  /**\n   * Increases dissolve delay of a neuron\n   *\n   * @throws {@link GovernanceError}\n   */\n  public increaseDissolveDelay = async ({\n    neuronId,\n    additionalDissolveDelaySeconds,\n  }: {\n    neuronId: NeuronId;\n    additionalDissolveDelaySeconds: number;\n  }): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.increaseDissolveDelayHardwareWallet({\n        neuronId,\n        additionalDissolveDelaySeconds,\n      });\n    }\n    const request = toIncreaseDissolveDelayRequest({\n      neuronId,\n      additionalDissolveDelaySeconds,\n    });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Sets dissolve delay of a neuron.\n   * The new date is now + dissolveDelaySeconds.\n   *\n   * @param {NeuronId} neuronId\n   * @param {number} dissolveDelaySeconds\n   * @throws {@link GovernanceError}\n   */\n  public setDissolveDelay = async ({\n    neuronId,\n    dissolveDelaySeconds,\n  }: {\n    neuronId: NeuronId;\n    dissolveDelaySeconds: number;\n  }): Promise<void> => {\n    const request = toSetDissolveDelayRequest({\n      neuronId,\n      dissolveDelaySeconds,\n    });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Start dissolving process of a neuron\n   *\n   * @throws {@link GovernanceError}\n   */\n  public startDissolving = async (neuronId: NeuronId): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.startDissolvingHardwareWallet(neuronId);\n    }\n    const request = toStartDissolvingRequest(neuronId);\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Stop dissolving process of a neuron\n   *\n   * @throws {@link GovernanceError}\n   */\n  public stopDissolving = async (neuronId: NeuronId): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.stopDissolvingHardwareWallet(neuronId);\n    }\n    const request = toStopDissolvingRequest(neuronId);\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Neuron joins the community fund\n   *\n   * @throws {@link GovernanceError}\n   */\n  public joinCommunityFund = async (neuronId: NeuronId): Promise<void> => {\n    const request = toJoinCommunityFundRequest(neuronId);\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Neuron leaves the community fund\n   *\n   * @throws {@link GovernanceError}\n   */\n  public leaveCommunityFund = async (neuronId: NeuronId): Promise<void> => {\n    const request = toLeaveCommunityFundRequest(neuronId);\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Sets node provider reward account.\n   * Where the reward is paid to.\n   *\n   * @param {string} accountIdentifier\n   * @throws {@link GovernanceError}\n   * @throws {@link InvalidAccountIDError}\n   */\n  public setNodeProviderAccount = async (\n    accountIdentifier: string\n  ): Promise<void> => {\n    // Might throw InvalidAccountIDError\n    checkAccountId(accountIdentifier);\n    const account = AccountIdentifier.fromHex(accountIdentifier);\n    const response = await this.certifiedService.update_node_provider({\n      reward_account: [account.toAccountIdentifierHash()],\n    });\n\n    if (\"Err\" in response) {\n      throw new GovernanceError(response.Err);\n    }\n  };\n\n  /**\n   * Merge two neurons\n   *\n   * @throws {@link GovernanceError}\n   */\n  public mergeNeurons = async (request: {\n    sourceNeuronId: NeuronId;\n    targetNeuronId: NeuronId;\n  }): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.mergeNeuronsHardwareWallet(request);\n    }\n    const rawRequest = toMergeRequest(request);\n\n    return manageNeuron({\n      request: rawRequest,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Splits a neuron creating a new one\n   *\n   * @returns newNeuronId\n   * @throws {@link GovernanceError}\n   */\n  public splitNeuron = async ({\n    neuronId,\n    amount,\n  }: {\n    neuronId: NeuronId;\n    amount: bigint;\n  }): Promise<NeuronId> => {\n    const request = toSplitRawRequest({\n      neuronId,\n      amount,\n    });\n\n    const response = await this.certifiedService.manage_neuron(request);\n    const commmand = getSuccessfulCommandFromResponse(response);\n\n    if (\"Split\" in commmand) {\n      const neuron = commmand.Split.created_neuron_id[0];\n      if (neuron === undefined) {\n        // Edge case\n        throw new GovernanceError({\n          error_message:\n            \"Unexpected error splitting neuron. No neuronId in Split response.\",\n          error_type: 0,\n        });\n      }\n      return neuron.id;\n    }\n\n    // Edge case\n    throw new UnrecognizedTypeError(\n      `Unrecognized Split error in ${JSON.stringify(response)}`\n    );\n  };\n\n  /**\n   * Returns single proposal info\n   *\n   * If `certified` is true (default), the request is fetched as an update call, otherwise\n   * it is fetched using a query call.\n   */\n  public getProposal = async ({\n    proposalId,\n    certified = true,\n  }: {\n    proposalId: bigint;\n    certified?: boolean;\n  }): Promise<ProposalInfo | undefined> => {\n    const [proposalInfo]: [] | [RawProposalInfo] =\n      await this.getGovernanceService(certified).get_proposal_info(proposalId);\n    return proposalInfo ? toProposalInfo(proposalInfo) : undefined;\n  };\n\n  /**\n   * Create new proposal\n   *\n   * @throws {@link GovernanceError}\n   */\n  public makeProposal = async (request: MakeProposalRequest): Promise<void> => {\n    const rawRequest = toMakeProposalRawRequest(request);\n\n    return manageNeuron({\n      request: rawRequest,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   *\n   * Registers vote for a proposal from the neuron passed.\n   *\n   * @throws {@link GovernanceError}\n   */\n  public registerVote = async ({\n    neuronId,\n    vote,\n    proposalId,\n  }: {\n    neuronId: NeuronId;\n    vote: Vote;\n    proposalId: ProposalId;\n  }): Promise<void> => {\n    const request = toRegisterVoteRequest({ neuronId, vote, proposalId });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Edit neuron followees per topic\n   *\n   * @throws {@link GovernanceError}\n   */\n  public setFollowees = async (followRequest: FollowRequest): Promise<void> => {\n    const request = toManageNeuronsFollowRequest(followRequest);\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Disburse neuron on Account\n   *\n   * @throws {@link GovernanceError}\n   * @throws {@link InvalidAccountIDError}\n   */\n  public disburse = async ({\n    neuronId,\n    toAccountId,\n    amount,\n  }: {\n    neuronId: NeuronId;\n    toAccountId?: string;\n    amount?: E8s;\n  }): Promise<void> => {\n    if (toAccountId !== undefined) {\n      // Might throw InvalidAccountIDError\n      checkAccountId(toAccountId);\n    }\n    if (this.hardwareWallet) {\n      return this.disburseHardwareWallet({ neuronId, toAccountId, amount });\n    }\n    // TODO: Test that the new way also works for disbursements.\n    const toAccountIdentifier =\n      toAccountId !== undefined\n        ? AccountIdentifier.fromHex(toAccountId)\n        : undefined;\n    const request = toDisburseNeuronRequest({\n      neuronId,\n      toAccountIdentifier,\n      amount,\n    });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Merge Maturity of a neuron\n   *\n   * @throws {@link GovernanceError}\n   * @throws {@link InvalidPercentageError}\n   *\n   */\n  public mergeMaturity = async ({\n    neuronId,\n    percentageToMerge,\n  }: {\n    neuronId: NeuronId;\n    percentageToMerge: number;\n  }): Promise<void> => {\n    // Migth throw InvalidPercentageError\n    assertPercentageNumber(percentageToMerge);\n\n    if (this.hardwareWallet) {\n      return this.mergeMaturityHardwareWallet({ neuronId, percentageToMerge });\n    }\n\n    const request = toMergeMaturityRequest({ neuronId, percentageToMerge });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Merge Maturity of a neuron\n   *\n   * @throws {@link GovernanceError}\n   * @throws {@link InvalidPercentageError}\n   *\n   */\n  public spawnNeuron = async ({\n    neuronId,\n    percentageToSpawn,\n    newController,\n    nonce,\n  }: {\n    neuronId: NeuronId;\n    percentageToSpawn?: number;\n    newController?: Principal;\n    nonce?: bigint;\n  }): Promise<bigint> => {\n    if (percentageToSpawn !== undefined) {\n      // Migth throw InvalidPercentageError\n      assertPercentageNumber(percentageToSpawn);\n    }\n    if (this.hardwareWallet) {\n      return this.spawnHardwareWallet({\n        neuronId,\n        percentageToSpawn,\n        newController: newController?.toText(),\n      });\n    }\n\n    const request = toSpawnNeuronRequest({\n      neuronId,\n      percentageToSpawn,\n      newController,\n      nonce,\n    });\n\n    const response = await this.certifiedService.manage_neuron(request);\n    const command = getSuccessfulCommandFromResponse(response);\n    if (\n      \"Spawn\" in command &&\n      command.Spawn.created_neuron_id[0] !== undefined\n    ) {\n      return command.Spawn.created_neuron_id[0].id;\n    }\n\n    // Edge case\n    throw new UnrecognizedTypeError(\n      `Unrecognized Spawn error in ${JSON.stringify(response)}`\n    );\n  };\n\n  /**\n   * Add hotkey to neuron\n   *\n   * @throws {@link GovernanceError}\n   */\n  public addHotkey = async ({\n    neuronId,\n    principal,\n  }: {\n    neuronId: NeuronId;\n    principal: Principal;\n  }): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.addHotkeyHardwareWallet({ neuronId, principal });\n    }\n\n    const request = toAddHotkeyRequest({ neuronId, principal });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Remove hotkey to neuron\n   *\n   * @throws {@link GovernanceError}\n   */\n  public removeHotkey = async ({\n    neuronId,\n    principal,\n  }: {\n    neuronId: NeuronId;\n    principal: Principal;\n  }): Promise<void> => {\n    if (this.hardwareWallet) {\n      return this.removeHotkeyHardwareWallet({ neuronId, principal });\n    }\n    const request = toRemoveHotkeyRequest({ neuronId, principal });\n\n    return manageNeuron({\n      request,\n      service: this.certifiedService,\n    });\n  };\n\n  /**\n   * Gets the NeuronID of a newly created neuron.\n   */\n  public claimOrRefreshNeuronFromAccount = async ({\n    memo,\n    controller,\n  }: {\n    memo: bigint;\n    controller?: Principal;\n  }): Promise<NeuronId | undefined> => {\n    const rawRequest = toClaimOrRefreshRequest({\n      memo,\n      controller,\n    });\n    const rawResponse = await this.certifiedService.manage_neuron(rawRequest);\n    const { command } = rawResponse;\n    if (command.length && \"ClaimOrRefresh\" in command[0]) {\n      const claim = command[0].ClaimOrRefresh;\n      return claim.refreshed_neuron_id[0]?.id;\n    }\n\n    throw new UnrecognizedTypeError(\n      `Unrecognized ClaimOrRefresh error in ${JSON.stringify(rawResponse)}`\n    );\n  };\n\n  /**\n   * Refreshes neuron and returns neuronId when successful\n   * Uses query call only.\n   *\n   * @throws {@link UnrecognizedTypeError}\n   */\n  public claimOrRefreshNeuron = async (\n    request: ClaimOrRefreshNeuronRequest\n  ): Promise<NeuronId | undefined> => {\n    const rawRequest = fromClaimOrRefreshNeuronRequest(request);\n    const rawResponse = await this.service.manage_neuron(rawRequest);\n    const { command } = rawResponse;\n    if (command.length && \"ClaimOrRefresh\" in command[0]) {\n      const claim = command[0].ClaimOrRefresh;\n      return claim.refreshed_neuron_id[0]?.id;\n    }\n\n    throw new UnrecognizedTypeError(\n      `Unrecognized ClaimOrRefresh error in ${JSON.stringify(rawResponse)}`\n    );\n  };\n\n  private buildNeuronStakeSubAccount = (\n    nonce: Uint8Array,\n    principal: Principal\n  ): SubAccount => {\n    const padding = asciiStringToByteArray(\"neuron-stake\");\n    const shaObj = sha256.create();\n    shaObj.update([0x0c, ...padding, ...principal.toUint8Array(), ...nonce]);\n    return SubAccount.fromBytes(new Uint8Array(shaObj.array())) as SubAccount;\n  };\n\n  private getGovernanceService(certified: boolean): GovernanceService {\n    return certified ? this.certifiedService : this.service;\n  }\n\n  /**\n   * Return the data of the neuron provided as id.\n   */\n  public getNeuron = async ({\n    certified = true,\n    neuronId,\n  }: {\n    certified: boolean;\n    neuronId: NeuronId;\n  }): Promise<NeuronInfo | undefined> => {\n    // The governance canister exposes two functions \"get_neuron_info\" and \"get_full_neuron\" that could probably be used to fetch the neuron details too.\n    // However historically this function has been resolved with a single call \"list_neurons\".\n\n    const [neuron]: NeuronInfo[] = await this.listNeurons({\n      certified,\n      neuronIds: [neuronId],\n    });\n\n    return neuron;\n  };\n\n  private listNeuronsHardwareWallet = async (): Promise<Array<NeuronInfo>> => {\n    // We can't pass a list of neuron ids, the HW cannot handle it.\n    const request = new PbListNeurons();\n    request.setIncludeNeuronsReadableByCaller(true);\n\n    const rawResponse = await updateCall({\n      agent: this.agent,\n      canisterId: this.canisterId,\n      methodName: \"list_neurons_pb\",\n      arg: request.serializeBinary(),\n    });\n\n    const response = PbListNeuronsResponse.deserializeBinary(rawResponse);\n    const pbNeurons = response.getFullNeuronsList();\n    return response\n      .getNeuronIdsList()\n      .map(\n        convertPbNeuronToNeuronInfo({ pbNeurons, canisterId: this.canisterId })\n      );\n  };\n\n  private manageNeuronUpdateCall = async (\n    rawRequest: PbManageNeuron\n  ): Promise<void> => {\n    const rawResponse = await updateCall({\n      agent: this.agent,\n      canisterId: this.canisterId,\n      methodName: \"manage_neuron_pb\",\n      arg: rawRequest.serializeBinary(),\n    });\n\n    checkPbManageNeuronResponse(rawResponse);\n  };\n\n  private addHotkeyHardwareWallet = async ({\n    neuronId,\n    principal,\n  }: {\n    neuronId: NeuronId;\n    principal: Principal;\n  }): Promise<void> => {\n    const rawRequest = fromAddHotKeyRequest({\n      neuronId,\n      principal: principal.toText(),\n    });\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private removeHotkeyHardwareWallet = async ({\n    neuronId,\n    principal,\n  }: {\n    neuronId: NeuronId;\n    principal: Principal;\n  }): Promise<void> => {\n    const rawRequest = fromRemoveHotKeyRequest({\n      neuronId,\n      principal: principal.toText(),\n    });\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private increaseDissolveDelayHardwareWallet = async ({\n    neuronId,\n    additionalDissolveDelaySeconds,\n  }: {\n    neuronId: NeuronId;\n    additionalDissolveDelaySeconds: number;\n  }): Promise<void> => {\n    const rawRequest = fromIncreaseDissolveDelayRequest({\n      neuronId,\n      additionalDissolveDelaySeconds,\n    });\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private startDissolvingHardwareWallet = async (\n    neuronId: NeuronId\n  ): Promise<void> => {\n    const rawRequest = fromStartDissolvingRequest(neuronId);\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private stopDissolvingHardwareWallet = async (\n    neuronId: NeuronId\n  ): Promise<void> => {\n    const rawRequest = fromStopDissolvingRequest(neuronId);\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private disburseHardwareWallet = async (\n    request: DisburseRequest\n  ): Promise<void> => {\n    const rawRequest = fromDisburseRequest(request);\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private mergeMaturityHardwareWallet = async (\n    request: MergeMaturityRequest\n  ): Promise<void> => {\n    const rawRequest = fromMergeMaturityRequest(request);\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n\n  private spawnHardwareWallet = async (\n    request: SpawnRequest\n  ): Promise<NeuronId> => {\n    const rawRequest = fromSpawnRequest(request);\n    const rawResponse = await updateCall({\n      agent: this.agent,\n      canisterId: this.canisterId,\n      methodName: \"manage_neuron_pb\",\n      arg: rawRequest.serializeBinary(),\n    });\n\n    const response = PbManageNeuronResponse.deserializeBinary(rawResponse);\n    const err = response.getError();\n    if (err) {\n      throw new GovernanceError({\n        error_message: err.getErrorMessage(),\n        error_type: err.getErrorType(),\n      });\n    }\n    const createdNeuronId = response.getSpawn()?.getCreatedNeuronId();\n    if (createdNeuronId !== undefined) {\n      return BigInt(createdNeuronId.getId());\n    }\n    throw new UnrecognizedTypeError(\n      `Unrecognized Spawn error in ${JSON.stringify(response)}`\n    );\n  };\n\n  private mergeNeuronsHardwareWallet = async (\n    request: MergeRequest\n  ): Promise<void> => {\n    const rawRequest = fromMergeRequest(request);\n    await this.manageNeuronUpdateCall(rawRequest);\n  };\n}\n", "/* Do not edit.  Compiled with ./scripts/compile-idl-js from packages/nns/candid/governance.did */\nexport const idlFactory = ({ IDL }) => {\n  const Proposal = IDL.Rec();\n  const NeuronId = IDL.Record({ 'id' : IDL.Nat64 });\n  const Followees = IDL.Record({ 'followees' : IDL.Vec(NeuronId) });\n  const AccountIdentifier = IDL.Record({ 'hash' : IDL.Vec(IDL.Nat8) });\n  const NodeProvider = IDL.Record({\n    'id' : IDL.Opt(IDL.Principal),\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardToNeuron = IDL.Record({ 'dissolve_delay_seconds' : IDL.Nat64 });\n  const RewardToAccount = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardMode = IDL.Variant({\n    'RewardToNeuron' : RewardToNeuron,\n    'RewardToAccount' : RewardToAccount,\n  });\n  const RewardNodeProvider = IDL.Record({\n    'node_provider' : IDL.Opt(NodeProvider),\n    'reward_mode' : IDL.Opt(RewardMode),\n    'amount_e8s' : IDL.Nat64,\n  });\n  const MostRecentMonthlyNodeProviderRewards = IDL.Record({\n    'timestamp' : IDL.Nat64,\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const GovernanceCachedMetrics = IDL.Record({\n    'not_dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'garbage_collectable_neurons_count' : IDL.Nat64,\n    'neurons_with_invalid_stake_count' : IDL.Nat64,\n    'not_dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'total_supply_icp' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_count' : IDL.Nat64,\n    'dissolved_neurons_count' : IDL.Nat64,\n    'total_staked_e8s' : IDL.Nat64,\n    'not_dissolving_neurons_count' : IDL.Nat64,\n    'dissolved_neurons_e8s' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_e8s' : IDL.Nat64,\n    'dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'dissolving_neurons_count' : IDL.Nat64,\n    'dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'community_fund_total_staked_e8s' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const NetworkEconomics = IDL.Record({\n    'neuron_minimum_stake_e8s' : IDL.Nat64,\n    'max_proposals_to_keep_per_topic' : IDL.Nat32,\n    'neuron_management_fee_per_proposal_e8s' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'transaction_fee_e8s' : IDL.Nat64,\n    'neuron_spawn_dissolve_delay_seconds' : IDL.Nat64,\n    'minimum_icp_xdr_rate' : IDL.Nat64,\n    'maximum_node_provider_rewards_e8s' : IDL.Nat64,\n  });\n  const RewardEvent = IDL.Record({\n    'day_after_genesis' : IDL.Nat64,\n    'actual_timestamp_seconds' : IDL.Nat64,\n    'distributed_e8s_equivalent' : IDL.Nat64,\n    'settled_proposals' : IDL.Vec(NeuronId),\n  });\n  const NeuronStakeTransfer = IDL.Record({\n    'to_subaccount' : IDL.Vec(IDL.Nat8),\n    'neuron_stake_e8s' : IDL.Nat64,\n    'from' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Vec(IDL.Nat8),\n    'transfer_timestamp' : IDL.Nat64,\n    'block_height' : IDL.Nat64,\n  });\n  const GovernanceError = IDL.Record({\n    'error_message' : IDL.Text,\n    'error_type' : IDL.Int32,\n  });\n  const CfNeuron = IDL.Record({\n    'nns_neuron_id' : IDL.Nat64,\n    'amount_icp_e8s' : IDL.Nat64,\n  });\n  const CfParticipant = IDL.Record({\n    'hotkey_principal' : IDL.Text,\n    'cf_neurons' : IDL.Vec(CfNeuron),\n  });\n  const Ballot = IDL.Record({ 'vote' : IDL.Int32, 'voting_power' : IDL.Nat64 });\n  const Tally = IDL.Record({\n    'no' : IDL.Nat64,\n    'yes' : IDL.Nat64,\n    'total' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const KnownNeuronData = IDL.Record({\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n  });\n  const KnownNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n  });\n  const Spawn = IDL.Record({\n    'percentage_to_spawn' : IDL.Opt(IDL.Nat32),\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Opt(IDL.Nat64),\n  });\n  const Split = IDL.Record({ 'amount_e8s' : IDL.Nat64 });\n  const Follow = IDL.Record({\n    'topic' : IDL.Int32,\n    'followees' : IDL.Vec(NeuronId),\n  });\n  const ClaimOrRefreshNeuronFromAccount = IDL.Record({\n    'controller' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n  });\n  const By = IDL.Variant({\n    'NeuronIdOrSubaccount' : IDL.Record({}),\n    'MemoAndController' : ClaimOrRefreshNeuronFromAccount,\n    'Memo' : IDL.Nat64,\n  });\n  const ClaimOrRefresh = IDL.Record({ 'by' : IDL.Opt(By) });\n  const RemoveHotKey = IDL.Record({\n    'hot_key_to_remove' : IDL.Opt(IDL.Principal),\n  });\n  const AddHotKey = IDL.Record({ 'new_hot_key' : IDL.Opt(IDL.Principal) });\n  const ChangeAutoStakeMaturity = IDL.Record({\n    'requested_setting_for_auto_stake_maturity' : IDL.Bool,\n  });\n  const IncreaseDissolveDelay = IDL.Record({\n    'additional_dissolve_delay_seconds' : IDL.Nat32,\n  });\n  const SetDissolveTimestamp = IDL.Record({\n    'dissolve_timestamp_seconds' : IDL.Nat64,\n  });\n  const Operation = IDL.Variant({\n    'RemoveHotKey' : RemoveHotKey,\n    'AddHotKey' : AddHotKey,\n    'ChangeAutoStakeMaturity' : ChangeAutoStakeMaturity,\n    'StopDissolving' : IDL.Record({}),\n    'StartDissolving' : IDL.Record({}),\n    'IncreaseDissolveDelay' : IncreaseDissolveDelay,\n    'JoinCommunityFund' : IDL.Record({}),\n    'LeaveCommunityFund' : IDL.Record({}),\n    'SetDissolveTimestamp' : SetDissolveTimestamp,\n  });\n  const Configure = IDL.Record({ 'operation' : IDL.Opt(Operation) });\n  const RegisterVote = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal' : IDL.Opt(NeuronId),\n  });\n  const Merge = IDL.Record({ 'source_neuron_id' : IDL.Opt(NeuronId) });\n  const DisburseToNeuron = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'kyc_verified' : IDL.Bool,\n    'amount_e8s' : IDL.Nat64,\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Nat64,\n  });\n  const StakeMaturity = IDL.Record({\n    'percentage_to_stake' : IDL.Opt(IDL.Nat32),\n  });\n  const MergeMaturity = IDL.Record({ 'percentage_to_merge' : IDL.Nat32 });\n  const Amount = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const Disburse = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n    'amount' : IDL.Opt(Amount),\n  });\n  const Command = IDL.Variant({\n    'Spawn' : Spawn,\n    'Split' : Split,\n    'Follow' : Follow,\n    'ClaimOrRefresh' : ClaimOrRefresh,\n    'Configure' : Configure,\n    'RegisterVote' : RegisterVote,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'MakeProposal' : Proposal,\n    'StakeMaturity' : StakeMaturity,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronIdOrSubaccount = IDL.Variant({\n    'Subaccount' : IDL.Vec(IDL.Nat8),\n    'NeuronId' : NeuronId,\n  });\n  const ManageNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'command' : IDL.Opt(Command),\n    'neuron_id_or_subaccount' : IDL.Opt(NeuronIdOrSubaccount),\n  });\n  const ExecuteNnsFunction = IDL.Record({\n    'nns_function' : IDL.Int32,\n    'payload' : IDL.Vec(IDL.Nat8),\n  });\n  const Params = IDL.Record({\n    'min_participant_icp_e8s' : IDL.Nat64,\n    'max_icp_e8s' : IDL.Nat64,\n    'swap_due_timestamp_seconds' : IDL.Nat64,\n    'min_participants' : IDL.Nat32,\n    'sns_token_e8s' : IDL.Nat64,\n    'max_participant_icp_e8s' : IDL.Nat64,\n    'min_icp_e8s' : IDL.Nat64,\n  });\n  const OpenSnsTokenSwap = IDL.Record({\n    'community_fund_investment_e8s' : IDL.Opt(IDL.Nat64),\n    'target_swap_canister_id' : IDL.Opt(IDL.Principal),\n    'params' : IDL.Opt(Params),\n  });\n  const TimeWindow = IDL.Record({\n    'start_timestamp_seconds' : IDL.Nat64,\n    'end_timestamp_seconds' : IDL.Nat64,\n  });\n  const SetOpenTimeWindowRequest = IDL.Record({\n    'open_time_window' : IDL.Opt(TimeWindow),\n  });\n  const SetSnsTokenSwapOpenTimeWindow = IDL.Record({\n    'request' : IDL.Opt(SetOpenTimeWindowRequest),\n    'swap_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const SetDefaultFollowees = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n  });\n  const RewardNodeProviders = IDL.Record({\n    'use_registry_derived_rewards' : IDL.Opt(IDL.Bool),\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const ApproveGenesisKyc = IDL.Record({\n    'principals' : IDL.Vec(IDL.Principal),\n  });\n  const Change = IDL.Variant({\n    'ToRemove' : NodeProvider,\n    'ToAdd' : NodeProvider,\n  });\n  const AddOrRemoveNodeProvider = IDL.Record({ 'change' : IDL.Opt(Change) });\n  const Motion = IDL.Record({ 'motion_text' : IDL.Text });\n  const Action = IDL.Variant({\n    'RegisterKnownNeuron' : KnownNeuron,\n    'ManageNeuron' : ManageNeuron,\n    'ExecuteNnsFunction' : ExecuteNnsFunction,\n    'RewardNodeProvider' : RewardNodeProvider,\n    'OpenSnsTokenSwap' : OpenSnsTokenSwap,\n    'SetSnsTokenSwapOpenTimeWindow' : SetSnsTokenSwapOpenTimeWindow,\n    'SetDefaultFollowees' : SetDefaultFollowees,\n    'RewardNodeProviders' : RewardNodeProviders,\n    'ManageNetworkEconomics' : NetworkEconomics,\n    'ApproveGenesisKyc' : ApproveGenesisKyc,\n    'AddOrRemoveNodeProvider' : AddOrRemoveNodeProvider,\n    'Motion' : Motion,\n  });\n  Proposal.fill(\n    IDL.Record({\n      'url' : IDL.Text,\n      'title' : IDL.Opt(IDL.Text),\n      'action' : IDL.Opt(Action),\n      'summary' : IDL.Text,\n    })\n  );\n  const WaitForQuietState = IDL.Record({\n    'current_deadline_timestamp_seconds' : IDL.Nat64,\n  });\n  const ProposalData = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'cf_participants' : IDL.Vec(CfParticipant),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'sns_token_swap_lifecycle' : IDL.Opt(IDL.Int32),\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'wait_for_quiet_state' : IDL.Opt(WaitForQuietState),\n    'executed_timestamp_seconds' : IDL.Nat64,\n    'original_total_community_fund_maturity_e8s_equivalent' : IDL.Opt(\n      IDL.Nat64\n    ),\n  });\n  const Command_2 = IDL.Variant({\n    'Spawn' : NeuronId,\n    'Split' : Split,\n    'Configure' : Configure,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'SyncCommand' : IDL.Record({}),\n    'ClaimOrRefreshNeuron' : ClaimOrRefresh,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronInFlightCommand = IDL.Record({\n    'command' : IDL.Opt(Command_2),\n    'timestamp' : IDL.Nat64,\n  });\n  const BallotInfo = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const DissolveState = IDL.Variant({\n    'DissolveDelaySeconds' : IDL.Nat64,\n    'WhenDissolvedTimestampSeconds' : IDL.Nat64,\n  });\n  const Neuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'staked_maturity_e8s_equivalent' : IDL.Opt(IDL.Nat64),\n    'controller' : IDL.Opt(IDL.Principal),\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'kyc_verified' : IDL.Bool,\n    'not_for_profit' : IDL.Bool,\n    'maturity_e8s_equivalent' : IDL.Nat64,\n    'cached_neuron_stake_e8s' : IDL.Nat64,\n    'created_timestamp_seconds' : IDL.Nat64,\n    'auto_stake_maturity' : IDL.Opt(IDL.Bool),\n    'aging_since_timestamp_seconds' : IDL.Nat64,\n    'hot_keys' : IDL.Vec(IDL.Principal),\n    'account' : IDL.Vec(IDL.Nat8),\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'dissolve_state' : IDL.Opt(DissolveState),\n    'followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'neuron_fees_e8s' : IDL.Nat64,\n    'transfer' : IDL.Opt(NeuronStakeTransfer),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'spawn_at_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n  });\n  const Governance = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'most_recent_monthly_node_provider_rewards' : IDL.Opt(\n      MostRecentMonthlyNodeProviderRewards\n    ),\n    'maturity_modulation_last_updated_at_timestamp_seconds' : IDL.Opt(\n      IDL.Nat64\n    ),\n    'wait_for_quiet_threshold_seconds' : IDL.Nat64,\n    'metrics' : IDL.Opt(GovernanceCachedMetrics),\n    'node_providers' : IDL.Vec(NodeProvider),\n    'cached_daily_maturity_modulation_basis_points' : IDL.Opt(IDL.Int32),\n    'economics' : IDL.Opt(NetworkEconomics),\n    'spawning_neurons' : IDL.Opt(IDL.Bool),\n    'latest_reward_event' : IDL.Opt(RewardEvent),\n    'to_claim_transfers' : IDL.Vec(NeuronStakeTransfer),\n    'short_voting_period_seconds' : IDL.Nat64,\n    'proposals' : IDL.Vec(IDL.Tuple(IDL.Nat64, ProposalData)),\n    'in_flight_commands' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInFlightCommand)),\n    'neurons' : IDL.Vec(IDL.Tuple(IDL.Nat64, Neuron)),\n    'genesis_timestamp_seconds' : IDL.Nat64,\n  });\n  const Result = IDL.Variant({ 'Ok' : IDL.Null, 'Err' : GovernanceError });\n  const Result_1 = IDL.Variant({\n    'Error' : GovernanceError,\n    'NeuronId' : NeuronId,\n  });\n  const ClaimOrRefreshNeuronFromAccountResponse = IDL.Record({\n    'result' : IDL.Opt(Result_1),\n  });\n  const Result_2 = IDL.Variant({ 'Ok' : Neuron, 'Err' : GovernanceError });\n  const Result_3 = IDL.Variant({\n    'Ok' : RewardNodeProviders,\n    'Err' : GovernanceError,\n  });\n  const NeuronInfo = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'created_timestamp_seconds' : IDL.Nat64,\n    'state' : IDL.Int32,\n    'stake_e8s' : IDL.Nat64,\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'retrieved_at_timestamp_seconds' : IDL.Nat64,\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'voting_power' : IDL.Nat64,\n    'age_seconds' : IDL.Nat64,\n  });\n  const Result_4 = IDL.Variant({ 'Ok' : NeuronInfo, 'Err' : GovernanceError });\n  const Result_5 = IDL.Variant({\n    'Ok' : NodeProvider,\n    'Err' : GovernanceError,\n  });\n  const ProposalInfo = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'status' : IDL.Int32,\n    'topic' : IDL.Int32,\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'deadline_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'reward_status' : IDL.Int32,\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'executed_timestamp_seconds' : IDL.Nat64,\n  });\n  const ListKnownNeuronsResponse = IDL.Record({\n    'known_neurons' : IDL.Vec(KnownNeuron),\n  });\n  const ListNeurons = IDL.Record({\n    'neuron_ids' : IDL.Vec(IDL.Nat64),\n    'include_neurons_readable_by_caller' : IDL.Bool,\n  });\n  const ListNeuronsResponse = IDL.Record({\n    'neuron_infos' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInfo)),\n    'full_neurons' : IDL.Vec(Neuron),\n  });\n  const ListNodeProvidersResponse = IDL.Record({\n    'node_providers' : IDL.Vec(NodeProvider),\n  });\n  const ListProposalInfo = IDL.Record({\n    'include_reward_status' : IDL.Vec(IDL.Int32),\n    'before_proposal' : IDL.Opt(NeuronId),\n    'limit' : IDL.Nat32,\n    'exclude_topic' : IDL.Vec(IDL.Int32),\n    'include_status' : IDL.Vec(IDL.Int32),\n  });\n  const ListProposalInfoResponse = IDL.Record({\n    'proposal_info' : IDL.Vec(ProposalInfo),\n  });\n  const SpawnResponse = IDL.Record({ 'created_neuron_id' : IDL.Opt(NeuronId) });\n  const ClaimOrRefreshResponse = IDL.Record({\n    'refreshed_neuron_id' : IDL.Opt(NeuronId),\n  });\n  const MakeProposalResponse = IDL.Record({\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const StakeMaturityResponse = IDL.Record({\n    'maturity_e8s' : IDL.Nat64,\n    'staked_maturity_e8s' : IDL.Nat64,\n  });\n  const MergeMaturityResponse = IDL.Record({\n    'merged_maturity_e8s' : IDL.Nat64,\n    'new_stake_e8s' : IDL.Nat64,\n  });\n  const DisburseResponse = IDL.Record({ 'transfer_block_height' : IDL.Nat64 });\n  const Command_1 = IDL.Variant({\n    'Error' : GovernanceError,\n    'Spawn' : SpawnResponse,\n    'Split' : SpawnResponse,\n    'Follow' : IDL.Record({}),\n    'ClaimOrRefresh' : ClaimOrRefreshResponse,\n    'Configure' : IDL.Record({}),\n    'RegisterVote' : IDL.Record({}),\n    'Merge' : IDL.Record({}),\n    'DisburseToNeuron' : SpawnResponse,\n    'MakeProposal' : MakeProposalResponse,\n    'StakeMaturity' : StakeMaturityResponse,\n    'MergeMaturity' : MergeMaturityResponse,\n    'Disburse' : DisburseResponse,\n  });\n  const ManageNeuronResponse = IDL.Record({ 'command' : IDL.Opt(Command_1) });\n  const Committed = IDL.Record({\n    'sns_governance_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const Result_6 = IDL.Variant({\n    'Committed' : Committed,\n    'Aborted' : IDL.Record({}),\n  });\n  const SettleCommunityFundParticipation = IDL.Record({\n    'result' : IDL.Opt(Result_6),\n    'open_sns_token_swap_proposal_id' : IDL.Opt(IDL.Nat64),\n  });\n  const UpdateNodeProvider = IDL.Record({\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  return IDL.Service({\n    'claim_gtc_neurons' : IDL.Func(\n        [IDL.Principal, IDL.Vec(NeuronId)],\n        [Result],\n        [],\n      ),\n    'claim_or_refresh_neuron_from_account' : IDL.Func(\n        [ClaimOrRefreshNeuronFromAccount],\n        [ClaimOrRefreshNeuronFromAccountResponse],\n        [],\n      ),\n    'get_build_metadata' : IDL.Func([], [IDL.Text], []),\n    'get_full_neuron' : IDL.Func([IDL.Nat64], [Result_2], []),\n    'get_full_neuron_by_id_or_subaccount' : IDL.Func(\n        [NeuronIdOrSubaccount],\n        [Result_2],\n        [],\n      ),\n    'get_monthly_node_provider_rewards' : IDL.Func([], [Result_3], []),\n    'get_most_recent_monthly_node_provider_rewards' : IDL.Func(\n        [],\n        [IDL.Opt(MostRecentMonthlyNodeProviderRewards)],\n        [],\n      ),\n    'get_network_economics_parameters' : IDL.Func([], [NetworkEconomics], []),\n    'get_neuron_ids' : IDL.Func([], [IDL.Vec(IDL.Nat64)], []),\n    'get_neuron_info' : IDL.Func([IDL.Nat64], [Result_4], []),\n    'get_neuron_info_by_id_or_subaccount' : IDL.Func(\n        [NeuronIdOrSubaccount],\n        [Result_4],\n        [],\n      ),\n    'get_node_provider_by_caller' : IDL.Func([IDL.Null], [Result_5], []),\n    'get_pending_proposals' : IDL.Func([], [IDL.Vec(ProposalInfo)], []),\n    'get_proposal_info' : IDL.Func([IDL.Nat64], [IDL.Opt(ProposalInfo)], []),\n    'list_known_neurons' : IDL.Func([], [ListKnownNeuronsResponse], []),\n    'list_neurons' : IDL.Func([ListNeurons], [ListNeuronsResponse], []),\n    'list_node_providers' : IDL.Func([], [ListNodeProvidersResponse], []),\n    'list_proposals' : IDL.Func(\n        [ListProposalInfo],\n        [ListProposalInfoResponse],\n        [],\n      ),\n    'manage_neuron' : IDL.Func([ManageNeuron], [ManageNeuronResponse], []),\n    'settle_community_fund_participation' : IDL.Func(\n        [SettleCommunityFundParticipation],\n        [Result],\n        [],\n      ),\n    'transfer_gtc_neuron' : IDL.Func([NeuronId, NeuronId], [Result], []),\n    'update_node_provider' : IDL.Func([UpdateNodeProvider], [Result], []),\n  });\n};\nexport const init = ({ IDL }) => {\n  const Proposal = IDL.Rec();\n  const NeuronId = IDL.Record({ 'id' : IDL.Nat64 });\n  const Followees = IDL.Record({ 'followees' : IDL.Vec(NeuronId) });\n  const AccountIdentifier = IDL.Record({ 'hash' : IDL.Vec(IDL.Nat8) });\n  const NodeProvider = IDL.Record({\n    'id' : IDL.Opt(IDL.Principal),\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardToNeuron = IDL.Record({ 'dissolve_delay_seconds' : IDL.Nat64 });\n  const RewardToAccount = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardMode = IDL.Variant({\n    'RewardToNeuron' : RewardToNeuron,\n    'RewardToAccount' : RewardToAccount,\n  });\n  const RewardNodeProvider = IDL.Record({\n    'node_provider' : IDL.Opt(NodeProvider),\n    'reward_mode' : IDL.Opt(RewardMode),\n    'amount_e8s' : IDL.Nat64,\n  });\n  const MostRecentMonthlyNodeProviderRewards = IDL.Record({\n    'timestamp' : IDL.Nat64,\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const GovernanceCachedMetrics = IDL.Record({\n    'not_dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'garbage_collectable_neurons_count' : IDL.Nat64,\n    'neurons_with_invalid_stake_count' : IDL.Nat64,\n    'not_dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'total_supply_icp' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_count' : IDL.Nat64,\n    'dissolved_neurons_count' : IDL.Nat64,\n    'total_staked_e8s' : IDL.Nat64,\n    'not_dissolving_neurons_count' : IDL.Nat64,\n    'dissolved_neurons_e8s' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_e8s' : IDL.Nat64,\n    'dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'dissolving_neurons_count' : IDL.Nat64,\n    'dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'community_fund_total_staked_e8s' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const NetworkEconomics = IDL.Record({\n    'neuron_minimum_stake_e8s' : IDL.Nat64,\n    'max_proposals_to_keep_per_topic' : IDL.Nat32,\n    'neuron_management_fee_per_proposal_e8s' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'transaction_fee_e8s' : IDL.Nat64,\n    'neuron_spawn_dissolve_delay_seconds' : IDL.Nat64,\n    'minimum_icp_xdr_rate' : IDL.Nat64,\n    'maximum_node_provider_rewards_e8s' : IDL.Nat64,\n  });\n  const RewardEvent = IDL.Record({\n    'day_after_genesis' : IDL.Nat64,\n    'actual_timestamp_seconds' : IDL.Nat64,\n    'distributed_e8s_equivalent' : IDL.Nat64,\n    'settled_proposals' : IDL.Vec(NeuronId),\n  });\n  const NeuronStakeTransfer = IDL.Record({\n    'to_subaccount' : IDL.Vec(IDL.Nat8),\n    'neuron_stake_e8s' : IDL.Nat64,\n    'from' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Vec(IDL.Nat8),\n    'transfer_timestamp' : IDL.Nat64,\n    'block_height' : IDL.Nat64,\n  });\n  const GovernanceError = IDL.Record({\n    'error_message' : IDL.Text,\n    'error_type' : IDL.Int32,\n  });\n  const CfNeuron = IDL.Record({\n    'nns_neuron_id' : IDL.Nat64,\n    'amount_icp_e8s' : IDL.Nat64,\n  });\n  const CfParticipant = IDL.Record({\n    'hotkey_principal' : IDL.Text,\n    'cf_neurons' : IDL.Vec(CfNeuron),\n  });\n  const Ballot = IDL.Record({ 'vote' : IDL.Int32, 'voting_power' : IDL.Nat64 });\n  const Tally = IDL.Record({\n    'no' : IDL.Nat64,\n    'yes' : IDL.Nat64,\n    'total' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const KnownNeuronData = IDL.Record({\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n  });\n  const KnownNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n  });\n  const Spawn = IDL.Record({\n    'percentage_to_spawn' : IDL.Opt(IDL.Nat32),\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Opt(IDL.Nat64),\n  });\n  const Split = IDL.Record({ 'amount_e8s' : IDL.Nat64 });\n  const Follow = IDL.Record({\n    'topic' : IDL.Int32,\n    'followees' : IDL.Vec(NeuronId),\n  });\n  const ClaimOrRefreshNeuronFromAccount = IDL.Record({\n    'controller' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n  });\n  const By = IDL.Variant({\n    'NeuronIdOrSubaccount' : IDL.Record({}),\n    'MemoAndController' : ClaimOrRefreshNeuronFromAccount,\n    'Memo' : IDL.Nat64,\n  });\n  const ClaimOrRefresh = IDL.Record({ 'by' : IDL.Opt(By) });\n  const RemoveHotKey = IDL.Record({\n    'hot_key_to_remove' : IDL.Opt(IDL.Principal),\n  });\n  const AddHotKey = IDL.Record({ 'new_hot_key' : IDL.Opt(IDL.Principal) });\n  const ChangeAutoStakeMaturity = IDL.Record({\n    'requested_setting_for_auto_stake_maturity' : IDL.Bool,\n  });\n  const IncreaseDissolveDelay = IDL.Record({\n    'additional_dissolve_delay_seconds' : IDL.Nat32,\n  });\n  const SetDissolveTimestamp = IDL.Record({\n    'dissolve_timestamp_seconds' : IDL.Nat64,\n  });\n  const Operation = IDL.Variant({\n    'RemoveHotKey' : RemoveHotKey,\n    'AddHotKey' : AddHotKey,\n    'ChangeAutoStakeMaturity' : ChangeAutoStakeMaturity,\n    'StopDissolving' : IDL.Record({}),\n    'StartDissolving' : IDL.Record({}),\n    'IncreaseDissolveDelay' : IncreaseDissolveDelay,\n    'JoinCommunityFund' : IDL.Record({}),\n    'LeaveCommunityFund' : IDL.Record({}),\n    'SetDissolveTimestamp' : SetDissolveTimestamp,\n  });\n  const Configure = IDL.Record({ 'operation' : IDL.Opt(Operation) });\n  const RegisterVote = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal' : IDL.Opt(NeuronId),\n  });\n  const Merge = IDL.Record({ 'source_neuron_id' : IDL.Opt(NeuronId) });\n  const DisburseToNeuron = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'kyc_verified' : IDL.Bool,\n    'amount_e8s' : IDL.Nat64,\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Nat64,\n  });\n  const StakeMaturity = IDL.Record({\n    'percentage_to_stake' : IDL.Opt(IDL.Nat32),\n  });\n  const MergeMaturity = IDL.Record({ 'percentage_to_merge' : IDL.Nat32 });\n  const Amount = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const Disburse = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n    'amount' : IDL.Opt(Amount),\n  });\n  const Command = IDL.Variant({\n    'Spawn' : Spawn,\n    'Split' : Split,\n    'Follow' : Follow,\n    'ClaimOrRefresh' : ClaimOrRefresh,\n    'Configure' : Configure,\n    'RegisterVote' : RegisterVote,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'MakeProposal' : Proposal,\n    'StakeMaturity' : StakeMaturity,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronIdOrSubaccount = IDL.Variant({\n    'Subaccount' : IDL.Vec(IDL.Nat8),\n    'NeuronId' : NeuronId,\n  });\n  const ManageNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'command' : IDL.Opt(Command),\n    'neuron_id_or_subaccount' : IDL.Opt(NeuronIdOrSubaccount),\n  });\n  const ExecuteNnsFunction = IDL.Record({\n    'nns_function' : IDL.Int32,\n    'payload' : IDL.Vec(IDL.Nat8),\n  });\n  const Params = IDL.Record({\n    'min_participant_icp_e8s' : IDL.Nat64,\n    'max_icp_e8s' : IDL.Nat64,\n    'swap_due_timestamp_seconds' : IDL.Nat64,\n    'min_participants' : IDL.Nat32,\n    'sns_token_e8s' : IDL.Nat64,\n    'max_participant_icp_e8s' : IDL.Nat64,\n    'min_icp_e8s' : IDL.Nat64,\n  });\n  const OpenSnsTokenSwap = IDL.Record({\n    'community_fund_investment_e8s' : IDL.Opt(IDL.Nat64),\n    'target_swap_canister_id' : IDL.Opt(IDL.Principal),\n    'params' : IDL.Opt(Params),\n  });\n  const TimeWindow = IDL.Record({\n    'start_timestamp_seconds' : IDL.Nat64,\n    'end_timestamp_seconds' : IDL.Nat64,\n  });\n  const SetOpenTimeWindowRequest = IDL.Record({\n    'open_time_window' : IDL.Opt(TimeWindow),\n  });\n  const SetSnsTokenSwapOpenTimeWindow = IDL.Record({\n    'request' : IDL.Opt(SetOpenTimeWindowRequest),\n    'swap_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const SetDefaultFollowees = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n  });\n  const RewardNodeProviders = IDL.Record({\n    'use_registry_derived_rewards' : IDL.Opt(IDL.Bool),\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const ApproveGenesisKyc = IDL.Record({\n    'principals' : IDL.Vec(IDL.Principal),\n  });\n  const Change = IDL.Variant({\n    'ToRemove' : NodeProvider,\n    'ToAdd' : NodeProvider,\n  });\n  const AddOrRemoveNodeProvider = IDL.Record({ 'change' : IDL.Opt(Change) });\n  const Motion = IDL.Record({ 'motion_text' : IDL.Text });\n  const Action = IDL.Variant({\n    'RegisterKnownNeuron' : KnownNeuron,\n    'ManageNeuron' : ManageNeuron,\n    'ExecuteNnsFunction' : ExecuteNnsFunction,\n    'RewardNodeProvider' : RewardNodeProvider,\n    'OpenSnsTokenSwap' : OpenSnsTokenSwap,\n    'SetSnsTokenSwapOpenTimeWindow' : SetSnsTokenSwapOpenTimeWindow,\n    'SetDefaultFollowees' : SetDefaultFollowees,\n    'RewardNodeProviders' : RewardNodeProviders,\n    'ManageNetworkEconomics' : NetworkEconomics,\n    'ApproveGenesisKyc' : ApproveGenesisKyc,\n    'AddOrRemoveNodeProvider' : AddOrRemoveNodeProvider,\n    'Motion' : Motion,\n  });\n  Proposal.fill(\n    IDL.Record({\n      'url' : IDL.Text,\n      'title' : IDL.Opt(IDL.Text),\n      'action' : IDL.Opt(Action),\n      'summary' : IDL.Text,\n    })\n  );\n  const WaitForQuietState = IDL.Record({\n    'current_deadline_timestamp_seconds' : IDL.Nat64,\n  });\n  const ProposalData = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'cf_participants' : IDL.Vec(CfParticipant),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'sns_token_swap_lifecycle' : IDL.Opt(IDL.Int32),\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'wait_for_quiet_state' : IDL.Opt(WaitForQuietState),\n    'executed_timestamp_seconds' : IDL.Nat64,\n    'original_total_community_fund_maturity_e8s_equivalent' : IDL.Opt(\n      IDL.Nat64\n    ),\n  });\n  const Command_2 = IDL.Variant({\n    'Spawn' : NeuronId,\n    'Split' : Split,\n    'Configure' : Configure,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'SyncCommand' : IDL.Record({}),\n    'ClaimOrRefreshNeuron' : ClaimOrRefresh,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronInFlightCommand = IDL.Record({\n    'command' : IDL.Opt(Command_2),\n    'timestamp' : IDL.Nat64,\n  });\n  const BallotInfo = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const DissolveState = IDL.Variant({\n    'DissolveDelaySeconds' : IDL.Nat64,\n    'WhenDissolvedTimestampSeconds' : IDL.Nat64,\n  });\n  const Neuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'staked_maturity_e8s_equivalent' : IDL.Opt(IDL.Nat64),\n    'controller' : IDL.Opt(IDL.Principal),\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'kyc_verified' : IDL.Bool,\n    'not_for_profit' : IDL.Bool,\n    'maturity_e8s_equivalent' : IDL.Nat64,\n    'cached_neuron_stake_e8s' : IDL.Nat64,\n    'created_timestamp_seconds' : IDL.Nat64,\n    'auto_stake_maturity' : IDL.Opt(IDL.Bool),\n    'aging_since_timestamp_seconds' : IDL.Nat64,\n    'hot_keys' : IDL.Vec(IDL.Principal),\n    'account' : IDL.Vec(IDL.Nat8),\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'dissolve_state' : IDL.Opt(DissolveState),\n    'followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'neuron_fees_e8s' : IDL.Nat64,\n    'transfer' : IDL.Opt(NeuronStakeTransfer),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'spawn_at_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n  });\n  const Governance = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'most_recent_monthly_node_provider_rewards' : IDL.Opt(\n      MostRecentMonthlyNodeProviderRewards\n    ),\n    'maturity_modulation_last_updated_at_timestamp_seconds' : IDL.Opt(\n      IDL.Nat64\n    ),\n    'wait_for_quiet_threshold_seconds' : IDL.Nat64,\n    'metrics' : IDL.Opt(GovernanceCachedMetrics),\n    'node_providers' : IDL.Vec(NodeProvider),\n    'cached_daily_maturity_modulation_basis_points' : IDL.Opt(IDL.Int32),\n    'economics' : IDL.Opt(NetworkEconomics),\n    'spawning_neurons' : IDL.Opt(IDL.Bool),\n    'latest_reward_event' : IDL.Opt(RewardEvent),\n    'to_claim_transfers' : IDL.Vec(NeuronStakeTransfer),\n    'short_voting_period_seconds' : IDL.Nat64,\n    'proposals' : IDL.Vec(IDL.Tuple(IDL.Nat64, ProposalData)),\n    'in_flight_commands' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInFlightCommand)),\n    'neurons' : IDL.Vec(IDL.Tuple(IDL.Nat64, Neuron)),\n    'genesis_timestamp_seconds' : IDL.Nat64,\n  });\n  return [Governance];\n};\n", "/* Do not edit.  Compiled with ./scripts/compile-idl-js from packages/nns/candid/governance.did */\nexport const idlFactory = ({ IDL }) => {\n  const Proposal = IDL.Rec();\n  const NeuronId = IDL.Record({ 'id' : IDL.Nat64 });\n  const Followees = IDL.Record({ 'followees' : IDL.Vec(NeuronId) });\n  const AccountIdentifier = IDL.Record({ 'hash' : IDL.Vec(IDL.Nat8) });\n  const NodeProvider = IDL.Record({\n    'id' : IDL.Opt(IDL.Principal),\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardToNeuron = IDL.Record({ 'dissolve_delay_seconds' : IDL.Nat64 });\n  const RewardToAccount = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardMode = IDL.Variant({\n    'RewardToNeuron' : RewardToNeuron,\n    'RewardToAccount' : RewardToAccount,\n  });\n  const RewardNodeProvider = IDL.Record({\n    'node_provider' : IDL.Opt(NodeProvider),\n    'reward_mode' : IDL.Opt(RewardMode),\n    'amount_e8s' : IDL.Nat64,\n  });\n  const MostRecentMonthlyNodeProviderRewards = IDL.Record({\n    'timestamp' : IDL.Nat64,\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const GovernanceCachedMetrics = IDL.Record({\n    'not_dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'garbage_collectable_neurons_count' : IDL.Nat64,\n    'neurons_with_invalid_stake_count' : IDL.Nat64,\n    'not_dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'total_supply_icp' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_count' : IDL.Nat64,\n    'dissolved_neurons_count' : IDL.Nat64,\n    'total_staked_e8s' : IDL.Nat64,\n    'not_dissolving_neurons_count' : IDL.Nat64,\n    'dissolved_neurons_e8s' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_e8s' : IDL.Nat64,\n    'dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'dissolving_neurons_count' : IDL.Nat64,\n    'dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'community_fund_total_staked_e8s' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const NetworkEconomics = IDL.Record({\n    'neuron_minimum_stake_e8s' : IDL.Nat64,\n    'max_proposals_to_keep_per_topic' : IDL.Nat32,\n    'neuron_management_fee_per_proposal_e8s' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'transaction_fee_e8s' : IDL.Nat64,\n    'neuron_spawn_dissolve_delay_seconds' : IDL.Nat64,\n    'minimum_icp_xdr_rate' : IDL.Nat64,\n    'maximum_node_provider_rewards_e8s' : IDL.Nat64,\n  });\n  const RewardEvent = IDL.Record({\n    'day_after_genesis' : IDL.Nat64,\n    'actual_timestamp_seconds' : IDL.Nat64,\n    'distributed_e8s_equivalent' : IDL.Nat64,\n    'settled_proposals' : IDL.Vec(NeuronId),\n  });\n  const NeuronStakeTransfer = IDL.Record({\n    'to_subaccount' : IDL.Vec(IDL.Nat8),\n    'neuron_stake_e8s' : IDL.Nat64,\n    'from' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Vec(IDL.Nat8),\n    'transfer_timestamp' : IDL.Nat64,\n    'block_height' : IDL.Nat64,\n  });\n  const GovernanceError = IDL.Record({\n    'error_message' : IDL.Text,\n    'error_type' : IDL.Int32,\n  });\n  const CfNeuron = IDL.Record({\n    'nns_neuron_id' : IDL.Nat64,\n    'amount_icp_e8s' : IDL.Nat64,\n  });\n  const CfParticipant = IDL.Record({\n    'hotkey_principal' : IDL.Text,\n    'cf_neurons' : IDL.Vec(CfNeuron),\n  });\n  const Ballot = IDL.Record({ 'vote' : IDL.Int32, 'voting_power' : IDL.Nat64 });\n  const Tally = IDL.Record({\n    'no' : IDL.Nat64,\n    'yes' : IDL.Nat64,\n    'total' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const KnownNeuronData = IDL.Record({\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n  });\n  const KnownNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n  });\n  const Spawn = IDL.Record({\n    'percentage_to_spawn' : IDL.Opt(IDL.Nat32),\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Opt(IDL.Nat64),\n  });\n  const Split = IDL.Record({ 'amount_e8s' : IDL.Nat64 });\n  const Follow = IDL.Record({\n    'topic' : IDL.Int32,\n    'followees' : IDL.Vec(NeuronId),\n  });\n  const ClaimOrRefreshNeuronFromAccount = IDL.Record({\n    'controller' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n  });\n  const By = IDL.Variant({\n    'NeuronIdOrSubaccount' : IDL.Record({}),\n    'MemoAndController' : ClaimOrRefreshNeuronFromAccount,\n    'Memo' : IDL.Nat64,\n  });\n  const ClaimOrRefresh = IDL.Record({ 'by' : IDL.Opt(By) });\n  const RemoveHotKey = IDL.Record({\n    'hot_key_to_remove' : IDL.Opt(IDL.Principal),\n  });\n  const AddHotKey = IDL.Record({ 'new_hot_key' : IDL.Opt(IDL.Principal) });\n  const ChangeAutoStakeMaturity = IDL.Record({\n    'requested_setting_for_auto_stake_maturity' : IDL.Bool,\n  });\n  const IncreaseDissolveDelay = IDL.Record({\n    'additional_dissolve_delay_seconds' : IDL.Nat32,\n  });\n  const SetDissolveTimestamp = IDL.Record({\n    'dissolve_timestamp_seconds' : IDL.Nat64,\n  });\n  const Operation = IDL.Variant({\n    'RemoveHotKey' : RemoveHotKey,\n    'AddHotKey' : AddHotKey,\n    'ChangeAutoStakeMaturity' : ChangeAutoStakeMaturity,\n    'StopDissolving' : IDL.Record({}),\n    'StartDissolving' : IDL.Record({}),\n    'IncreaseDissolveDelay' : IncreaseDissolveDelay,\n    'JoinCommunityFund' : IDL.Record({}),\n    'LeaveCommunityFund' : IDL.Record({}),\n    'SetDissolveTimestamp' : SetDissolveTimestamp,\n  });\n  const Configure = IDL.Record({ 'operation' : IDL.Opt(Operation) });\n  const RegisterVote = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal' : IDL.Opt(NeuronId),\n  });\n  const Merge = IDL.Record({ 'source_neuron_id' : IDL.Opt(NeuronId) });\n  const DisburseToNeuron = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'kyc_verified' : IDL.Bool,\n    'amount_e8s' : IDL.Nat64,\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Nat64,\n  });\n  const StakeMaturity = IDL.Record({\n    'percentage_to_stake' : IDL.Opt(IDL.Nat32),\n  });\n  const MergeMaturity = IDL.Record({ 'percentage_to_merge' : IDL.Nat32 });\n  const Amount = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const Disburse = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n    'amount' : IDL.Opt(Amount),\n  });\n  const Command = IDL.Variant({\n    'Spawn' : Spawn,\n    'Split' : Split,\n    'Follow' : Follow,\n    'ClaimOrRefresh' : ClaimOrRefresh,\n    'Configure' : Configure,\n    'RegisterVote' : RegisterVote,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'MakeProposal' : Proposal,\n    'StakeMaturity' : StakeMaturity,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronIdOrSubaccount = IDL.Variant({\n    'Subaccount' : IDL.Vec(IDL.Nat8),\n    'NeuronId' : NeuronId,\n  });\n  const ManageNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'command' : IDL.Opt(Command),\n    'neuron_id_or_subaccount' : IDL.Opt(NeuronIdOrSubaccount),\n  });\n  const ExecuteNnsFunction = IDL.Record({\n    'nns_function' : IDL.Int32,\n    'payload' : IDL.Vec(IDL.Nat8),\n  });\n  const Params = IDL.Record({\n    'min_participant_icp_e8s' : IDL.Nat64,\n    'max_icp_e8s' : IDL.Nat64,\n    'swap_due_timestamp_seconds' : IDL.Nat64,\n    'min_participants' : IDL.Nat32,\n    'sns_token_e8s' : IDL.Nat64,\n    'max_participant_icp_e8s' : IDL.Nat64,\n    'min_icp_e8s' : IDL.Nat64,\n  });\n  const OpenSnsTokenSwap = IDL.Record({\n    'community_fund_investment_e8s' : IDL.Opt(IDL.Nat64),\n    'target_swap_canister_id' : IDL.Opt(IDL.Principal),\n    'params' : IDL.Opt(Params),\n  });\n  const TimeWindow = IDL.Record({\n    'start_timestamp_seconds' : IDL.Nat64,\n    'end_timestamp_seconds' : IDL.Nat64,\n  });\n  const SetOpenTimeWindowRequest = IDL.Record({\n    'open_time_window' : IDL.Opt(TimeWindow),\n  });\n  const SetSnsTokenSwapOpenTimeWindow = IDL.Record({\n    'request' : IDL.Opt(SetOpenTimeWindowRequest),\n    'swap_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const SetDefaultFollowees = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n  });\n  const RewardNodeProviders = IDL.Record({\n    'use_registry_derived_rewards' : IDL.Opt(IDL.Bool),\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const ApproveGenesisKyc = IDL.Record({\n    'principals' : IDL.Vec(IDL.Principal),\n  });\n  const Change = IDL.Variant({\n    'ToRemove' : NodeProvider,\n    'ToAdd' : NodeProvider,\n  });\n  const AddOrRemoveNodeProvider = IDL.Record({ 'change' : IDL.Opt(Change) });\n  const Motion = IDL.Record({ 'motion_text' : IDL.Text });\n  const Action = IDL.Variant({\n    'RegisterKnownNeuron' : KnownNeuron,\n    'ManageNeuron' : ManageNeuron,\n    'ExecuteNnsFunction' : ExecuteNnsFunction,\n    'RewardNodeProvider' : RewardNodeProvider,\n    'OpenSnsTokenSwap' : OpenSnsTokenSwap,\n    'SetSnsTokenSwapOpenTimeWindow' : SetSnsTokenSwapOpenTimeWindow,\n    'SetDefaultFollowees' : SetDefaultFollowees,\n    'RewardNodeProviders' : RewardNodeProviders,\n    'ManageNetworkEconomics' : NetworkEconomics,\n    'ApproveGenesisKyc' : ApproveGenesisKyc,\n    'AddOrRemoveNodeProvider' : AddOrRemoveNodeProvider,\n    'Motion' : Motion,\n  });\n  Proposal.fill(\n    IDL.Record({\n      'url' : IDL.Text,\n      'title' : IDL.Opt(IDL.Text),\n      'action' : IDL.Opt(Action),\n      'summary' : IDL.Text,\n    })\n  );\n  const WaitForQuietState = IDL.Record({\n    'current_deadline_timestamp_seconds' : IDL.Nat64,\n  });\n  const ProposalData = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'cf_participants' : IDL.Vec(CfParticipant),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'sns_token_swap_lifecycle' : IDL.Opt(IDL.Int32),\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'wait_for_quiet_state' : IDL.Opt(WaitForQuietState),\n    'executed_timestamp_seconds' : IDL.Nat64,\n    'original_total_community_fund_maturity_e8s_equivalent' : IDL.Opt(\n      IDL.Nat64\n    ),\n  });\n  const Command_2 = IDL.Variant({\n    'Spawn' : NeuronId,\n    'Split' : Split,\n    'Configure' : Configure,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'SyncCommand' : IDL.Record({}),\n    'ClaimOrRefreshNeuron' : ClaimOrRefresh,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronInFlightCommand = IDL.Record({\n    'command' : IDL.Opt(Command_2),\n    'timestamp' : IDL.Nat64,\n  });\n  const BallotInfo = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const DissolveState = IDL.Variant({\n    'DissolveDelaySeconds' : IDL.Nat64,\n    'WhenDissolvedTimestampSeconds' : IDL.Nat64,\n  });\n  const Neuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'staked_maturity_e8s_equivalent' : IDL.Opt(IDL.Nat64),\n    'controller' : IDL.Opt(IDL.Principal),\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'kyc_verified' : IDL.Bool,\n    'not_for_profit' : IDL.Bool,\n    'maturity_e8s_equivalent' : IDL.Nat64,\n    'cached_neuron_stake_e8s' : IDL.Nat64,\n    'created_timestamp_seconds' : IDL.Nat64,\n    'auto_stake_maturity' : IDL.Opt(IDL.Bool),\n    'aging_since_timestamp_seconds' : IDL.Nat64,\n    'hot_keys' : IDL.Vec(IDL.Principal),\n    'account' : IDL.Vec(IDL.Nat8),\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'dissolve_state' : IDL.Opt(DissolveState),\n    'followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'neuron_fees_e8s' : IDL.Nat64,\n    'transfer' : IDL.Opt(NeuronStakeTransfer),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'spawn_at_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n  });\n  const Governance = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'most_recent_monthly_node_provider_rewards' : IDL.Opt(\n      MostRecentMonthlyNodeProviderRewards\n    ),\n    'maturity_modulation_last_updated_at_timestamp_seconds' : IDL.Opt(\n      IDL.Nat64\n    ),\n    'wait_for_quiet_threshold_seconds' : IDL.Nat64,\n    'metrics' : IDL.Opt(GovernanceCachedMetrics),\n    'node_providers' : IDL.Vec(NodeProvider),\n    'cached_daily_maturity_modulation_basis_points' : IDL.Opt(IDL.Int32),\n    'economics' : IDL.Opt(NetworkEconomics),\n    'spawning_neurons' : IDL.Opt(IDL.Bool),\n    'latest_reward_event' : IDL.Opt(RewardEvent),\n    'to_claim_transfers' : IDL.Vec(NeuronStakeTransfer),\n    'short_voting_period_seconds' : IDL.Nat64,\n    'proposals' : IDL.Vec(IDL.Tuple(IDL.Nat64, ProposalData)),\n    'in_flight_commands' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInFlightCommand)),\n    'neurons' : IDL.Vec(IDL.Tuple(IDL.Nat64, Neuron)),\n    'genesis_timestamp_seconds' : IDL.Nat64,\n  });\n  const Result = IDL.Variant({ 'Ok' : IDL.Null, 'Err' : GovernanceError });\n  const Result_1 = IDL.Variant({\n    'Error' : GovernanceError,\n    'NeuronId' : NeuronId,\n  });\n  const ClaimOrRefreshNeuronFromAccountResponse = IDL.Record({\n    'result' : IDL.Opt(Result_1),\n  });\n  const Result_2 = IDL.Variant({ 'Ok' : Neuron, 'Err' : GovernanceError });\n  const Result_3 = IDL.Variant({\n    'Ok' : RewardNodeProviders,\n    'Err' : GovernanceError,\n  });\n  const NeuronInfo = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'created_timestamp_seconds' : IDL.Nat64,\n    'state' : IDL.Int32,\n    'stake_e8s' : IDL.Nat64,\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'retrieved_at_timestamp_seconds' : IDL.Nat64,\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'voting_power' : IDL.Nat64,\n    'age_seconds' : IDL.Nat64,\n  });\n  const Result_4 = IDL.Variant({ 'Ok' : NeuronInfo, 'Err' : GovernanceError });\n  const Result_5 = IDL.Variant({\n    'Ok' : NodeProvider,\n    'Err' : GovernanceError,\n  });\n  const ProposalInfo = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'status' : IDL.Int32,\n    'topic' : IDL.Int32,\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'deadline_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'reward_status' : IDL.Int32,\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'executed_timestamp_seconds' : IDL.Nat64,\n  });\n  const ListKnownNeuronsResponse = IDL.Record({\n    'known_neurons' : IDL.Vec(KnownNeuron),\n  });\n  const ListNeurons = IDL.Record({\n    'neuron_ids' : IDL.Vec(IDL.Nat64),\n    'include_neurons_readable_by_caller' : IDL.Bool,\n  });\n  const ListNeuronsResponse = IDL.Record({\n    'neuron_infos' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInfo)),\n    'full_neurons' : IDL.Vec(Neuron),\n  });\n  const ListNodeProvidersResponse = IDL.Record({\n    'node_providers' : IDL.Vec(NodeProvider),\n  });\n  const ListProposalInfo = IDL.Record({\n    'include_reward_status' : IDL.Vec(IDL.Int32),\n    'before_proposal' : IDL.Opt(NeuronId),\n    'limit' : IDL.Nat32,\n    'exclude_topic' : IDL.Vec(IDL.Int32),\n    'include_status' : IDL.Vec(IDL.Int32),\n  });\n  const ListProposalInfoResponse = IDL.Record({\n    'proposal_info' : IDL.Vec(ProposalInfo),\n  });\n  const SpawnResponse = IDL.Record({ 'created_neuron_id' : IDL.Opt(NeuronId) });\n  const ClaimOrRefreshResponse = IDL.Record({\n    'refreshed_neuron_id' : IDL.Opt(NeuronId),\n  });\n  const MakeProposalResponse = IDL.Record({\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const StakeMaturityResponse = IDL.Record({\n    'maturity_e8s' : IDL.Nat64,\n    'staked_maturity_e8s' : IDL.Nat64,\n  });\n  const MergeMaturityResponse = IDL.Record({\n    'merged_maturity_e8s' : IDL.Nat64,\n    'new_stake_e8s' : IDL.Nat64,\n  });\n  const DisburseResponse = IDL.Record({ 'transfer_block_height' : IDL.Nat64 });\n  const Command_1 = IDL.Variant({\n    'Error' : GovernanceError,\n    'Spawn' : SpawnResponse,\n    'Split' : SpawnResponse,\n    'Follow' : IDL.Record({}),\n    'ClaimOrRefresh' : ClaimOrRefreshResponse,\n    'Configure' : IDL.Record({}),\n    'RegisterVote' : IDL.Record({}),\n    'Merge' : IDL.Record({}),\n    'DisburseToNeuron' : SpawnResponse,\n    'MakeProposal' : MakeProposalResponse,\n    'StakeMaturity' : StakeMaturityResponse,\n    'MergeMaturity' : MergeMaturityResponse,\n    'Disburse' : DisburseResponse,\n  });\n  const ManageNeuronResponse = IDL.Record({ 'command' : IDL.Opt(Command_1) });\n  const Committed = IDL.Record({\n    'sns_governance_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const Result_6 = IDL.Variant({\n    'Committed' : Committed,\n    'Aborted' : IDL.Record({}),\n  });\n  const SettleCommunityFundParticipation = IDL.Record({\n    'result' : IDL.Opt(Result_6),\n    'open_sns_token_swap_proposal_id' : IDL.Opt(IDL.Nat64),\n  });\n  const UpdateNodeProvider = IDL.Record({\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  return IDL.Service({\n    'claim_gtc_neurons' : IDL.Func(\n        [IDL.Principal, IDL.Vec(NeuronId)],\n        [Result],\n        [],\n      ),\n    'claim_or_refresh_neuron_from_account' : IDL.Func(\n        [ClaimOrRefreshNeuronFromAccount],\n        [ClaimOrRefreshNeuronFromAccountResponse],\n        [],\n      ),\n    'get_build_metadata' : IDL.Func([], [IDL.Text], ['query']),\n    'get_full_neuron' : IDL.Func([IDL.Nat64], [Result_2], ['query']),\n    'get_full_neuron_by_id_or_subaccount' : IDL.Func(\n        [NeuronIdOrSubaccount],\n        [Result_2],\n        ['query'],\n      ),\n    'get_monthly_node_provider_rewards' : IDL.Func([], [Result_3], []),\n    'get_most_recent_monthly_node_provider_rewards' : IDL.Func(\n        [],\n        [IDL.Opt(MostRecentMonthlyNodeProviderRewards)],\n        ['query'],\n      ),\n    'get_network_economics_parameters' : IDL.Func(\n        [],\n        [NetworkEconomics],\n        ['query'],\n      ),\n    'get_neuron_ids' : IDL.Func([], [IDL.Vec(IDL.Nat64)], ['query']),\n    'get_neuron_info' : IDL.Func([IDL.Nat64], [Result_4], ['query']),\n    'get_neuron_info_by_id_or_subaccount' : IDL.Func(\n        [NeuronIdOrSubaccount],\n        [Result_4],\n        ['query'],\n      ),\n    'get_node_provider_by_caller' : IDL.Func([IDL.Null], [Result_5], ['query']),\n    'get_pending_proposals' : IDL.Func([], [IDL.Vec(ProposalInfo)], ['query']),\n    'get_proposal_info' : IDL.Func(\n        [IDL.Nat64],\n        [IDL.Opt(ProposalInfo)],\n        ['query'],\n      ),\n    'list_known_neurons' : IDL.Func([], [ListKnownNeuronsResponse], ['query']),\n    'list_neurons' : IDL.Func([ListNeurons], [ListNeuronsResponse], ['query']),\n    'list_node_providers' : IDL.Func(\n        [],\n        [ListNodeProvidersResponse],\n        ['query'],\n      ),\n    'list_proposals' : IDL.Func(\n        [ListProposalInfo],\n        [ListProposalInfoResponse],\n        ['query'],\n      ),\n    'manage_neuron' : IDL.Func([ManageNeuron], [ManageNeuronResponse], []),\n    'settle_community_fund_participation' : IDL.Func(\n        [SettleCommunityFundParticipation],\n        [Result],\n        [],\n      ),\n    'transfer_gtc_neuron' : IDL.Func([NeuronId, NeuronId], [Result], []),\n    'update_node_provider' : IDL.Func([UpdateNodeProvider], [Result], []),\n  });\n};\nexport const init = ({ IDL }) => {\n  const Proposal = IDL.Rec();\n  const NeuronId = IDL.Record({ 'id' : IDL.Nat64 });\n  const Followees = IDL.Record({ 'followees' : IDL.Vec(NeuronId) });\n  const AccountIdentifier = IDL.Record({ 'hash' : IDL.Vec(IDL.Nat8) });\n  const NodeProvider = IDL.Record({\n    'id' : IDL.Opt(IDL.Principal),\n    'reward_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardToNeuron = IDL.Record({ 'dissolve_delay_seconds' : IDL.Nat64 });\n  const RewardToAccount = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n  });\n  const RewardMode = IDL.Variant({\n    'RewardToNeuron' : RewardToNeuron,\n    'RewardToAccount' : RewardToAccount,\n  });\n  const RewardNodeProvider = IDL.Record({\n    'node_provider' : IDL.Opt(NodeProvider),\n    'reward_mode' : IDL.Opt(RewardMode),\n    'amount_e8s' : IDL.Nat64,\n  });\n  const MostRecentMonthlyNodeProviderRewards = IDL.Record({\n    'timestamp' : IDL.Nat64,\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const GovernanceCachedMetrics = IDL.Record({\n    'not_dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'garbage_collectable_neurons_count' : IDL.Nat64,\n    'neurons_with_invalid_stake_count' : IDL.Nat64,\n    'not_dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'total_supply_icp' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_count' : IDL.Nat64,\n    'dissolved_neurons_count' : IDL.Nat64,\n    'total_staked_e8s' : IDL.Nat64,\n    'not_dissolving_neurons_count' : IDL.Nat64,\n    'dissolved_neurons_e8s' : IDL.Nat64,\n    'neurons_with_less_than_6_months_dissolve_delay_e8s' : IDL.Nat64,\n    'dissolving_neurons_count_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Nat64)\n    ),\n    'dissolving_neurons_count' : IDL.Nat64,\n    'dissolving_neurons_e8s_buckets' : IDL.Vec(\n      IDL.Tuple(IDL.Nat64, IDL.Float64)\n    ),\n    'community_fund_total_staked_e8s' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const NetworkEconomics = IDL.Record({\n    'neuron_minimum_stake_e8s' : IDL.Nat64,\n    'max_proposals_to_keep_per_topic' : IDL.Nat32,\n    'neuron_management_fee_per_proposal_e8s' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'transaction_fee_e8s' : IDL.Nat64,\n    'neuron_spawn_dissolve_delay_seconds' : IDL.Nat64,\n    'minimum_icp_xdr_rate' : IDL.Nat64,\n    'maximum_node_provider_rewards_e8s' : IDL.Nat64,\n  });\n  const RewardEvent = IDL.Record({\n    'day_after_genesis' : IDL.Nat64,\n    'actual_timestamp_seconds' : IDL.Nat64,\n    'distributed_e8s_equivalent' : IDL.Nat64,\n    'settled_proposals' : IDL.Vec(NeuronId),\n  });\n  const NeuronStakeTransfer = IDL.Record({\n    'to_subaccount' : IDL.Vec(IDL.Nat8),\n    'neuron_stake_e8s' : IDL.Nat64,\n    'from' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n    'from_subaccount' : IDL.Vec(IDL.Nat8),\n    'transfer_timestamp' : IDL.Nat64,\n    'block_height' : IDL.Nat64,\n  });\n  const GovernanceError = IDL.Record({\n    'error_message' : IDL.Text,\n    'error_type' : IDL.Int32,\n  });\n  const CfNeuron = IDL.Record({\n    'nns_neuron_id' : IDL.Nat64,\n    'amount_icp_e8s' : IDL.Nat64,\n  });\n  const CfParticipant = IDL.Record({\n    'hotkey_principal' : IDL.Text,\n    'cf_neurons' : IDL.Vec(CfNeuron),\n  });\n  const Ballot = IDL.Record({ 'vote' : IDL.Int32, 'voting_power' : IDL.Nat64 });\n  const Tally = IDL.Record({\n    'no' : IDL.Nat64,\n    'yes' : IDL.Nat64,\n    'total' : IDL.Nat64,\n    'timestamp_seconds' : IDL.Nat64,\n  });\n  const KnownNeuronData = IDL.Record({\n    'name' : IDL.Text,\n    'description' : IDL.Opt(IDL.Text),\n  });\n  const KnownNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n  });\n  const Spawn = IDL.Record({\n    'percentage_to_spawn' : IDL.Opt(IDL.Nat32),\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Opt(IDL.Nat64),\n  });\n  const Split = IDL.Record({ 'amount_e8s' : IDL.Nat64 });\n  const Follow = IDL.Record({\n    'topic' : IDL.Int32,\n    'followees' : IDL.Vec(NeuronId),\n  });\n  const ClaimOrRefreshNeuronFromAccount = IDL.Record({\n    'controller' : IDL.Opt(IDL.Principal),\n    'memo' : IDL.Nat64,\n  });\n  const By = IDL.Variant({\n    'NeuronIdOrSubaccount' : IDL.Record({}),\n    'MemoAndController' : ClaimOrRefreshNeuronFromAccount,\n    'Memo' : IDL.Nat64,\n  });\n  const ClaimOrRefresh = IDL.Record({ 'by' : IDL.Opt(By) });\n  const RemoveHotKey = IDL.Record({\n    'hot_key_to_remove' : IDL.Opt(IDL.Principal),\n  });\n  const AddHotKey = IDL.Record({ 'new_hot_key' : IDL.Opt(IDL.Principal) });\n  const ChangeAutoStakeMaturity = IDL.Record({\n    'requested_setting_for_auto_stake_maturity' : IDL.Bool,\n  });\n  const IncreaseDissolveDelay = IDL.Record({\n    'additional_dissolve_delay_seconds' : IDL.Nat32,\n  });\n  const SetDissolveTimestamp = IDL.Record({\n    'dissolve_timestamp_seconds' : IDL.Nat64,\n  });\n  const Operation = IDL.Variant({\n    'RemoveHotKey' : RemoveHotKey,\n    'AddHotKey' : AddHotKey,\n    'ChangeAutoStakeMaturity' : ChangeAutoStakeMaturity,\n    'StopDissolving' : IDL.Record({}),\n    'StartDissolving' : IDL.Record({}),\n    'IncreaseDissolveDelay' : IncreaseDissolveDelay,\n    'JoinCommunityFund' : IDL.Record({}),\n    'LeaveCommunityFund' : IDL.Record({}),\n    'SetDissolveTimestamp' : SetDissolveTimestamp,\n  });\n  const Configure = IDL.Record({ 'operation' : IDL.Opt(Operation) });\n  const RegisterVote = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal' : IDL.Opt(NeuronId),\n  });\n  const Merge = IDL.Record({ 'source_neuron_id' : IDL.Opt(NeuronId) });\n  const DisburseToNeuron = IDL.Record({\n    'dissolve_delay_seconds' : IDL.Nat64,\n    'kyc_verified' : IDL.Bool,\n    'amount_e8s' : IDL.Nat64,\n    'new_controller' : IDL.Opt(IDL.Principal),\n    'nonce' : IDL.Nat64,\n  });\n  const StakeMaturity = IDL.Record({\n    'percentage_to_stake' : IDL.Opt(IDL.Nat32),\n  });\n  const MergeMaturity = IDL.Record({ 'percentage_to_merge' : IDL.Nat32 });\n  const Amount = IDL.Record({ 'e8s' : IDL.Nat64 });\n  const Disburse = IDL.Record({\n    'to_account' : IDL.Opt(AccountIdentifier),\n    'amount' : IDL.Opt(Amount),\n  });\n  const Command = IDL.Variant({\n    'Spawn' : Spawn,\n    'Split' : Split,\n    'Follow' : Follow,\n    'ClaimOrRefresh' : ClaimOrRefresh,\n    'Configure' : Configure,\n    'RegisterVote' : RegisterVote,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'MakeProposal' : Proposal,\n    'StakeMaturity' : StakeMaturity,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronIdOrSubaccount = IDL.Variant({\n    'Subaccount' : IDL.Vec(IDL.Nat8),\n    'NeuronId' : NeuronId,\n  });\n  const ManageNeuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'command' : IDL.Opt(Command),\n    'neuron_id_or_subaccount' : IDL.Opt(NeuronIdOrSubaccount),\n  });\n  const ExecuteNnsFunction = IDL.Record({\n    'nns_function' : IDL.Int32,\n    'payload' : IDL.Vec(IDL.Nat8),\n  });\n  const Params = IDL.Record({\n    'min_participant_icp_e8s' : IDL.Nat64,\n    'max_icp_e8s' : IDL.Nat64,\n    'swap_due_timestamp_seconds' : IDL.Nat64,\n    'min_participants' : IDL.Nat32,\n    'sns_token_e8s' : IDL.Nat64,\n    'max_participant_icp_e8s' : IDL.Nat64,\n    'min_icp_e8s' : IDL.Nat64,\n  });\n  const OpenSnsTokenSwap = IDL.Record({\n    'community_fund_investment_e8s' : IDL.Opt(IDL.Nat64),\n    'target_swap_canister_id' : IDL.Opt(IDL.Principal),\n    'params' : IDL.Opt(Params),\n  });\n  const TimeWindow = IDL.Record({\n    'start_timestamp_seconds' : IDL.Nat64,\n    'end_timestamp_seconds' : IDL.Nat64,\n  });\n  const SetOpenTimeWindowRequest = IDL.Record({\n    'open_time_window' : IDL.Opt(TimeWindow),\n  });\n  const SetSnsTokenSwapOpenTimeWindow = IDL.Record({\n    'request' : IDL.Opt(SetOpenTimeWindowRequest),\n    'swap_canister_id' : IDL.Opt(IDL.Principal),\n  });\n  const SetDefaultFollowees = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n  });\n  const RewardNodeProviders = IDL.Record({\n    'use_registry_derived_rewards' : IDL.Opt(IDL.Bool),\n    'rewards' : IDL.Vec(RewardNodeProvider),\n  });\n  const ApproveGenesisKyc = IDL.Record({\n    'principals' : IDL.Vec(IDL.Principal),\n  });\n  const Change = IDL.Variant({\n    'ToRemove' : NodeProvider,\n    'ToAdd' : NodeProvider,\n  });\n  const AddOrRemoveNodeProvider = IDL.Record({ 'change' : IDL.Opt(Change) });\n  const Motion = IDL.Record({ 'motion_text' : IDL.Text });\n  const Action = IDL.Variant({\n    'RegisterKnownNeuron' : KnownNeuron,\n    'ManageNeuron' : ManageNeuron,\n    'ExecuteNnsFunction' : ExecuteNnsFunction,\n    'RewardNodeProvider' : RewardNodeProvider,\n    'OpenSnsTokenSwap' : OpenSnsTokenSwap,\n    'SetSnsTokenSwapOpenTimeWindow' : SetSnsTokenSwapOpenTimeWindow,\n    'SetDefaultFollowees' : SetDefaultFollowees,\n    'RewardNodeProviders' : RewardNodeProviders,\n    'ManageNetworkEconomics' : NetworkEconomics,\n    'ApproveGenesisKyc' : ApproveGenesisKyc,\n    'AddOrRemoveNodeProvider' : AddOrRemoveNodeProvider,\n    'Motion' : Motion,\n  });\n  Proposal.fill(\n    IDL.Record({\n      'url' : IDL.Text,\n      'title' : IDL.Opt(IDL.Text),\n      'action' : IDL.Opt(Action),\n      'summary' : IDL.Text,\n    })\n  );\n  const WaitForQuietState = IDL.Record({\n    'current_deadline_timestamp_seconds' : IDL.Nat64,\n  });\n  const ProposalData = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'failure_reason' : IDL.Opt(GovernanceError),\n    'cf_participants' : IDL.Vec(CfParticipant),\n    'ballots' : IDL.Vec(IDL.Tuple(IDL.Nat64, Ballot)),\n    'proposal_timestamp_seconds' : IDL.Nat64,\n    'reward_event_round' : IDL.Nat64,\n    'failed_timestamp_seconds' : IDL.Nat64,\n    'reject_cost_e8s' : IDL.Nat64,\n    'latest_tally' : IDL.Opt(Tally),\n    'sns_token_swap_lifecycle' : IDL.Opt(IDL.Int32),\n    'decided_timestamp_seconds' : IDL.Nat64,\n    'proposal' : IDL.Opt(Proposal),\n    'proposer' : IDL.Opt(NeuronId),\n    'wait_for_quiet_state' : IDL.Opt(WaitForQuietState),\n    'executed_timestamp_seconds' : IDL.Nat64,\n    'original_total_community_fund_maturity_e8s_equivalent' : IDL.Opt(\n      IDL.Nat64\n    ),\n  });\n  const Command_2 = IDL.Variant({\n    'Spawn' : NeuronId,\n    'Split' : Split,\n    'Configure' : Configure,\n    'Merge' : Merge,\n    'DisburseToNeuron' : DisburseToNeuron,\n    'SyncCommand' : IDL.Record({}),\n    'ClaimOrRefreshNeuron' : ClaimOrRefresh,\n    'MergeMaturity' : MergeMaturity,\n    'Disburse' : Disburse,\n  });\n  const NeuronInFlightCommand = IDL.Record({\n    'command' : IDL.Opt(Command_2),\n    'timestamp' : IDL.Nat64,\n  });\n  const BallotInfo = IDL.Record({\n    'vote' : IDL.Int32,\n    'proposal_id' : IDL.Opt(NeuronId),\n  });\n  const DissolveState = IDL.Variant({\n    'DissolveDelaySeconds' : IDL.Nat64,\n    'WhenDissolvedTimestampSeconds' : IDL.Nat64,\n  });\n  const Neuron = IDL.Record({\n    'id' : IDL.Opt(NeuronId),\n    'staked_maturity_e8s_equivalent' : IDL.Opt(IDL.Nat64),\n    'controller' : IDL.Opt(IDL.Principal),\n    'recent_ballots' : IDL.Vec(BallotInfo),\n    'kyc_verified' : IDL.Bool,\n    'not_for_profit' : IDL.Bool,\n    'maturity_e8s_equivalent' : IDL.Nat64,\n    'cached_neuron_stake_e8s' : IDL.Nat64,\n    'created_timestamp_seconds' : IDL.Nat64,\n    'auto_stake_maturity' : IDL.Opt(IDL.Bool),\n    'aging_since_timestamp_seconds' : IDL.Nat64,\n    'hot_keys' : IDL.Vec(IDL.Principal),\n    'account' : IDL.Vec(IDL.Nat8),\n    'joined_community_fund_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n    'dissolve_state' : IDL.Opt(DissolveState),\n    'followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'neuron_fees_e8s' : IDL.Nat64,\n    'transfer' : IDL.Opt(NeuronStakeTransfer),\n    'known_neuron_data' : IDL.Opt(KnownNeuronData),\n    'spawn_at_timestamp_seconds' : IDL.Opt(IDL.Nat64),\n  });\n  const Governance = IDL.Record({\n    'default_followees' : IDL.Vec(IDL.Tuple(IDL.Int32, Followees)),\n    'most_recent_monthly_node_provider_rewards' : IDL.Opt(\n      MostRecentMonthlyNodeProviderRewards\n    ),\n    'maturity_modulation_last_updated_at_timestamp_seconds' : IDL.Opt(\n      IDL.Nat64\n    ),\n    'wait_for_quiet_threshold_seconds' : IDL.Nat64,\n    'metrics' : IDL.Opt(GovernanceCachedMetrics),\n    'node_providers' : IDL.Vec(NodeProvider),\n    'cached_daily_maturity_modulation_basis_points' : IDL.Opt(IDL.Int32),\n    'economics' : IDL.Opt(NetworkEconomics),\n    'spawning_neurons' : IDL.Opt(IDL.Bool),\n    'latest_reward_event' : IDL.Opt(RewardEvent),\n    'to_claim_transfers' : IDL.Vec(NeuronStakeTransfer),\n    'short_voting_period_seconds' : IDL.Nat64,\n    'proposals' : IDL.Vec(IDL.Tuple(IDL.Nat64, ProposalData)),\n    'in_flight_commands' : IDL.Vec(IDL.Tuple(IDL.Nat64, NeuronInFlightCommand)),\n    'neurons' : IDL.Vec(IDL.Tuple(IDL.Nat64, Neuron)),\n    'genesis_timestamp_seconds' : IDL.Nat64,\n  });\n  return [Governance];\n};\n", "import { Principal } from \"@dfinity/principal\";\nimport { arrayBufferToUint8Array, toNullable } from \"@dfinity/utils\";\nimport type {\n  AccountIdentifier as RawAccountIdentifier,\n  Action as RawAction,\n  Amount,\n  By as RawBy,\n  Change as RawChange,\n  Command as RawCommand,\n  Followees as RawFollowees,\n  ListNeurons as RawListNeurons,\n  ListProposalInfo,\n  ManageNeuron as RawManageNeuron,\n  NeuronId as RawNeuronId,\n  NeuronIdOrSubaccount as RawNeuronIdOrSubaccount,\n  NodeProvider as RawNodeProvider,\n  Operation as RawOperation,\n  RewardMode as RawRewardMode,\n} from \"../../../candid/governance\";\nimport type { AccountIdentifier as AccountIdentifierClass } from \"../../account_identifier\";\nimport type { Vote } from \"../../enums/governance.enums\";\nimport { UnsupportedValueError } from \"../../errors/governance.errors\";\nimport type { AccountIdentifier, E8s, NeuronId } from \"../../types/common\";\nimport type {\n  Action,\n  By,\n  Change,\n  ClaimOrRefreshNeuronRequest,\n  Command,\n  DisburseToNeuronRequest,\n  FollowRequest,\n  ListProposalsRequest,\n  MakeProposalRequest,\n  ManageNeuron,\n  NeuronIdOrSubaccount,\n  NodeProvider,\n  Operation,\n  ProposalId,\n  RewardMode,\n} from \"../../types/governance_converters\";\nimport { accountIdentifierToBytes } from \"../../utils/account_identifier.utils\";\n\nconst fromProposalId = (proposalId: ProposalId): RawNeuronId => ({\n  id: proposalId,\n});\n\nconst fromNeuronId = (neuronId: NeuronId): RawNeuronId => ({\n  id: neuronId,\n});\n\nconst fromFollowees = (followees: Array<NeuronId>): RawFollowees => ({\n  followees: followees.map(fromNeuronId),\n});\n\nconst fromNeuronIdOrSubaccount = (\n  neuronIdOrSubaccount: NeuronIdOrSubaccount\n): RawNeuronIdOrSubaccount => {\n  if (\"NeuronId\" in neuronIdOrSubaccount) {\n    return { NeuronId: { id: neuronIdOrSubaccount.NeuronId } };\n  }\n  if (\"Subaccount\" in neuronIdOrSubaccount) {\n    return { Subaccount: Uint8Array.from(neuronIdOrSubaccount.Subaccount) };\n  }\n  throw new UnsupportedValueError(neuronIdOrSubaccount);\n};\n\nconst fromAction = (action: Action): RawAction => {\n  if (\"ExecuteNnsFunction\" in action) {\n    const executeNnsFunction = action.ExecuteNnsFunction;\n\n    if (executeNnsFunction.payloadBytes === undefined) {\n      throw new Error(\"payloadBytes not found\");\n    }\n\n    return {\n      ExecuteNnsFunction: {\n        nns_function: executeNnsFunction.nnsFunctionId,\n        payload: arrayBufferToUint8Array(executeNnsFunction.payloadBytes),\n      },\n    };\n  }\n  if (\"ManageNeuron\" in action) {\n    const manageNeuron = action.ManageNeuron;\n    return {\n      ManageNeuron: fromManageNeuron(manageNeuron),\n    };\n  }\n  if (\"ApproveGenesisKyc\" in action) {\n    const approveGenesisKyc = action.ApproveGenesisKyc;\n    return {\n      ApproveGenesisKyc: {\n        principals: approveGenesisKyc.principals.map(Principal.fromText),\n      },\n    };\n  }\n  if (\"ManageNetworkEconomics\" in action) {\n    const networkEconomics = action.ManageNetworkEconomics;\n    return {\n      ManageNetworkEconomics: {\n        neuron_minimum_stake_e8s: networkEconomics.neuronMinimumStake,\n        max_proposals_to_keep_per_topic:\n          networkEconomics.maxProposalsToKeepPerTopic,\n        neuron_management_fee_per_proposal_e8s:\n          networkEconomics.neuronManagementFeePerProposal,\n        reject_cost_e8s: networkEconomics.rejectCost,\n        transaction_fee_e8s: networkEconomics.transactionFee,\n        neuron_spawn_dissolve_delay_seconds:\n          networkEconomics.neuronSpawnDissolveDelaySeconds,\n        minimum_icp_xdr_rate: networkEconomics.minimumIcpXdrRate,\n        maximum_node_provider_rewards_e8s:\n          networkEconomics.maximumNodeProviderRewards,\n      },\n    };\n  }\n  if (\"RewardNodeProvider\" in action) {\n    const rewardNodeProvider = action.RewardNodeProvider;\n    return {\n      RewardNodeProvider: {\n        node_provider: rewardNodeProvider.nodeProvider\n          ? [fromNodeProvider(rewardNodeProvider.nodeProvider)]\n          : [],\n        amount_e8s: rewardNodeProvider.amountE8s,\n        reward_mode:\n          rewardNodeProvider.rewardMode != null\n            ? [fromRewardMode(rewardNodeProvider.rewardMode)]\n            : [],\n      },\n    };\n  }\n  if (\"RewardNodeProviders\" in action) {\n    const rewardNodeProviders = action.RewardNodeProviders;\n    return {\n      RewardNodeProviders: {\n        use_registry_derived_rewards:\n          rewardNodeProviders.useRegistryDerivedRewards === undefined\n            ? []\n            : [rewardNodeProviders.useRegistryDerivedRewards],\n        rewards: rewardNodeProviders.rewards.map((r) => ({\n          node_provider: r.nodeProvider\n            ? [fromNodeProvider(r.nodeProvider)]\n            : [],\n          amount_e8s: r.amountE8s,\n          reward_mode:\n            r.rewardMode != null ? [fromRewardMode(r.rewardMode)] : [],\n        })),\n      },\n    };\n  }\n  if (\"AddOrRemoveNodeProvider\" in action) {\n    const addOrRemoveNodeProvider = action.AddOrRemoveNodeProvider;\n    return {\n      AddOrRemoveNodeProvider: {\n        change: addOrRemoveNodeProvider.change\n          ? [fromChange(addOrRemoveNodeProvider.change)]\n          : [],\n      },\n    };\n  }\n  if (\"Motion\" in action) {\n    const motion = action.Motion;\n    return {\n      Motion: {\n        motion_text: motion.motionText,\n      },\n    };\n  }\n\n  if (\"SetDefaultFollowees\" in action) {\n    const setDefaultFollowees = action.SetDefaultFollowees;\n    return {\n      SetDefaultFollowees: {\n        default_followees: setDefaultFollowees.defaultFollowees.map((f) => [\n          f.topic as number,\n          fromFollowees(f.followees),\n        ]),\n      },\n    };\n  }\n\n  if (\"RegisterKnownNeuron\" in action) {\n    const knownNeuron = action.RegisterKnownNeuron;\n    return {\n      RegisterKnownNeuron: {\n        id: [{ id: knownNeuron.id }],\n        known_neuron_data: [\n          {\n            name: knownNeuron.name,\n            description:\n              knownNeuron.description !== undefined\n                ? [knownNeuron.description]\n                : [],\n          },\n        ],\n      },\n    };\n  }\n\n  if (\"SetSnsTokenSwapOpenTimeWindow\" in action) {\n    const { request, swapCanisterId } = action.SetSnsTokenSwapOpenTimeWindow;\n\n    return {\n      SetSnsTokenSwapOpenTimeWindow: {\n        request:\n          request === undefined\n            ? []\n            : [\n                {\n                  open_time_window:\n                    request.openTimeWindow === undefined\n                      ? []\n                      : [\n                          {\n                            start_timestamp_seconds:\n                              request.openTimeWindow.startTimestampSeconds,\n                            end_timestamp_seconds:\n                              request.openTimeWindow.endTimestampSeconds,\n                          },\n                        ],\n                },\n              ],\n\n        swap_canister_id:\n          swapCanisterId === undefined\n            ? []\n            : [Principal.fromText(swapCanisterId)],\n      },\n    };\n  }\n\n  if (\"OpenSnsTokenSwap\" in action) {\n    const { communityFundInvestmentE8s, targetSwapCanisterId, params } =\n      action.OpenSnsTokenSwap;\n\n    return {\n      OpenSnsTokenSwap: {\n        community_fund_investment_e8s: toNullable(communityFundInvestmentE8s),\n        target_swap_canister_id: toNullable(targetSwapCanisterId),\n        params:\n          params === undefined\n            ? []\n            : [\n                {\n                  min_participant_icp_e8s: params.minParticipantIcpE8s,\n                  max_icp_e8s: params.maxIcpE8s,\n                  swap_due_timestamp_seconds: params.swapDueTimestampSeconds,\n                  min_participants: params.minParticipants,\n                  sns_token_e8s: params.snsTokenE8s,\n                  max_participant_icp_e8s: params.maxParticipantIcpE8s,\n                  min_icp_e8s: params.minIcpE8s,\n                },\n              ],\n      },\n    };\n  }\n\n  // If there's a missing action, this line will cause a compiler error.\n  throw new UnsupportedValueError(action);\n};\n\nconst fromCommand = (command: Command): RawCommand => {\n  if (\"Split\" in command) {\n    const split = command.Split;\n    return {\n      Split: {\n        amount_e8s: split.amount,\n      },\n    };\n  }\n  if (\"Follow\" in command) {\n    const follow = command.Follow;\n    return {\n      Follow: {\n        topic: follow.topic,\n        followees: follow.followees.map(fromNeuronId),\n      },\n    };\n  }\n  if (\"ClaimOrRefresh\" in command) {\n    const claimOrRefresh = command.ClaimOrRefresh;\n    return {\n      ClaimOrRefresh: {\n        by: claimOrRefresh.by ? [fromClaimOrRefreshBy(claimOrRefresh.by)] : [],\n      },\n    };\n  }\n  if (\"Configure\" in command) {\n    const configure = command.Configure;\n    return {\n      Configure: {\n        operation: configure.operation\n          ? [fromOperation(configure.operation)]\n          : [],\n      },\n    };\n  }\n  if (\"RegisterVote\" in command) {\n    const registerVote = command.RegisterVote;\n    return {\n      RegisterVote: {\n        vote: registerVote.vote,\n        proposal: registerVote.proposal\n          ? [fromProposalId(registerVote.proposal)]\n          : [],\n      },\n    };\n  }\n  if (\"DisburseToNeuron\" in command) {\n    const disburseToNeuron = command.DisburseToNeuron;\n    return {\n      DisburseToNeuron: {\n        dissolve_delay_seconds: disburseToNeuron.dissolveDelaySeconds,\n        kyc_verified: disburseToNeuron.kycVerified,\n        amount_e8s: disburseToNeuron.amount,\n        new_controller: disburseToNeuron.newController\n          ? [Principal.fromText(disburseToNeuron.newController)]\n          : [],\n        nonce: disburseToNeuron.nonce,\n      },\n    };\n  }\n  if (\"MergeMaturity\" in command) {\n    const mergeMaturity = command.MergeMaturity;\n    return {\n      MergeMaturity: {\n        percentage_to_merge: mergeMaturity.percentageToMerge,\n      },\n    };\n  }\n  if (\"StakeMaturity\" in command) {\n    const { percentageToStake } = command.StakeMaturity;\n    return {\n      StakeMaturity: {\n        percentage_to_stake: toNullable(percentageToStake),\n      },\n    };\n  }\n  if (\"MakeProposal\" in command) {\n    const makeProposal = command.MakeProposal;\n    return {\n      MakeProposal: {\n        url: makeProposal.url,\n        title: [],\n        action: makeProposal.action ? [fromAction(makeProposal.action)] : [],\n        summary: makeProposal.summary,\n      },\n    };\n  }\n  if (\"Disburse\" in command) {\n    const disburse = command.Disburse;\n    return {\n      Disburse: {\n        to_account: disburse.toAccountId\n          ? [fromAccountIdentifier(disburse.toAccountId)]\n          : [],\n        amount: disburse.amount ? [fromAmount(disburse.amount)] : [],\n      },\n    };\n  }\n  if (\"Spawn\" in command) {\n    const spawn = command.Spawn;\n    return {\n      Spawn: {\n        percentage_to_spawn:\n          spawn.percentageToSpawn === undefined\n            ? []\n            : [spawn.percentageToSpawn],\n        new_controller: spawn.newController\n          ? [Principal.fromText(spawn.newController)]\n          : [],\n        nonce: [],\n      },\n    };\n  }\n  if (\"Merge\" in command) {\n    const merge = command.Merge;\n    return {\n      Merge: {\n        source_neuron_id: merge.sourceNeuronId\n          ? [{ id: merge.sourceNeuronId }]\n          : [],\n      },\n    };\n  }\n\n  // If there's a missing command above, this line will cause a compiler error.\n  throw new UnsupportedValueError(command);\n};\n\nconst fromOperation = (operation: Operation): RawOperation => {\n  if (\"RemoveHotKey\" in operation) {\n    const removeHotKey = operation.RemoveHotKey;\n    return {\n      RemoveHotKey: {\n        hot_key_to_remove:\n          removeHotKey.hotKeyToRemove != null\n            ? [Principal.fromText(removeHotKey.hotKeyToRemove)]\n            : [],\n      },\n    };\n  }\n  if (\"AddHotKey\" in operation) {\n    const addHotKey = operation.AddHotKey;\n    return {\n      AddHotKey: {\n        new_hot_key: addHotKey.newHotKey\n          ? [Principal.fromText(addHotKey.newHotKey)]\n          : [],\n      },\n    };\n  }\n  if (\"StopDissolving\" in operation) {\n    return {\n      StopDissolving: {},\n    };\n  }\n  if (\"StartDissolving\" in operation) {\n    return {\n      StartDissolving: {},\n    };\n  }\n  if (\"IncreaseDissolveDelay\" in operation) {\n    const increaseDissolveDelay = operation.IncreaseDissolveDelay;\n    return {\n      IncreaseDissolveDelay: {\n        additional_dissolve_delay_seconds:\n          increaseDissolveDelay.additionalDissolveDelaySeconds,\n      },\n    };\n  }\n  if (\"JoinCommunityFund\" in operation) {\n    return operation;\n  }\n  if (\"LeaveCommunityFund\" in operation) {\n    return operation;\n  }\n  if (\"SetDissolveTimestamp\" in operation) {\n    const setDissolveTimestamp = operation.SetDissolveTimestamp;\n    return {\n      SetDissolveTimestamp: {\n        dissolve_timestamp_seconds:\n          setDissolveTimestamp.dissolveTimestampSeconds,\n      },\n    };\n  }\n  if (\"ChangeAutoStakeMaturity\" in operation) {\n    const { requestedSettingForAutoStakeMaturity } =\n      operation.ChangeAutoStakeMaturity;\n    return {\n      ChangeAutoStakeMaturity: {\n        requested_setting_for_auto_stake_maturity:\n          requestedSettingForAutoStakeMaturity,\n      },\n    };\n  }\n  // If there's a missing operation above, this line will cause a compiler error.\n  throw new UnsupportedValueError(operation);\n};\n\nconst fromChange = (change: Change): RawChange => {\n  if (\"ToRemove\" in change) {\n    return {\n      ToRemove: fromNodeProvider(change.ToRemove),\n    };\n  }\n  if (\"ToAdd\" in change) {\n    return {\n      ToAdd: fromNodeProvider(change.ToAdd),\n    };\n  }\n  // If there's a missing change above, this line will cause a compiler error.\n  throw new UnsupportedValueError(change);\n};\n\nconst fromNodeProvider = (nodeProvider: NodeProvider): RawNodeProvider => {\n  return {\n    id: nodeProvider.id != null ? [Principal.fromText(nodeProvider.id)] : [],\n    reward_account:\n      nodeProvider.rewardAccount != null\n        ? [fromAccountIdentifier(nodeProvider.rewardAccount)]\n        : [],\n  };\n};\n\nconst fromAmount = (amount: E8s): Amount => ({\n  e8s: amount,\n});\n\nconst fromAccountIdentifier = (\n  accountIdentifier: AccountIdentifier\n): RawAccountIdentifier => ({\n  hash: accountIdentifierToBytes(accountIdentifier),\n});\n\nconst fromRewardMode = (rewardMode: RewardMode): RawRewardMode => {\n  if (\"RewardToNeuron\" in rewardMode) {\n    return {\n      RewardToNeuron: {\n        dissolve_delay_seconds: rewardMode.RewardToNeuron.dissolveDelaySeconds,\n      },\n    };\n  } else if (\"RewardToAccount\" in rewardMode) {\n    return {\n      RewardToAccount: {\n        to_account:\n          rewardMode.RewardToAccount.toAccount != null\n            ? [fromAccountIdentifier(rewardMode.RewardToAccount.toAccount)]\n            : [],\n      },\n    };\n  } else {\n    // If there's a missing rewardMode above, this line will cause a compiler error.\n    throw new UnsupportedValueError(rewardMode);\n  }\n};\n\nconst fromClaimOrRefreshBy = (by: By): RawBy => {\n  if (\"NeuronIdOrSubaccount\" in by) {\n    return {\n      NeuronIdOrSubaccount: {},\n    };\n  } else if (\"Memo\" in by) {\n    return {\n      Memo: by.Memo,\n    };\n  } else if (\"MemoAndController\" in by) {\n    return {\n      MemoAndController: {\n        memo: by.MemoAndController.memo,\n        controller: by.MemoAndController.controller\n          ? [by.MemoAndController.controller]\n          : [],\n      },\n    };\n  } else {\n    // Ensures all cases are covered at compile-time.\n    throw new UnsupportedValueError(by);\n  }\n};\n\nexport const fromListNeurons = (neuronIds?: NeuronId[]): RawListNeurons => ({\n  neuron_ids: BigUint64Array.from(neuronIds ?? []),\n  include_neurons_readable_by_caller: neuronIds ? false : true,\n});\n\nexport const fromManageNeuron = ({\n  id,\n  command,\n  neuronIdOrSubaccount,\n}: ManageNeuron): RawManageNeuron => ({\n  id: id ? [fromNeuronId(id)] : [],\n  command: command ? [fromCommand(command)] : [],\n  neuron_id_or_subaccount: neuronIdOrSubaccount\n    ? [fromNeuronIdOrSubaccount(neuronIdOrSubaccount)]\n    : [],\n});\n\nexport const fromListProposalsRequest = ({\n  includeRewardStatus,\n  beforeProposal,\n  excludeTopic,\n  includeStatus,\n  limit,\n}: ListProposalsRequest): ListProposalInfo => {\n  return {\n    include_reward_status: Int32Array.from(includeRewardStatus),\n    before_proposal: beforeProposal ? [fromProposalId(beforeProposal)] : [],\n    limit: limit,\n    exclude_topic: Int32Array.from(excludeTopic),\n    include_status: Int32Array.from(includeStatus),\n  };\n};\n\n/* Protobuf is not supported yet\nexport const fromAddHotKeyRequest = (request: AddHotKeyRequest): PbManageNeuron => {\n  const hotkeyPrincipal = new PbPrincipalId();\n  hotkeyPrincipal.setSerializedId(\n    Principal.fromText(request.principal).toUint8Array()\n  );\n\n  const hotkey = new PbManageNeuron.AddHotKey();\n  hotkey.setNewHotKey(hotkeyPrincipal);\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setAddHotKey(hotkey);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n*/\n\nexport const fromClaimOrRefreshNeuronRequest = (\n  request: ClaimOrRefreshNeuronRequest\n): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    ClaimOrRefresh: { by: [{ NeuronIdOrSubaccount: {} }] },\n  };\n\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [{ NeuronId: { id: request.neuronId } }],\n  };\n};\n\nexport const toClaimOrRefreshRequest = ({\n  memo,\n  controller,\n}: {\n  memo: bigint;\n  controller?: Principal;\n}): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    ClaimOrRefresh: {\n      by: [\n        {\n          MemoAndController: {\n            controller: controller == undefined ? [] : [controller],\n            memo,\n          },\n        },\n      ],\n    },\n  };\n\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [],\n  };\n};\n\n/* Protobuf is not supported yet\nexport const fromMergeMaturityRequest = (\n  request: MergeMaturityRequest\n): PbManageNeuron => {\n  const mergeMaturity = new PbManageNeuron.MergeMaturity();\n  mergeMaturity.setPercentageToMerge(request.percentageToMerge);\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setMergeMaturity(mergeMaturity);\n  return manageNeuron;\n};\n*/\n\n/* Protobuf is not supported yet\nexport const fromRemoveHotKeyRequest = (\n  request: RemoveHotKeyRequest\n): PbManageNeuron => {\n  const hotkeyPrincipal = new PbPrincipalId();\n  hotkeyPrincipal.setSerializedId(\n    Principal.fromText(request.principal).toUint8Array()\n  );\n\n  const command = new PbManageNeuron.RemoveHotKey();\n  command.setHotKeyToRemove(hotkeyPrincipal);\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setRemoveHotKey(command);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromStartDissolvingRequest = (\n  request: StartDissolvingRequest\n): PbManageNeuron => {\n  const configure = new PbManageNeuron.Configure();\n  configure.setStartDissolving(new PbManageNeuron.StartDissolving());\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromStopDissolvingRequest = (\n  request: StopDissolvingRequest\n): PbManageNeuron => {\n  const configure = new PbManageNeuron.Configure();\n  configure.setStopDissolving(new PbManageNeuron.StopDissolving());\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromIncreaseDissolveDelayRequest = (\n  request: IncreaseDissolveDelayRequest\n): PbManageNeuron => {\n  const command = new PbManageNeuron.IncreaseDissolveDelay();\n  command.setAdditionalDissolveDelaySeconds(\n    request.additionalDissolveDelaySeconds\n  );\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setIncreaseDissolveDelay(command);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromFollowRequest = (request: FollowRequest): PbManageNeuron => {\n  const follow = new PbManageNeuron.Follow();\n  follow.setTopic(request.topic);\n  follow.setFolloweesList(\n    request.followees.map((followee) => {\n      const neuronId = new PbNeuronId();\n      neuronId.setId(followee.toString());\n      return neuronId;\n    })\n  );\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setFollow(follow);\n  return manageNeuron;\n};\n\nexport const fromRegisterVoteRequest = (\n  request: RegisterVoteRequest\n): PbManageNeuron => {\n  const registerVote = new PbManageNeuron.RegisterVote();\n  registerVote.setVote(request.vote);\n  const proposal = new PbProposalId();\n  proposal.setId(request.proposal.toString());\n  registerVote.setProposal(proposal);\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setRegisterVote(registerVote);\n  return manageNeuron;\n};\n\nexport const fromSpawnRequest = (request: SpawnRequest): PbManageNeuron => {\n  const spawn = new PbManageNeuron.Spawn();\n\n  if (request.newController) {\n    const newController = new PbPrincipalId();\n    newController.setSerializedId(\n      Principal.fromText(request.newController).toUint8Array().slice(4)\n    );\n    spawn.setNewController(newController);\n  }\n\n  const manageNeuron = new PbManageNeuron();\n  manageNeuron.setSpawn(spawn);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  return manageNeuron;\n};\n*/\n\nexport const toSplitRawRequest = ({\n  neuronId,\n  amount,\n}: {\n  neuronId: NeuronId;\n  amount: E8s;\n}): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    Split: {\n      amount_e8s: amount,\n    },\n  };\n\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [{ NeuronId: { id: neuronId } }],\n  };\n};\n\n/* Protobuf is not supported yet\nexport const fromDisburseRequest = (request: DisburseRequest): PbManageNeuron => {\n  const disburse = new PbManageNeuron.Disburse();\n\n  if (request.toAccountId) {\n    const toAccountIdentifier = new PbAccountIdentifier();\n    toAccountIdentifier.setHash(\n      Uint8Array.from(Buffer.from(request.toAccountId, \"hex\"))\n    );\n    disburse.setToAccount(toAccountIdentifier);\n  }\n\n  if (request.amount != null) {\n    const amount = new PbManageNeuron.Disburse.Amount();\n    amount.setE8s(request.amount.toString());\n    disburse.setAmount(amount);\n  }\n\n  const manageNeuron = new PbManageNeuron();\n  manageNeuron.setDisburse(disburse);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  return manageNeuron;\n};\n*/\n\nexport const fromDisburseToNeuronRequest = (\n  request: DisburseToNeuronRequest\n): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    DisburseToNeuron: {\n      dissolve_delay_seconds: request.dissolveDelaySeconds,\n      kyc_verified: request.kycVerified,\n      amount_e8s: request.amount,\n      new_controller:\n        request.newController != null\n          ? [Principal.fromText(request.newController)]\n          : [],\n      nonce: request.nonce,\n    },\n  };\n\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [{ NeuronId: { id: request.neuronId } }],\n  };\n};\n\nexport const fromMakeProposalRequest = (\n  request: MakeProposalRequest\n): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    MakeProposal: {\n      url: request.url,\n      title: request.title != null ? [request.title] : [],\n      summary: request.summary,\n      action: [fromAction(request.action)],\n    },\n  };\n\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [{ NeuronId: { id: request.neuronId } }],\n  };\n};\n\nexport const toRegisterVoteRequest = ({\n  neuronId,\n  vote,\n  proposalId,\n}: {\n  neuronId: NeuronId;\n  vote: Vote;\n  proposalId: ProposalId;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      RegisterVote: {\n        vote,\n        proposal: [{ id: proposalId }],\n      },\n    },\n  });\n\nexport const toMakeProposalRawRequest = (\n  request: MakeProposalRequest\n): RawManageNeuron => {\n  const rawCommand: RawCommand = {\n    MakeProposal: {\n      url: request.url,\n      title: request.title != null ? [request.title] : [],\n      summary: request.summary,\n      action: [fromAction(request.action)],\n    },\n  };\n  return {\n    id: [],\n    command: [rawCommand],\n    neuron_id_or_subaccount: [{ NeuronId: { id: request.neuronId } }],\n  };\n};\n\nexport const toManageNeuronsFollowRequest = ({\n  neuronId,\n  topic,\n  followees,\n}: FollowRequest): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      Follow: {\n        topic,\n        followees: followees.map((followeeId) => ({ id: followeeId })),\n      },\n    },\n  });\n\nexport const toDisburseNeuronRequest = ({\n  neuronId,\n  toAccountIdentifier,\n  amount,\n}: {\n  neuronId: NeuronId;\n  toAccountIdentifier?: AccountIdentifierClass;\n  amount?: E8s;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      Disburse: {\n        to_account:\n          toAccountIdentifier !== undefined\n            ? [toAccountIdentifier.toAccountIdentifierHash()]\n            : [],\n        amount: amount !== undefined ? [fromAmount(amount)] : [],\n      },\n    },\n  });\n\nexport const toMergeMaturityRequest = ({\n  neuronId,\n  percentageToMerge,\n}: {\n  neuronId: NeuronId;\n  percentageToMerge: number;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      MergeMaturity: {\n        percentage_to_merge: percentageToMerge,\n      },\n    },\n  });\n\nexport const toSpawnNeuronRequest = ({\n  neuronId,\n  percentageToSpawn,\n  newController,\n  nonce,\n}: {\n  neuronId: NeuronId;\n  percentageToSpawn?: number;\n  newController?: Principal;\n  nonce?: bigint;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      Spawn: {\n        percentage_to_spawn:\n          percentageToSpawn === undefined ? [] : [percentageToSpawn],\n        new_controller: newController === undefined ? [] : [newController],\n        nonce: nonce === undefined ? [] : [nonce],\n      },\n    },\n  });\n\nexport const toAddHotkeyRequest = ({\n  neuronId,\n  principal,\n}: {\n  neuronId: NeuronId;\n  principal: Principal;\n}): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      AddHotKey: {\n        new_hot_key: [principal],\n      },\n    },\n  });\n\nexport const toRemoveHotkeyRequest = ({\n  neuronId,\n  principal,\n}: {\n  neuronId: NeuronId;\n  principal: Principal;\n}): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      RemoveHotKey: {\n        hot_key_to_remove: [principal],\n      },\n    },\n  });\n\nexport const toIncreaseDissolveDelayRequest = ({\n  neuronId,\n  additionalDissolveDelaySeconds,\n}: {\n  neuronId: NeuronId;\n  additionalDissolveDelaySeconds: number;\n}): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      IncreaseDissolveDelay: {\n        additional_dissolve_delay_seconds: additionalDissolveDelaySeconds,\n      },\n    },\n  });\n\nexport const toSetDissolveDelayRequest = ({\n  neuronId,\n  dissolveDelaySeconds,\n}: {\n  neuronId: NeuronId;\n  dissolveDelaySeconds: number;\n}): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      SetDissolveTimestamp: {\n        dissolve_timestamp_seconds: BigInt(dissolveDelaySeconds),\n      },\n    },\n  });\n\nexport const toJoinCommunityFundRequest = (\n  neuronId: NeuronId\n): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      JoinCommunityFund: {},\n    },\n  });\n\nexport const toLeaveCommunityFundRequest = (\n  neuronId: NeuronId\n): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      LeaveCommunityFund: {},\n    },\n  });\n\nexport const toMergeRequest = ({\n  sourceNeuronId,\n  targetNeuronId,\n}: {\n  sourceNeuronId: NeuronId;\n  targetNeuronId: NeuronId;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId: targetNeuronId,\n    command: {\n      Merge: { source_neuron_id: [{ id: sourceNeuronId }] },\n    },\n  });\n\nexport const toStartDissolvingRequest = (neuronId: NeuronId): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      StartDissolving: {},\n    },\n  });\n\nexport const toStopDissolvingRequest = (neuronId: NeuronId): RawManageNeuron =>\n  toConfigureOperation({\n    neuronId,\n    operation: {\n      StopDissolving: {},\n    },\n  });\n\nexport const toCommand = ({\n  neuronId,\n  command,\n}: {\n  neuronId: NeuronId;\n  command: RawCommand;\n}): RawManageNeuron => ({\n  id: [{ id: neuronId }],\n  command: [command],\n  neuron_id_or_subaccount: [],\n});\n\nexport const toConfigureOperation = ({\n  neuronId,\n  operation,\n}: {\n  neuronId: NeuronId;\n  operation: RawOperation;\n}): RawManageNeuron =>\n  toCommand({\n    neuronId,\n    command: {\n      Configure: {\n        operation: [operation],\n      },\n    },\n  });\n", "import type { GovernanceError as GovernanceErrorDetail } from \"../../candid/governance\";\n\nexport abstract class StakeNeuronError extends Error {}\n\nexport class CouldNotClaimNeuronError extends StakeNeuronError {}\n\nexport class InsufficientAmountError extends StakeNeuronError {\n  constructor(public readonly minimumAmount: bigint) {\n    super();\n  }\n}\n\nexport class UnrecognizedTypeError extends Error {}\nexport class GovernanceError extends Error {\n  constructor(public readonly detail: GovernanceErrorDetail) {\n    super();\n  }\n}\n\nexport class InvalidPercentageError extends Error {}\nexport class InvalidAccountIDError extends Error {}\n\n/**\n * An error used to ensure at compile-time that it's never reached.\n */\nexport class UnsupportedValueError extends Error {\n  constructor(value: never) {\n    super(\"Unsupported value: \" + value);\n  }\n}\n\nexport class FeatureNotSupportedError extends Error {}\n", "import type { Principal } from \"@dfinity/principal\";\nimport { asciiStringToByteArray } from \"@dfinity/utils\";\nimport { Buffer } from \"buffer\";\nimport { sha224 } from \"js-sha256\";\nimport type { AccountIdentifier } from \"../types/common\";\nimport { calculateCrc32, toHexString } from \"./converter.utils\";\n\nexport const accountIdentifierToBytes = (\n  accountIdentifier: AccountIdentifier\n): Uint8Array =>\n  Uint8Array.from(Buffer.from(accountIdentifier, \"hex\")).subarray(4);\n\nexport const accountIdentifierFromBytes = (\n  accountIdentifier: Uint8Array\n): AccountIdentifier => Buffer.from(accountIdentifier).toString(\"hex\");\n\nexport const principalToAccountIdentifier = (\n  principal: Principal,\n  subAccount?: Uint8Array\n): string => {\n  // Hash (sha224) the principal, the subAccount and some padding\n  const padding = asciiStringToByteArray(\"\\x0Aaccount-id\");\n\n  const shaObj = sha224.create();\n  shaObj.update([\n    ...padding,\n    ...principal.toUint8Array(),\n    ...(subAccount ?? Array(32).fill(0)),\n  ]);\n  const hash = new Uint8Array(shaObj.array());\n\n  // Prepend the checksum of the hash and convert to a hex string\n  const checksum = calculateCrc32(hash);\n  const bytes = new Uint8Array([...checksum, ...hash]);\n  return toHexString(bytes);\n};\n", "import { Principal } from \"@dfinity/principal\";\nimport {\n  NeuronId as PbNeuronId,\n  PrincipalId as PbPrincipalId,\n} from \"../../../proto/base_types_pb\";\nimport { ManageNeuron as PbManageNeuron } from \"../../../proto/governance_pb\";\nimport { AccountIdentifier as PbAccountIdentifier } from \"../../../proto/ledger_pb\";\nimport type { NeuronId } from \"../../types/common\";\nimport type {\n  AddHotKeyRequest,\n  DisburseRequest,\n  FollowRequest,\n  MergeMaturityRequest,\n  MergeRequest,\n  RemoveHotKeyRequest,\n  SpawnRequest,\n} from \"../../types/governance_converters\";\n\n// Original `ts` implementation:\n// nns-dapp/frontend/ts/src/canisters/governance/RequestConverters.ts /\n// https://github.com/dfinity/nns-dapp/blob/main/frontend/ts/src/canisters/governance/RequestConverters.ts\n\nexport const fromAddHotKeyRequest = (\n  request: AddHotKeyRequest\n): PbManageNeuron => {\n  const hotkeyPrincipal = new PbPrincipalId();\n  hotkeyPrincipal.setSerializedId(\n    Principal.fromText(request.principal).toUint8Array()\n  );\n\n  const hotkey = new PbManageNeuron.AddHotKey();\n  hotkey.setNewHotKey(hotkeyPrincipal);\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setAddHotKey(hotkey);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromRemoveHotKeyRequest = (\n  request: RemoveHotKeyRequest\n): PbManageNeuron => {\n  const hotkeyPrincipal = new PbPrincipalId();\n  hotkeyPrincipal.setSerializedId(\n    Principal.fromText(request.principal).toUint8Array()\n  );\n\n  const command = new PbManageNeuron.RemoveHotKey();\n  command.setHotKeyToRemove(hotkeyPrincipal);\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setRemoveHotKey(command);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  result.setNeuronId(neuronId);\n\n  return result;\n};\n\nexport const fromIncreaseDissolveDelayRequest = ({\n  neuronId,\n  additionalDissolveDelaySeconds,\n}: {\n  neuronId: NeuronId;\n  additionalDissolveDelaySeconds: number;\n}): PbManageNeuron => {\n  const command = new PbManageNeuron.IncreaseDissolveDelay();\n  command.setAdditionalDissolveDelaySeconds(additionalDissolveDelaySeconds);\n\n  const configure = new PbManageNeuron.Configure();\n  configure.setIncreaseDissolveDelay(command);\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const pbNeuronId = new PbNeuronId();\n  pbNeuronId.setId(neuronId.toString());\n  result.setNeuronId(pbNeuronId);\n\n  return result;\n};\n\nexport const fromStartDissolvingRequest = (\n  neuronId: NeuronId\n): PbManageNeuron => {\n  const configure = new PbManageNeuron.Configure();\n  configure.setStartDissolving(new PbManageNeuron.StartDissolving());\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const pbNeuronId = new PbNeuronId();\n  pbNeuronId.setId(neuronId.toString());\n  result.setNeuronId(pbNeuronId);\n\n  return result;\n};\n\nexport const fromStopDissolvingRequest = (\n  neuronId: NeuronId\n): PbManageNeuron => {\n  const configure = new PbManageNeuron.Configure();\n  configure.setStopDissolving(new PbManageNeuron.StopDissolving());\n\n  const result = new PbManageNeuron();\n  result.setConfigure(configure);\n\n  const pbNeuronId = new PbNeuronId();\n  pbNeuronId.setId(neuronId.toString());\n  result.setNeuronId(pbNeuronId);\n\n  return result;\n};\n\nexport const fromDisburseRequest = (\n  request: DisburseRequest\n): PbManageNeuron => {\n  const disburse = new PbManageNeuron.Disburse();\n\n  if (request.toAccountId) {\n    const toAccountIdentifier = new PbAccountIdentifier();\n    toAccountIdentifier.setHash(\n      Uint8Array.from(Buffer.from(request.toAccountId, \"hex\"))\n    );\n    disburse.setToAccount(toAccountIdentifier);\n  }\n\n  if (request.amount != null) {\n    const amount = new PbManageNeuron.Disburse.Amount();\n    amount.setE8s(request.amount.toString());\n    disburse.setAmount(amount);\n  }\n\n  const manageNeuron = new PbManageNeuron();\n  manageNeuron.setDisburse(disburse);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  return manageNeuron;\n};\n\nexport const fromMergeMaturityRequest = (\n  request: MergeMaturityRequest\n): PbManageNeuron => {\n  const mergeMaturity = new PbManageNeuron.MergeMaturity();\n  mergeMaturity.setPercentageToMerge(request.percentageToMerge);\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setMergeMaturity(mergeMaturity);\n  return manageNeuron;\n};\n\nexport const fromSpawnRequest = (request: SpawnRequest): PbManageNeuron => {\n  const spawn = new PbManageNeuron.Spawn();\n\n  if (request.newController) {\n    const newController = new PbPrincipalId();\n    newController.setSerializedId(\n      Principal.fromText(request.newController).toUint8Array().slice(4)\n    );\n    spawn.setNewController(newController);\n  }\n\n  if (request.percentageToSpawn !== undefined) {\n    spawn.setPercentageToSpawn(request.percentageToSpawn);\n  }\n\n  const manageNeuron = new PbManageNeuron();\n  manageNeuron.setSpawn(spawn);\n\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  return manageNeuron;\n};\n\nexport const fromMergeRequest = (request: MergeRequest): PbManageNeuron => {\n  const merge = new PbManageNeuron.Merge();\n  const sourceNeuronId = new PbNeuronId();\n  sourceNeuronId.setId(request.sourceNeuronId.toString());\n  merge.setSourceNeuronId(sourceNeuronId);\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.targetNeuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setMerge(merge);\n  return manageNeuron;\n};\n\nexport const fromFollowRequest = (request: FollowRequest): PbManageNeuron => {\n  const follow = new PbManageNeuron.Follow();\n  follow.setTopic(request.topic);\n  follow.setFolloweesList(\n    request.followees.map((followee) => {\n      const neuronId = new PbNeuronId();\n      neuronId.setId(followee.toString());\n      return neuronId;\n    })\n  );\n  const manageNeuron = new PbManageNeuron();\n  const neuronId = new PbNeuronId();\n  neuronId.setId(request.neuronId.toString());\n  manageNeuron.setNeuronId(neuronId);\n  manageNeuron.setFollow(follow);\n  return manageNeuron;\n};\n", "import { Principal } from \"@dfinity/principal\";\nimport { fromNullable, uint8ArrayToArrayOfNumber } from \"@dfinity/utils\";\nimport type { Map } from \"google-protobuf\";\nimport type {\n  AccountIdentifier as RawAccountIdentifier,\n  Action as RawAction,\n  Amount as RawAmount,\n  Ballot as RawBallot,\n  BallotInfo as RawBallotInfo,\n  By as RawBy,\n  Change as RawChange,\n  Command as RawCommand,\n  DissolveState as RawDissolveState,\n  Followees as RawFollowees,\n  KnownNeuron as RawKnownNeuron,\n  ListNeuronsResponse as RawListNeuronsResponse,\n  ListProposalInfoResponse as RawListProposalInfoResponse,\n  Neuron as RawNeuron,\n  NeuronId as RawNeuronId,\n  NeuronIdOrSubaccount as RawNeuronIdOrSubaccount,\n  NeuronInfo as RawNeuronInfo,\n  NodeProvider as RawNodeProvider,\n  Operation as RawOperation,\n  Params,\n  Proposal as RawProposal,\n  ProposalInfo as RawProposalInfo,\n  RewardMode as RawRewardMode,\n  Tally as RawTally,\n} from \"../../../candid/governance\";\nimport type { PrincipalId } from \"../../../proto/base_types_pb\";\nimport type {\n  BallotInfo as PbBallotInfo,\n  ListNeuronsResponse,\n  Neuron as PbNeuron,\n  NeuronInfo as PbNeuronInfo,\n} from \"../../../proto/governance_pb\";\nimport { AccountIdentifier, SubAccount } from \"../../account_identifier\";\nimport { NeuronState } from \"../../enums/governance.enums\";\nimport { UnsupportedValueError } from \"../../errors/governance.errors\";\nimport type {\n  AccountIdentifier as AccountIdentifierString,\n  E8s,\n  NeuronId,\n} from \"../../types/common\";\nimport type {\n  Action,\n  Ballot,\n  BallotInfo,\n  By,\n  Change,\n  Command,\n  DissolveState,\n  Followees,\n  KnownNeuron,\n  ListProposalsResponse,\n  Neuron,\n  NeuronIdOrSubaccount,\n  NeuronInfo,\n  NodeProvider,\n  Operation,\n  Proposal,\n  ProposalInfo,\n  RewardMode,\n  Tally,\n} from \"../../types/governance_converters\";\nimport {\n  accountIdentifierFromBytes,\n  principalToAccountIdentifier,\n} from \"../../utils/account_identifier.utils\";\n\nconst toNeuronInfo = ({\n  neuronId,\n  neuronInfo,\n  rawNeuron,\n  canisterId,\n}: {\n  neuronId: bigint;\n  neuronInfo: RawNeuronInfo;\n  rawNeuron?: RawNeuron;\n  canisterId: Principal;\n}): NeuronInfo => {\n  const fullNeuron = rawNeuron\n    ? toNeuron({ neuron: rawNeuron, canisterId })\n    : undefined;\n  return {\n    neuronId: neuronId,\n    dissolveDelaySeconds: neuronInfo.dissolve_delay_seconds,\n    recentBallots: neuronInfo.recent_ballots.map(toBallotInfo),\n    createdTimestampSeconds: neuronInfo.created_timestamp_seconds,\n    state: neuronInfo.state,\n    joinedCommunityFundTimestampSeconds: neuronInfo\n      .joined_community_fund_timestamp_seconds.length\n      ? neuronInfo.joined_community_fund_timestamp_seconds[0]\n      : undefined,\n    retrievedAtTimestampSeconds: neuronInfo.retrieved_at_timestamp_seconds,\n    votingPower: neuronInfo.voting_power,\n    ageSeconds: neuronInfo.age_seconds,\n    fullNeuron: fullNeuron,\n  };\n};\n\nconst toNeuron = ({\n  neuron,\n  canisterId,\n}: {\n  neuron: RawNeuron;\n  canisterId: Principal;\n}): Neuron => ({\n  id: neuron.id.length ? toNeuronId(neuron.id[0]) : undefined,\n  stakedMaturityE8sEquivalent: fromNullable(\n    neuron.staked_maturity_e8s_equivalent\n  ),\n  controller: neuron.controller.length\n    ? neuron.controller[0].toString()\n    : undefined,\n  recentBallots: neuron.recent_ballots.map(toBallotInfo),\n  kycVerified: neuron.kyc_verified,\n  notForProfit: neuron.not_for_profit,\n  cachedNeuronStake: neuron.cached_neuron_stake_e8s,\n  createdTimestampSeconds: neuron.created_timestamp_seconds,\n  autoStakeMaturity: fromNullable(neuron.auto_stake_maturity),\n  maturityE8sEquivalent: neuron.maturity_e8s_equivalent,\n  agingSinceTimestampSeconds: neuron.aging_since_timestamp_seconds,\n  neuronFees: neuron.neuron_fees_e8s,\n  hotKeys: neuron.hot_keys.map((p) => p.toString()),\n  accountIdentifier: principalToAccountIdentifier(canisterId, neuron.account),\n  joinedCommunityFundTimestampSeconds: neuron\n    .joined_community_fund_timestamp_seconds.length\n    ? neuron.joined_community_fund_timestamp_seconds[0]\n    : undefined,\n  dissolveState: neuron.dissolve_state.length\n    ? toDissolveState(neuron.dissolve_state[0])\n    : undefined,\n  spawnAtTimesSeconds: neuron.spawn_at_timestamp_seconds[0],\n  followees: neuron.followees.map(([topic, followees]) =>\n    toFollowees({ topic, followees })\n  ),\n});\n\nconst toBallotInfo = ({ vote, proposal_id }: RawBallotInfo): BallotInfo => ({\n  vote,\n  proposalId: proposal_id.length ? toNeuronId(proposal_id[0]) : undefined,\n});\n\nconst toDissolveState = (dissolveState: RawDissolveState): DissolveState => {\n  if (\"DissolveDelaySeconds\" in dissolveState) {\n    return {\n      DissolveDelaySeconds: dissolveState.DissolveDelaySeconds,\n    };\n  } else {\n    return {\n      WhenDissolvedTimestampSeconds:\n        dissolveState.WhenDissolvedTimestampSeconds,\n    };\n  }\n};\n\nconst toFollowees = ({\n  topic,\n  followees,\n}: {\n  topic: number;\n  followees: RawFollowees;\n}): Followees => ({\n  topic,\n  followees: followees.followees.map(toNeuronId),\n});\n\nconst toNeuronId = ({ id }: RawNeuronId): NeuronId => id;\n\nconst toNeuronIdOrSubaccount = (\n  neuronIdOrSubaccount: RawNeuronIdOrSubaccount\n): NeuronIdOrSubaccount => {\n  if (\"NeuronId\" in neuronIdOrSubaccount) {\n    return { NeuronId: neuronIdOrSubaccount.NeuronId.id };\n  }\n  if (\"Subaccount\" in neuronIdOrSubaccount) {\n    return {\n      Subaccount: uint8ArrayToArrayOfNumber(neuronIdOrSubaccount.Subaccount),\n    };\n  }\n  throw new UnsupportedValueError(neuronIdOrSubaccount);\n};\n\nconst toBallot = ({\n  neuronId,\n  ballot,\n}: {\n  neuronId: bigint;\n  ballot: RawBallot;\n}): Ballot => {\n  const { vote, voting_power: votingPower } = ballot;\n\n  return {\n    neuronId,\n    vote,\n    votingPower,\n  };\n};\n\nconst toProposal = ({\n  title,\n  url,\n  action,\n  summary,\n}: RawProposal): Proposal => ({\n  title: title.length ? title[0] : undefined,\n  url,\n  action: action.length ? toAction(action[0]) : undefined,\n  summary,\n});\n\nconst toAction = (action: RawAction): Action => {\n  if (\"ExecuteNnsFunction\" in action) {\n    const executeNnsFunction = action.ExecuteNnsFunction;\n\n    return {\n      ExecuteNnsFunction: {\n        nnsFunctionId: executeNnsFunction.nns_function,\n      },\n    };\n  }\n  if (\"ManageNeuron\" in action) {\n    const manageNeuron = action.ManageNeuron;\n    return {\n      ManageNeuron: {\n        id: manageNeuron.id.length ? toNeuronId(manageNeuron.id[0]) : undefined,\n        command: manageNeuron.command.length\n          ? toCommand(manageNeuron.command[0])\n          : undefined,\n        neuronIdOrSubaccount: manageNeuron.neuron_id_or_subaccount.length\n          ? toNeuronIdOrSubaccount(manageNeuron.neuron_id_or_subaccount[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"ApproveGenesisKyc\" in action) {\n    const approveKyc = action.ApproveGenesisKyc;\n    return {\n      ApproveGenesisKyc: {\n        principals: approveKyc.principals.map((p) => p.toString()),\n      },\n    };\n  }\n  if (\"ManageNetworkEconomics\" in action) {\n    const networkEconomics = action.ManageNetworkEconomics;\n    return {\n      ManageNetworkEconomics: {\n        neuronMinimumStake: networkEconomics.neuron_minimum_stake_e8s,\n        maxProposalsToKeepPerTopic:\n          networkEconomics.max_proposals_to_keep_per_topic,\n        neuronManagementFeePerProposal:\n          networkEconomics.neuron_management_fee_per_proposal_e8s,\n        rejectCost: networkEconomics.reject_cost_e8s,\n        transactionFee: networkEconomics.transaction_fee_e8s,\n        neuronSpawnDissolveDelaySeconds:\n          networkEconomics.neuron_spawn_dissolve_delay_seconds,\n        minimumIcpXdrRate: networkEconomics.minimum_icp_xdr_rate,\n        maximumNodeProviderRewards:\n          networkEconomics.maximum_node_provider_rewards_e8s,\n      },\n    };\n  }\n  if (\"RewardNodeProvider\" in action) {\n    const rewardNodeProvider = action.RewardNodeProvider;\n    return {\n      RewardNodeProvider: {\n        nodeProvider: rewardNodeProvider.node_provider.length\n          ? toNodeProvider(rewardNodeProvider.node_provider[0])\n          : undefined,\n        amountE8s: rewardNodeProvider.amount_e8s,\n        rewardMode: rewardNodeProvider.reward_mode.length\n          ? toRewardMode(rewardNodeProvider.reward_mode[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"RewardNodeProviders\" in action) {\n    const rewardNodeProviders = action.RewardNodeProviders;\n    return {\n      RewardNodeProviders: {\n        useRegistryDerivedRewards: rewardNodeProviders\n          .use_registry_derived_rewards.length\n          ? rewardNodeProviders.use_registry_derived_rewards[0]\n          : undefined,\n        rewards: rewardNodeProviders.rewards.map((r) => ({\n          nodeProvider: r.node_provider.length\n            ? toNodeProvider(r.node_provider[0])\n            : undefined,\n          amountE8s: r.amount_e8s,\n          rewardMode: r.reward_mode.length\n            ? toRewardMode(r.reward_mode[0])\n            : undefined,\n        })),\n      },\n    };\n  }\n  if (\"AddOrRemoveNodeProvider\" in action) {\n    const addOrRemoveNodeProvider = action.AddOrRemoveNodeProvider;\n    return {\n      AddOrRemoveNodeProvider: {\n        change: addOrRemoveNodeProvider.change.length\n          ? toChange(addOrRemoveNodeProvider.change[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"Motion\" in action) {\n    const motion = action.Motion;\n    return {\n      Motion: {\n        motionText: motion.motion_text,\n      },\n    };\n  }\n  if (\"SetDefaultFollowees\" in action) {\n    const setDefaultFollowees = action.SetDefaultFollowees;\n    return {\n      SetDefaultFollowees: {\n        defaultFollowees: setDefaultFollowees.default_followees.map(\n          ([topic, followees]) => toFollowees({ topic, followees })\n        ),\n      },\n    };\n  }\n  if (\"RegisterKnownNeuron\" in action) {\n    const knownNeuron = action.RegisterKnownNeuron;\n    return {\n      RegisterKnownNeuron: toKnownNeuron(knownNeuron),\n    };\n  }\n\n  if (\"SetSnsTokenSwapOpenTimeWindow\" in action) {\n    const SetSnsTokenSwapOpenTimeWindow = action.SetSnsTokenSwapOpenTimeWindow;\n    const request = SetSnsTokenSwapOpenTimeWindow.request?.length\n      ? {\n          openTimeWindow: SetSnsTokenSwapOpenTimeWindow.request[0]\n            .open_time_window.length\n            ? {\n                startTimestampSeconds:\n                  SetSnsTokenSwapOpenTimeWindow.request[0].open_time_window[0]\n                    .start_timestamp_seconds,\n                endTimestampSeconds:\n                  SetSnsTokenSwapOpenTimeWindow.request[0].open_time_window[0]\n                    .end_timestamp_seconds,\n              }\n            : undefined,\n        }\n      : undefined;\n\n    const swapCanisterId = SetSnsTokenSwapOpenTimeWindow?.swap_canister_id\n      .length\n      ? SetSnsTokenSwapOpenTimeWindow.swap_canister_id[0].toString()\n      : undefined;\n\n    return {\n      SetSnsTokenSwapOpenTimeWindow: {\n        request,\n        swapCanisterId,\n      },\n    };\n  }\n\n  if (\"OpenSnsTokenSwap\" in action) {\n    const OpenSnsTokenSwap = action.OpenSnsTokenSwap;\n    const params: Params | undefined = fromNullable(OpenSnsTokenSwap.params);\n\n    return {\n      OpenSnsTokenSwap: {\n        communityFundInvestmentE8s: fromNullable(\n          OpenSnsTokenSwap.community_fund_investment_e8s\n        ),\n        targetSwapCanisterId: fromNullable(\n          OpenSnsTokenSwap.target_swap_canister_id\n        ),\n        ...(params !== undefined && {\n          params: {\n            minParticipantIcpE8s: params.min_participant_icp_e8s,\n            maxIcpE8s: params.max_icp_e8s,\n            swapDueTimestampSeconds: params.swap_due_timestamp_seconds,\n            minParticipants: params.min_participants,\n            snsTokenE8s: params.sns_token_e8s,\n            maxParticipantIcpE8s: params.max_participant_icp_e8s,\n            minIcpE8s: params.min_icp_e8s,\n          },\n        }),\n      },\n    };\n  }\n\n  throw new UnsupportedValueError(action);\n};\n\nconst toTally = (tally: RawTally): Tally => {\n  return {\n    no: tally.no,\n    yes: tally.yes,\n    total: tally.total,\n    timestampSeconds: tally.timestamp_seconds,\n  };\n};\n\nconst toCommand = (command: RawCommand): Command => {\n  if (\"Spawn\" in command) {\n    const spawn = command.Spawn;\n    return {\n      Spawn: {\n        newController: spawn.new_controller.length\n          ? spawn.new_controller[0].toString()\n          : undefined,\n        percentageToSpawn: spawn.percentage_to_spawn.length\n          ? spawn.percentage_to_spawn[0]\n          : 0,\n      },\n    };\n  }\n  if (\"Split\" in command) {\n    const split = command.Split;\n    return {\n      Split: {\n        amount: split.amount_e8s,\n      },\n    };\n  }\n  if (\"Follow\" in command) {\n    const follow = command.Follow;\n    return {\n      Follow: {\n        topic: follow.topic,\n        followees: follow.followees.map(toNeuronId),\n      },\n    };\n  }\n  if (\"ClaimOrRefresh\" in command) {\n    const claimOrRefresh = command.ClaimOrRefresh;\n    return {\n      ClaimOrRefresh: {\n        by: claimOrRefresh.by.length\n          ? toClaimOrRefreshBy(claimOrRefresh.by[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"Configure\" in command) {\n    const configure = command.Configure;\n    return {\n      Configure: {\n        operation: configure.operation.length\n          ? toOperation(configure.operation[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"RegisterVote\" in command) {\n    const registerVote = command.RegisterVote;\n    return {\n      RegisterVote: {\n        vote: registerVote.vote,\n        proposal: registerVote.proposal.length\n          ? toNeuronId(registerVote.proposal[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"DisburseToNeuron\" in command) {\n    const disburseToNeuron = command.DisburseToNeuron;\n    return {\n      DisburseToNeuron: {\n        dissolveDelaySeconds: disburseToNeuron.dissolve_delay_seconds,\n        kycVerified: disburseToNeuron.kyc_verified,\n        amount: disburseToNeuron.amount_e8s,\n        newController: disburseToNeuron.new_controller.length\n          ? disburseToNeuron.new_controller[0].toString()\n          : undefined,\n        nonce: disburseToNeuron.nonce,\n      },\n    };\n  }\n  if (\"MergeMaturity\" in command) {\n    const mergeMaturity = command.MergeMaturity;\n    return {\n      MergeMaturity: {\n        percentageToMerge: mergeMaturity.percentage_to_merge,\n      },\n    };\n  }\n  if (\"StakeMaturity\" in command) {\n    const { percentage_to_stake } = command.StakeMaturity;\n    return {\n      StakeMaturity: {\n        percentageToStake: fromNullable(percentage_to_stake),\n      },\n    };\n  }\n  if (\"MakeProposal\" in command) {\n    const makeProposal = command.MakeProposal;\n    return {\n      MakeProposal: {\n        title: makeProposal.title.length ? makeProposal.title[0] : undefined,\n        url: makeProposal.url,\n        action: makeProposal.action.length\n          ? toAction(makeProposal.action[0])\n          : undefined,\n        summary: makeProposal.summary,\n      },\n    };\n  }\n  if (\"Disburse\" in command) {\n    const disburse = command.Disburse;\n    return {\n      Disburse: {\n        toAccountId: disburse.to_account.length\n          ? toAccountIdentifier(disburse.to_account[0])\n          : undefined,\n        amount: disburse.amount.length\n          ? toAmount(disburse.amount[0])\n          : undefined,\n      },\n    };\n  }\n  if (\"Merge\" in command) {\n    const merge = command.Merge;\n    return {\n      Merge: {\n        sourceNeuronId: merge.source_neuron_id.length\n          ? merge.source_neuron_id[0].id\n          : undefined,\n      },\n    };\n  }\n\n  throw new UnsupportedValueError(command);\n};\n\nconst toOperation = (operation: RawOperation): Operation => {\n  if (\"RemoveHotKey\" in operation) {\n    const removeHotKey = operation.RemoveHotKey;\n    return {\n      RemoveHotKey: {\n        hotKeyToRemove: removeHotKey.hot_key_to_remove.length\n          ? removeHotKey.hot_key_to_remove[0].toString()\n          : undefined,\n      },\n    };\n  }\n  if (\"AddHotKey\" in operation) {\n    const addHotKey = operation.AddHotKey;\n    return {\n      AddHotKey: {\n        newHotKey: addHotKey.new_hot_key.length\n          ? addHotKey.new_hot_key[0].toString()\n          : undefined,\n      },\n    };\n  }\n  if (\"StopDissolving\" in operation) {\n    return {\n      StopDissolving: {},\n    };\n  }\n  if (\"StartDissolving\" in operation) {\n    return {\n      StartDissolving: {},\n    };\n  }\n  if (\"IncreaseDissolveDelay\" in operation) {\n    const increaseDissolveDelay = operation.IncreaseDissolveDelay;\n    return {\n      IncreaseDissolveDelay: {\n        additionalDissolveDelaySeconds:\n          increaseDissolveDelay.additional_dissolve_delay_seconds,\n      },\n    };\n  }\n  if (\"JoinCommunityFund\" in operation) {\n    return operation;\n  }\n  if (\"LeaveCommunityFund\" in operation) {\n    return operation;\n  }\n  if (\"SetDissolveTimestamp\" in operation) {\n    const setDissolveTimestamp = operation.SetDissolveTimestamp;\n    return {\n      SetDissolveTimestamp: {\n        dissolveTimestampSeconds:\n          setDissolveTimestamp.dissolve_timestamp_seconds,\n      },\n    };\n  }\n  if (\"ChangeAutoStakeMaturity\" in operation) {\n    const {\n      requested_setting_for_auto_stake_maturity:\n        requestedSettingForAutoStakeMaturity,\n    } = operation.ChangeAutoStakeMaturity;\n    return {\n      ChangeAutoStakeMaturity: {\n        requestedSettingForAutoStakeMaturity,\n      },\n    };\n  }\n  throw new UnsupportedValueError(operation);\n};\n\nconst toChange = (change: RawChange): Change => {\n  if (\"ToRemove\" in change) {\n    return {\n      ToRemove: toNodeProvider(change.ToRemove),\n    };\n  }\n  if (\"ToAdd\" in change) {\n    return {\n      ToAdd: toNodeProvider(change.ToAdd),\n    };\n  }\n  throw new UnsupportedValueError(change);\n};\n\nconst toNodeProvider = (nodeProvider: RawNodeProvider): NodeProvider => {\n  return {\n    id: nodeProvider.id.length ? nodeProvider.id[0].toString() : undefined,\n    rewardAccount: nodeProvider.reward_account.length\n      ? toAccountIdentifier(nodeProvider.reward_account[0])\n      : undefined,\n  };\n};\n\nconst toAmount = (amount: RawAmount): E8s => {\n  return amount.e8s;\n};\n\nconst toAccountIdentifier = (\n  accountIdentifier: RawAccountIdentifier\n): AccountIdentifierString =>\n  accountIdentifierFromBytes(new Uint8Array(accountIdentifier.hash));\n\nconst toRewardMode = (rewardMode: RawRewardMode): RewardMode => {\n  if (\"RewardToNeuron\" in rewardMode) {\n    return {\n      RewardToNeuron: {\n        dissolveDelaySeconds: rewardMode.RewardToNeuron.dissolve_delay_seconds,\n      },\n    };\n  } else if (\"RewardToAccount\" in rewardMode) {\n    return {\n      RewardToAccount: {\n        toAccount:\n          rewardMode.RewardToAccount.to_account != undefined &&\n          rewardMode.RewardToAccount.to_account.length\n            ? toAccountIdentifier(rewardMode.RewardToAccount.to_account[0])\n            : undefined,\n      },\n    };\n  } else {\n    // Ensures all cases are covered at compile-time.\n    throw new UnsupportedValueError(rewardMode);\n  }\n};\n\nconst toClaimOrRefreshBy = (by: RawBy): By => {\n  if (\"NeuronIdOrSubaccount\" in by) {\n    return {\n      NeuronIdOrSubaccount: {},\n    };\n  } else if (\"Memo\" in by) {\n    return {\n      Memo: by.Memo,\n    };\n  } else if (\"MemoAndController\" in by) {\n    return {\n      MemoAndController: {\n        memo: by.MemoAndController.memo,\n        controller: by.MemoAndController.controller.length\n          ? by.MemoAndController.controller[0]\n          : undefined,\n      },\n    };\n  } else {\n    // Ensures all cases are covered at compile-time.\n    throw new UnsupportedValueError(by);\n  }\n};\n\nexport const toProposalInfo = (\n  proposalInfo: RawProposalInfo\n): ProposalInfo => ({\n  id: proposalInfo.id.length ? toNeuronId(proposalInfo.id[0]) : undefined,\n  ballots: proposalInfo.ballots.map((b) =>\n    toBallot({ neuronId: b[0], ballot: b[1] })\n  ),\n  rejectCost: proposalInfo.reject_cost_e8s,\n  proposalTimestampSeconds: proposalInfo.proposal_timestamp_seconds,\n  rewardEventRound: proposalInfo.reward_event_round,\n  failedTimestampSeconds: proposalInfo.failed_timestamp_seconds,\n  deadlineTimestampSeconds: fromNullable(\n    proposalInfo.deadline_timestamp_seconds\n  ),\n  decidedTimestampSeconds: proposalInfo.decided_timestamp_seconds,\n  proposal: proposalInfo.proposal.length\n    ? toProposal(proposalInfo.proposal[0])\n    : undefined,\n  proposer: proposalInfo.proposer.length\n    ? toNeuronId(proposalInfo.proposer[0])\n    : undefined,\n  latestTally: proposalInfo.latest_tally.length\n    ? toTally(proposalInfo.latest_tally[0])\n    : undefined,\n  executedTimestampSeconds: proposalInfo.executed_timestamp_seconds,\n  topic: proposalInfo.topic,\n  status: proposalInfo.status,\n  rewardStatus: proposalInfo.reward_status,\n});\n\nexport const toArrayOfNeuronInfo = ({\n  response: { neuron_infos, full_neurons },\n  canisterId,\n}: {\n  response: RawListNeuronsResponse;\n  canisterId: Principal;\n}): Array<NeuronInfo> =>\n  neuron_infos.map(([id, neuronInfo]) =>\n    toNeuronInfo({\n      neuronId: id,\n      neuronInfo,\n      rawNeuron: full_neurons.find(\n        (neuron) => neuron.id.length && neuron.id[0].id === id\n      ),\n      canisterId,\n    })\n  );\n\nexport const toListProposalsResponse = ({\n  proposal_info,\n}: RawListProposalInfoResponse): ListProposalsResponse => ({\n  proposals: proposal_info.map(toProposalInfo),\n});\n\nexport const toKnownNeuron = ({\n  id,\n  known_neuron_data,\n}: RawKnownNeuron): KnownNeuron => {\n  return {\n    id: id[0]?.id ?? BigInt(0),\n    name: known_neuron_data[0]?.name ?? \"\",\n    description: known_neuron_data[0]?.description[0] ?? \"\",\n  };\n};\n\nconst convertPbBallot = (pbBallot: PbBallotInfo): BallotInfo => {\n  const pbProposalId = pbBallot.getProposalId();\n  return {\n    vote: pbBallot.getVote(),\n    proposalId:\n      pbProposalId !== undefined ? BigInt(pbProposalId.getId()) : undefined,\n  };\n};\n\nconst pbNeuronToNeuronState = (neuron?: PbNeuron): NeuronState => {\n  if (neuron?.hasWhenDissolvedTimestampSeconds()) {\n    return NeuronState.Dissolving;\n  }\n  if (neuron?.hasDissolveDelaySeconds()) {\n    const delay = neuron.getDissolveDelaySeconds();\n    if (delay === \"0\") {\n      return NeuronState.Dissolved;\n    }\n    return NeuronState.Locked;\n  }\n  return NeuronState.Unspecified;\n};\n\nconst convertPbFolloweesMapToFollowees = (\n  pbFolloweesMap: Map<number, PbNeuron.Followees>\n): Followees[] => {\n  return pbFolloweesMap.toArray().map(([topicString, pbFollowees]) => {\n    return {\n      topic: Number(topicString),\n      followees:\n        pbFollowees\n          .getFolloweesList?.()\n          .map((neuronId) => BigInt(neuronId.getId())) ?? [],\n    };\n  });\n};\n\nconst convertPbPrincipalIdToPrincipalString = (\n  pbPrincipal: PrincipalId\n): string =>\n  Principal.fromUint8Array(pbPrincipal.getSerializedId_asU8()).toText();\n\nconst convertNeuronSubaccountToAccountIdentifier = ({\n  neuron,\n  canisterId,\n}: {\n  neuron: PbNeuron;\n  canisterId: Principal;\n}): AccountIdentifier => {\n  // We assume fromBytes does not return an Error type.\n  const subAccount = SubAccount.fromBytes(\n    neuron.getAccount_asU8()\n  ) as SubAccount;\n\n  return AccountIdentifier.fromPrincipal({\n    principal: canisterId,\n    subAccount: subAccount,\n  });\n};\n\nconst convertPbNeuronToFullNeuron = ({\n  pbNeuron,\n  pbNeuronInfo,\n  canisterId,\n}: {\n  pbNeuron: PbNeuron;\n  pbNeuronInfo: PbNeuronInfo;\n  canisterId: Principal;\n}): Neuron => {\n  const idObj = pbNeuron.getId();\n  const pbController = pbNeuron.getController();\n  const controller =\n    pbController === undefined\n      ? pbController\n      : convertPbPrincipalIdToPrincipalString(pbController);\n  let dissolveState = undefined;\n  if (pbNeuron.hasWhenDissolvedTimestampSeconds()) {\n    dissolveState = {\n      WhenDissolvedTimestampSeconds: BigInt(\n        pbNeuron.getWhenDissolvedTimestampSeconds()\n      ),\n    };\n  } else if (pbNeuron.hasDissolveDelaySeconds()) {\n    dissolveState = {\n      DissolveDelaySeconds: BigInt(pbNeuron.getDissolveDelaySeconds()),\n    };\n  }\n  return {\n    id: idObj === undefined ? undefined : BigInt(idObj.getId()),\n    // TODO: Data not available in Neuron type\n    stakedMaturityE8sEquivalent: undefined,\n    controller,\n    recentBallots: pbNeuronInfo.getRecentBallotsList().map(convertPbBallot),\n    kycVerified: pbNeuron.getKycVerified(),\n    notForProfit: pbNeuron.getNotForProfit(),\n    cachedNeuronStake: BigInt(pbNeuron.getCachedNeuronStakeE8s()),\n    createdTimestampSeconds: BigInt(pbNeuron.getCreatedTimestampSeconds()),\n    // TODO: Data not available in Neuron type\n    autoStakeMaturity: undefined,\n    maturityE8sEquivalent: BigInt(pbNeuron.getMaturityE8sEquivalent()),\n    agingSinceTimestampSeconds: BigInt(\n      pbNeuron.getAgingSinceTimestampSeconds()\n    ),\n    spawnAtTimesSeconds: pbNeuron.hasSpawnAtTimestampSeconds()\n      ? BigInt(pbNeuron.getSpawnAtTimestampSeconds())\n      : undefined,\n    neuronFees: BigInt(pbNeuron.getNeuronFeesE8s()),\n    hotKeys: pbNeuron\n      .getHotKeysList()\n      .map(convertPbPrincipalIdToPrincipalString),\n    accountIdentifier: convertNeuronSubaccountToAccountIdentifier({\n      neuron: pbNeuron,\n      canisterId,\n    }).toHex(),\n    // TODO: Data not available in Neuron type\n    joinedCommunityFundTimestampSeconds: undefined,\n    dissolveState,\n    followees: convertPbFolloweesMapToFollowees(pbNeuron.getFolloweesMap()),\n  };\n};\n\nexport const convertPbNeuronToNeuronInfo =\n  ({\n    pbNeurons,\n    canisterId,\n  }: {\n    pbNeurons: PbNeuron[];\n    canisterId: Principal;\n  }) =>\n  (pbNeuronMapEntry: ListNeuronsResponse.NeuronMapEntry): NeuronInfo => {\n    const pbNeuron = pbNeurons.find(\n      (pbNeuron) => pbNeuron.getId()?.getId() === pbNeuronMapEntry.getKey()\n    );\n    const pbNeuronInfo = pbNeuronMapEntry.getValue();\n    if (pbNeuronInfo === undefined) {\n      throw new Error(\n        `NeuronInfo not present for neuron ${pbNeuronMapEntry.getKey()}`\n      );\n    }\n    return {\n      neuronId: BigInt(pbNeuronMapEntry.getKey()),\n      dissolveDelaySeconds: BigInt(pbNeuronInfo.getDissolveDelaySeconds()),\n      recentBallots: pbNeuronInfo.getRecentBallotsList().map(convertPbBallot),\n      createdTimestampSeconds: BigInt(\n        pbNeuronInfo.getCreatedTimestampSeconds()\n      ),\n      state: pbNeuronToNeuronState(pbNeuron),\n      // TODO: Data not available in Neuron type\n      joinedCommunityFundTimestampSeconds: undefined,\n      retrievedAtTimestampSeconds: BigInt(\n        pbNeuronInfo.getRetrievedAtTimestampSeconds()\n      ),\n      votingPower: BigInt(pbNeuronInfo.getVotingPower()),\n      ageSeconds: BigInt(pbNeuronInfo.getAgeSeconds()),\n      fullNeuron:\n        pbNeuron === undefined\n          ? undefined\n          : convertPbNeuronToFullNeuron({ pbNeuron, pbNeuronInfo, canisterId }),\n    };\n  };\n", "// The Candid files are generated from Proto. That's why the enums are currently lost in the conversion process.\n// These enums are used to map back numbers provided by the backend through the Candid declaration.\n// We use Pascal case for consistency reason.\n//\n// Proto source: https://github.com/dfinity/ic/blob/master/rs/nns/governance/proto/icNns_governance/pb/v1/governance.proto\n\nexport enum NeuronState {\n  Unspecified = 0,\n  Locked = 1,\n  Dissolving = 2,\n  Dissolved = 3,\n  Spawning = 4,\n}\n\nexport enum Topic {\n  Unspecified = 0,\n  ManageNeuron = 1,\n  ExchangeRate = 2,\n  NetworkEconomics = 3,\n  Governance = 4,\n  NodeAdmin = 5,\n  ParticipantManagement = 6,\n  SubnetManagement = 7,\n  NetworkCanisterManagement = 8,\n  Kyc = 9,\n  NodeProviderRewards = 10,\n  SnsDecentralizationSale = 11,\n}\n\n// The proposal status, with respect to reward distribution.\n// See also ProposalStatus.\nexport enum ProposalRewardStatus {\n  Unknown = 0,\n\n  // The proposal still accept votes, for the purpose of\n  // vote rewards. This implies nothing on the ProposalStatus.\n  AcceptVotes = 1,\n\n  // The proposal no longer accepts votes. It is due to settle\n  // at the next reward event.\n  ReadyToSettle = 2,\n\n  // The proposal has been taken into account in a reward event.\n  Settled = 3,\n\n  // The proposal is not eligible to be taken into account in a reward event.\n  Ineligible = 4,\n}\n\n// The proposal status, with respect to decision making and execution.\n// See also ProposalRewardStatus.\nexport enum ProposalStatus {\n  Unknown = 0,\n\n  // A decision (accept/reject) has yet to be made.\n  Open = 1,\n\n  // The proposal has been rejected.\n  Rejected = 2,\n\n  // The proposal has been accepted. At this time, either execution\n  // as not yet started, or it has but the outcome is not yet known.\n  Accepted = 3,\n\n  // The proposal was accepted and successfully executed.\n  Executed = 4,\n\n  // The proposal was accepted, but execution failed.\n  Failed = 5,\n}\n\nexport enum Vote {\n  Unspecified = 0,\n  Yes = 1,\n  No = 2,\n}\n\nexport enum NnsFunction {\n  Unspecified = 0,\n  CreateSubnet = 1,\n  AddNodeToSubnet = 2,\n  NnsCanisterInstall = 3,\n  NnsCanisterUpgrade = 4,\n  BlessReplicaVersion = 5,\n  RecoverSubnet = 6,\n  UpdateConfigOfSubnet = 7,\n  AssignNoid = 8,\n  NnsRootUpgrade = 9,\n  IcpXdrConversionRate = 10,\n  UpdateSubnetReplicaVersion = 11,\n  ClearProvisionalWhitelist = 12,\n  RemoveNodesFromSubnet = 13,\n  SetAuthorizedSubnetworks = 14,\n  SetFirewallConfig = 15,\n  UpdateNodeOperatorConfig = 16,\n  StopOrStartNnsCanister = 17,\n  RemoveNodes = 18,\n  UninstallCode = 19,\n  UpdateNodeRewardsTable = 20,\n  AddOrRemoveDataCenters = 21,\n  UpdateUnassignedNodesConfig = 22,\n  RemoveNodeOperators = 23,\n  RerouteCanisterRanges = 24,\n  AddFirewallRules = 25,\n  RemoveFirewallRules = 26,\n  UpdateFirewallRules = 27,\n  PrepareCanisterMigration = 28,\n  CompleteCanisterMigration = 29,\n  AddSnsWasm = 30,\n}\n", "import { ManageNeuronResponse as PbManageNeuronResponse } from \"../../../proto/governance_pb\";\nimport { GovernanceError } from \"../../errors/governance.errors\";\n\nexport const checkPbManageNeuronResponse = (rawResponse: Uint8Array): void => {\n  const response = PbManageNeuronResponse.deserializeBinary(rawResponse);\n  const err = response.getError();\n  if (err) {\n    throw new GovernanceError({\n      error_message: err.getErrorMessage(),\n      error_type: err.getErrorType(),\n    });\n  }\n};\n", "import type {\n  Command_1,\n  ManageNeuron,\n  ManageNeuronResponse,\n  _SERVICE as GovernanceService,\n} from \"../../../candid/governance\";\nimport { GovernanceError } from \"../../errors/governance.errors\";\n\n/**\n * Checks a Manage Neuron Response for error and returns successful response data.\n *\n * @throws {@link GovernanceError}\n */\nexport const getSuccessfulCommandFromResponse = (\n  response: ManageNeuronResponse\n): Command_1 => {\n  const { command } = response;\n  const data = command[0];\n  if (!data) {\n    throw new GovernanceError({\n      error_message: \"Error updating neuron\",\n      error_type: 0,\n    });\n  }\n\n  if (\"Error\" in data) {\n    throw new GovernanceError(data.Error);\n  }\n  return data;\n};\n\n/**\n * @throws {@link GovernanceError}\n */\nexport const manageNeuron = async ({\n  request,\n  service,\n}: {\n  request: ManageNeuron;\n  service: GovernanceService;\n}): Promise<void> => {\n  const response = await service.manage_neuron(request);\n  // We use it only to assert that there are no errors\n  getSuccessfulCommandFromResponse(response);\n};\n", "import { InvalidAccountIDError } from \"../errors/governance.errors\";\nimport { calculateCrc32 } from \"./converter.utils\";\n\n/**\n * Checks account id check sum\n *\n * @throws InvalidAccountIDError\n */\nexport const checkAccountId = (accountId: string): void => {\n  // Verify the checksum of the given address.\n  if (accountId.length != 64) {\n    throw new InvalidAccountIDError(\n      `Invalid account identifier ${accountId}. The account identifier must be 64 chars in length.`\n    );\n  }\n\n  const toAccountBytes = Buffer.from(accountId, \"hex\");\n  const foundChecksum = toAccountBytes.slice(0, 4);\n  const expectedCheckum = Buffer.from(calculateCrc32(toAccountBytes.slice(4)));\n  if (!expectedCheckum.equals(foundChecksum)) {\n    throw new InvalidAccountIDError(\n      `Account identifier ${accountId} has an invalid checksum. Are you sure the account identifier is correct?\\n\\nExpected checksum: ${expectedCheckum.toString(\n        \"hex\"\n      )}\\nFound checksum: ${foundChecksum.toString(\"hex\")}`\n    );\n  }\n};\n", "import { InvalidPercentageError } from \"../errors/governance.errors\";\n\nexport const assertPercentageNumber = (percentage: number) => {\n  if (percentage < 0 || percentage > 100) {\n    throw new InvalidPercentageError(\n      `${percentage} is not a valid percentage number.`\n    );\n  }\n};\n"],
  "mappings": "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",
  "names": []
}
