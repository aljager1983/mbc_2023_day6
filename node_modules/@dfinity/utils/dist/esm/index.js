import{Actor as c}from"@dfinity/agent";import{AnonymousIdentity as m,HttpAgent as s}from"@dfinity/agent";var a=()=>new s({host:"https://ic0.app",identity:new m}),d=async({identity:t,host:r,fetchRootKey:e=!1})=>{let n=new s({identity:t,...r!==void 0&&{host:r}});return e&&await n.fetchRootKey(),n};var U=({options:{canisterId:t,serviceOverride:r,certifiedServiceOverride:e,agent:n},idlFactory:y,certifiedIdlFactory:f})=>{let o=n??a(),A=r??c.createActor(y,{agent:o,canisterId:t}),u=e??c.createActor(f,{agent:o,canisterId:t});return{service:A,certifiedService:u,agent:o,canisterId:t}};var w=t=>{let r=new DataView(t.buffer,t.byteOffset,t.byteLength);if(typeof r.getBigUint64=="function")return r.getBigUint64(0);{let e=BigInt(r.getUint32(0)),n=BigInt(r.getUint32(4));return(e<<BigInt(32))+n}},h=t=>new Uint8Array(t),N=t=>Array.from(t),O=t=>new Uint8Array(t),S=t=>Array.from(t).map(r=>r.charCodeAt(0));var i=class extends Error{},p=(t,r)=>{if(t==null)throw new i(r)};var P=t=>t?[t]:[],l=t=>t?.[0],D=t=>{let r=l(t);return p(r),r};var F=t=>{let r=t.toUint8Array(),e=new Uint8Array(32);return e[0]=r.length,e.set(r,1),e};export{i as NullishError,h as arrayBufferToUint8Array,O as arrayOfNumberToUint8Array,S as asciiStringToByteArray,p as assertNonNullish,d as createAgent,U as createServices,a as defaultAgent,D as fromDefinedNullable,l as fromNullable,F as principalToSubAccount,P as toNullable,N as uint8ArrayToArrayOfNumber,w as uint8ArrayToBigInt};
//# sourceMappingURL=index.js.map
